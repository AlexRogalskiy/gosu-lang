package gw.spec.core.expressions.arithmetic.multiplication
uses java.lang.Byte
uses java.lang.Character
uses java.lang.Integer
uses java.lang.Short
uses java.lang.Long
uses java.lang.Float
uses java.lang.Double
uses java.math.BigInteger
uses java.math.BigDecimal
uses gw.spec.core.expressions.arithmetic.ArithmeticTestBase

class Multiplication_DoubleTest extends ArithmeticTestBase {

  function testDoublePByteMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * p_byte(0))
    assertEquals(b_double(0.0), b_double(0.0) * p_byte(1))
    assertEquals(b_double(-0.0), b_double(0.0) * p_byte(-1))
    assertEquals(b_double(0.0), b_double(0.0) * p_byte(23))
    assertEquals(b_double(-0.0), b_double(0.0) * p_byte(-32))
    assertEquals(b_double(0.0), b_double(0.0) * p_byte(Byte.MAX_VALUE))
    assertEquals(b_double(-0.0), b_double(0.0) * p_byte(Byte.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * p_byte(0))
    assertEquals(b_double(1.0), b_double(1.0) * p_byte(1))
    assertEquals(b_double(-1.0), b_double(1.0) * p_byte(-1))
    assertEquals(b_double(23.0), b_double(1.0) * p_byte(23))
    assertEquals(b_double(-32.0), b_double(1.0) * p_byte(-32))
    assertEquals(b_double(127.0), b_double(1.0) * p_byte(Byte.MAX_VALUE))
    assertEquals(b_double(-128.0), b_double(1.0) * p_byte(Byte.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * p_byte(0))
    assertEquals(b_double(-1.0), b_double(-1.0) * p_byte(1))
    assertEquals(b_double(1.0), b_double(-1.0) * p_byte(-1))
    assertEquals(b_double(-23.0), b_double(-1.0) * p_byte(23))
    assertEquals(b_double(32.0), b_double(-1.0) * p_byte(-32))
    assertEquals(b_double(-127.0), b_double(-1.0) * p_byte(Byte.MAX_VALUE))
    assertEquals(b_double(128.0), b_double(-1.0) * p_byte(Byte.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * p_byte(0))
    assertEquals(b_double(23.0), b_double(23.0) * p_byte(1))
    assertEquals(b_double(-23.0), b_double(23.0) * p_byte(-1))
    assertEquals(b_double(529.0), b_double(23.0) * p_byte(23))
    assertEquals(b_double(-736.0), b_double(23.0) * p_byte(-32))
    assertEquals(b_double(2921.0), b_double(23.0) * p_byte(Byte.MAX_VALUE))
    assertEquals(b_double(-2944.0), b_double(23.0) * p_byte(Byte.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * p_byte(0))
    assertEquals(b_double(23.123), b_double(23.123) * p_byte(1))
    assertEquals(b_double(-23.123), b_double(23.123) * p_byte(-1))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * p_byte(23))
    assertEquals(b_double(-739.936), b_double(23.123) * p_byte(-32))
    assertEquals(b_double(2936.621), b_double(23.123) * p_byte(Byte.MAX_VALUE))
    assertEquals(b_double(-2959.744), b_double(23.123) * p_byte(Byte.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * p_byte(0))
    assertEquals(b_double(-32.0), b_double(-32.0) * p_byte(1))
    assertEquals(b_double(32.0), b_double(-32.0) * p_byte(-1))
    assertEquals(b_double(-736.0), b_double(-32.0) * p_byte(23))
    assertEquals(b_double(1024.0), b_double(-32.0) * p_byte(-32))
    assertEquals(b_double(-4064.0), b_double(-32.0) * p_byte(Byte.MAX_VALUE))
    assertEquals(b_double(4096.0), b_double(-32.0) * p_byte(Byte.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * p_byte(0))
    assertEquals(b_double(-32.456), b_double(-32.456) * p_byte(1))
    assertEquals(b_double(32.456), b_double(-32.456) * p_byte(-1))
    assertEquals(b_double(-746.488), b_double(-32.456) * p_byte(23))
    assertEquals(b_double(1038.592), b_double(-32.456) * p_byte(-32))
    assertEquals(b_double(-4121.912), b_double(-32.456) * p_byte(Byte.MAX_VALUE))
    assertEquals(b_double(4154.368), b_double(-32.456) * p_byte(Byte.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * p_byte(0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_byte(1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_byte(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_byte(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_byte(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_byte(Byte.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_byte(Byte.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * p_byte(0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_byte(1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_byte(-1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_byte(23))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_byte(-32))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_byte(Byte.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_byte(Byte.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_byte(0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_byte(1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_byte(-1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_byte(23))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_byte(-32))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_byte(Byte.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_byte(Byte.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * p_byte(0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * p_byte(1))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(Double.MAX_VALUE) * p_byte(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_byte(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_byte(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_byte(Byte.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_byte(Byte.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * p_byte(0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * p_byte(1))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(Double.MIN_VALUE) * p_byte(-1))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * p_byte(23))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * p_byte(-32))
    assertEquals(b_double(Double.parseDouble("6.27E-322")), b_double(Double.MIN_VALUE) * p_byte(Byte.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-6.32E-322")), b_double(Double.MIN_VALUE) * p_byte(Byte.MIN_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * p_byte(0)))
  }

  function testDoubleByteMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * b_byte(0))
    assertEquals(b_double(0.0), b_double(0.0) * p_byte(1))
    assertEquals(b_double(-0.0), b_double(0.0) * p_byte(-1))
    assertEquals(b_double(0.0), b_double(0.0) * b_byte(23))
    assertEquals(b_double(-0.0), b_double(0.0) * b_byte(-32))
    assertEquals(b_double(0.0), b_double(0.0) * b_byte(Byte.MAX_VALUE))
    assertEquals(b_double(-0.0), b_double(0.0) * b_byte(Byte.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * b_byte(0))
    assertEquals(b_double(1.0), b_double(1.0) * p_byte(1))
    assertEquals(b_double(-1.0), b_double(1.0) * p_byte(-1))
    assertEquals(b_double(23.0), b_double(1.0) * b_byte(23))
    assertEquals(b_double(-32.0), b_double(1.0) * b_byte(-32))
    assertEquals(b_double(127.0), b_double(1.0) * b_byte(Byte.MAX_VALUE))
    assertEquals(b_double(-128.0), b_double(1.0) * b_byte(Byte.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * b_byte(0))
    assertEquals(b_double(-1.0), b_double(-1.0) * p_byte(1))
    assertEquals(b_double(1.0), b_double(-1.0) * p_byte(-1))
    assertEquals(b_double(-23.0), b_double(-1.0) * b_byte(23))
    assertEquals(b_double(32.0), b_double(-1.0) * b_byte(-32))
    assertEquals(b_double(-127.0), b_double(-1.0) * b_byte(Byte.MAX_VALUE))
    assertEquals(b_double(128.0), b_double(-1.0) * b_byte(Byte.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * b_byte(0))
    assertEquals(b_double(23.0), b_double(23.0) * p_byte(1))
    assertEquals(b_double(-23.0), b_double(23.0) * p_byte(-1))
    assertEquals(b_double(529.0), b_double(23.0) * b_byte(23))
    assertEquals(b_double(-736.0), b_double(23.0) * b_byte(-32))
    assertEquals(b_double(2921.0), b_double(23.0) * b_byte(Byte.MAX_VALUE))
    assertEquals(b_double(-2944.0), b_double(23.0) * b_byte(Byte.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * b_byte(0))
    assertEquals(b_double(23.123), b_double(23.123) * p_byte(1))
    assertEquals(b_double(-23.123), b_double(23.123) * p_byte(-1))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * b_byte(23))
    assertEquals(b_double(-739.936), b_double(23.123) * b_byte(-32))
    assertEquals(b_double(2936.621), b_double(23.123) * b_byte(Byte.MAX_VALUE))
    assertEquals(b_double(-2959.744), b_double(23.123) * b_byte(Byte.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * b_byte(0))
    assertEquals(b_double(-32.0), b_double(-32.0) * p_byte(1))
    assertEquals(b_double(32.0), b_double(-32.0) * p_byte(-1))
    assertEquals(b_double(-736.0), b_double(-32.0) * b_byte(23))
    assertEquals(b_double(1024.0), b_double(-32.0) * b_byte(-32))
    assertEquals(b_double(-4064.0), b_double(-32.0) * b_byte(Byte.MAX_VALUE))
    assertEquals(b_double(4096.0), b_double(-32.0) * b_byte(Byte.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * b_byte(0))
    assertEquals(b_double(-32.456), b_double(-32.456) * p_byte(1))
    assertEquals(b_double(32.456), b_double(-32.456) * p_byte(-1))
    assertEquals(b_double(-746.488), b_double(-32.456) * b_byte(23))
    assertEquals(b_double(1038.592), b_double(-32.456) * b_byte(-32))
    assertEquals(b_double(-4121.912), b_double(-32.456) * b_byte(Byte.MAX_VALUE))
    assertEquals(b_double(4154.368), b_double(-32.456) * b_byte(Byte.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * b_byte(0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_byte(1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_byte(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_byte(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_byte(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_byte(Byte.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_byte(Byte.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * b_byte(0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_byte(1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_byte(-1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_byte(23))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_byte(-32))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_byte(Byte.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_byte(Byte.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_byte(0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_byte(1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_byte(-1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_byte(23))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_byte(-32))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_byte(Byte.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_byte(Byte.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * b_byte(0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * p_byte(1))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(Double.MAX_VALUE) * p_byte(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_byte(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_byte(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_byte(Byte.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_byte(Byte.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * b_byte(0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * p_byte(1))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(Double.MIN_VALUE) * p_byte(-1))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * b_byte(23))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * b_byte(-32))
    assertEquals(b_double(Double.parseDouble("6.27E-322")), b_double(Double.MIN_VALUE) * b_byte(Byte.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-6.32E-322")), b_double(Double.MIN_VALUE) * b_byte(Byte.MIN_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * b_byte(0)))
  }

  function testDoublePShortMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * p_short(0))
    assertEquals(b_double(0.0), b_double(0.0) * p_short(1))
    assertEquals(b_double(-0.0), b_double(0.0) * p_short(-1))
    assertEquals(b_double(0.0), b_double(0.0) * p_short(23))
    assertEquals(b_double(-0.0), b_double(0.0) * p_short(-32))
    assertEquals(b_double(0.0), b_double(0.0) * p_short(Short.MAX_VALUE))
    assertEquals(b_double(-0.0), b_double(0.0) * p_short(Short.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * p_short(0))
    assertEquals(b_double(1.0), b_double(1.0) * p_short(1))
    assertEquals(b_double(-1.0), b_double(1.0) * p_short(-1))
    assertEquals(b_double(23.0), b_double(1.0) * p_short(23))
    assertEquals(b_double(-32.0), b_double(1.0) * p_short(-32))
    assertEquals(b_double(32767.0), b_double(1.0) * p_short(Short.MAX_VALUE))
    assertEquals(b_double(-32768.0), b_double(1.0) * p_short(Short.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * p_short(0))
    assertEquals(b_double(-1.0), b_double(-1.0) * p_short(1))
    assertEquals(b_double(1.0), b_double(-1.0) * p_short(-1))
    assertEquals(b_double(-23.0), b_double(-1.0) * p_short(23))
    assertEquals(b_double(32.0), b_double(-1.0) * p_short(-32))
    assertEquals(b_double(-32767.0), b_double(-1.0) * p_short(Short.MAX_VALUE))
    assertEquals(b_double(32768.0), b_double(-1.0) * p_short(Short.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * p_short(0))
    assertEquals(b_double(23.0), b_double(23.0) * p_short(1))
    assertEquals(b_double(-23.0), b_double(23.0) * p_short(-1))
    assertEquals(b_double(529.0), b_double(23.0) * p_short(23))
    assertEquals(b_double(-736.0), b_double(23.0) * p_short(-32))
    assertEquals(b_double(753641.0), b_double(23.0) * p_short(Short.MAX_VALUE))
    assertEquals(b_double(-753664.0), b_double(23.0) * p_short(Short.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * p_short(0))
    assertEquals(b_double(23.123), b_double(23.123) * p_short(1))
    assertEquals(b_double(-23.123), b_double(23.123) * p_short(-1))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * p_short(23))
    assertEquals(b_double(-739.936), b_double(23.123) * p_short(-32))
    assertEquals(b_double(757671.341), b_double(23.123) * p_short(Short.MAX_VALUE))
    assertEquals(b_double(-757694.464), b_double(23.123) * p_short(Short.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * p_short(0))
    assertEquals(b_double(-32.0), b_double(-32.0) * p_short(1))
    assertEquals(b_double(32.0), b_double(-32.0) * p_short(-1))
    assertEquals(b_double(-736.0), b_double(-32.0) * p_short(23))
    assertEquals(b_double(1024.0), b_double(-32.0) * p_short(-32))
    assertEquals(b_double(-1048544.0), b_double(-32.0) * p_short(Short.MAX_VALUE))
    assertEquals(b_double(1048576.0), b_double(-32.0) * p_short(Short.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * p_short(0))
    assertEquals(b_double(-32.456), b_double(-32.456) * p_short(1))
    assertEquals(b_double(32.456), b_double(-32.456) * p_short(-1))
    assertEquals(b_double(-746.488), b_double(-32.456) * p_short(23))
    assertEquals(b_double(1038.592), b_double(-32.456) * p_short(-32))
    assertEquals(b_double(-1063485.752), b_double(-32.456) * p_short(Short.MAX_VALUE))
    assertEquals(b_double(1063518.208), b_double(-32.456) * p_short(Short.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * p_short(0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_short(1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_short(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_short(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_short(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_short(Short.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_short(Short.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * p_short(0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_short(1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_short(-1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_short(23))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_short(-32))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_short(Short.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_short(Short.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_short(0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_short(1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_short(-1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_short(23))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_short(-32))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_short(Short.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_short(Short.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * p_short(0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * p_short(1))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(Double.MAX_VALUE) * p_short(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_short(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_short(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_short(Short.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_short(Short.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * p_short(0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * p_short(1))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(Double.MIN_VALUE) * p_short(-1))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * p_short(23))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * p_short(-32))
    assertEquals(b_double(Double.parseDouble("1.6189E-319")), b_double(Double.MIN_VALUE) * p_short(Short.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-1.61895E-319")), b_double(Double.MIN_VALUE) * p_short(Short.MIN_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * p_short(0)))
  }

  function testDoubleShortMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * b_short(0))
    assertEquals(b_double(0.0), b_double(0.0) * b_short(1))
    assertEquals(b_double(-0.0), b_double(0.0) * b_short(-1))
    assertEquals(b_double(0.0), b_double(0.0) * b_short(23))
    assertEquals(b_double(-0.0), b_double(0.0) * b_short(-32))
    assertEquals(b_double(0.0), b_double(0.0) * b_short(Short.MAX_VALUE))
    assertEquals(b_double(-0.0), b_double(0.0) * b_short(Short.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * b_short(0))
    assertEquals(b_double(1.0), b_double(1.0) * b_short(1))
    assertEquals(b_double(-1.0), b_double(1.0) * b_short(-1))
    assertEquals(b_double(23.0), b_double(1.0) * b_short(23))
    assertEquals(b_double(-32.0), b_double(1.0) * b_short(-32))
    assertEquals(b_double(32767.0), b_double(1.0) * b_short(Short.MAX_VALUE))
    assertEquals(b_double(-32768.0), b_double(1.0) * b_short(Short.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * b_short(0))
    assertEquals(b_double(-1.0), b_double(-1.0) * b_short(1))
    assertEquals(b_double(1.0), b_double(-1.0) * b_short(-1))
    assertEquals(b_double(-23.0), b_double(-1.0) * b_short(23))
    assertEquals(b_double(32.0), b_double(-1.0) * b_short(-32))
    assertEquals(b_double(-32767.0), b_double(-1.0) * b_short(Short.MAX_VALUE))
    assertEquals(b_double(32768.0), b_double(-1.0) * b_short(Short.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * b_short(0))
    assertEquals(b_double(23.0), b_double(23.0) * b_short(1))
    assertEquals(b_double(-23.0), b_double(23.0) * b_short(-1))
    assertEquals(b_double(529.0), b_double(23.0) * b_short(23))
    assertEquals(b_double(-736.0), b_double(23.0) * b_short(-32))
    assertEquals(b_double(753641.0), b_double(23.0) * b_short(Short.MAX_VALUE))
    assertEquals(b_double(-753664.0), b_double(23.0) * b_short(Short.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * b_short(0))
    assertEquals(b_double(23.123), b_double(23.123) * b_short(1))
    assertEquals(b_double(-23.123), b_double(23.123) * b_short(-1))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * b_short(23))
    assertEquals(b_double(-739.936), b_double(23.123) * b_short(-32))
    assertEquals(b_double(757671.341), b_double(23.123) * b_short(Short.MAX_VALUE))
    assertEquals(b_double(-757694.464), b_double(23.123) * b_short(Short.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * b_short(0))
    assertEquals(b_double(-32.0), b_double(-32.0) * b_short(1))
    assertEquals(b_double(32.0), b_double(-32.0) * b_short(-1))
    assertEquals(b_double(-736.0), b_double(-32.0) * b_short(23))
    assertEquals(b_double(1024.0), b_double(-32.0) * b_short(-32))
    assertEquals(b_double(-1048544.0), b_double(-32.0) * b_short(Short.MAX_VALUE))
    assertEquals(b_double(1048576.0), b_double(-32.0) * b_short(Short.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * b_short(0))
    assertEquals(b_double(-32.456), b_double(-32.456) * b_short(1))
    assertEquals(b_double(32.456), b_double(-32.456) * b_short(-1))
    assertEquals(b_double(-746.488), b_double(-32.456) * b_short(23))
    assertEquals(b_double(1038.592), b_double(-32.456) * b_short(-32))
    assertEquals(b_double(-1063485.752), b_double(-32.456) * b_short(Short.MAX_VALUE))
    assertEquals(b_double(1063518.208), b_double(-32.456) * b_short(Short.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * b_short(0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_short(1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_short(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_short(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_short(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_short(Short.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_short(Short.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * b_short(0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_short(1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_short(-1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_short(23))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_short(-32))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_short(Short.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_short(Short.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_short(0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_short(1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_short(-1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_short(23))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_short(-32))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_short(Short.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_short(Short.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * b_short(0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * b_short(1))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(Double.MAX_VALUE) * b_short(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_short(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_short(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_short(Short.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_short(Short.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * b_short(0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * b_short(1))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(Double.MIN_VALUE) * b_short(-1))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * b_short(23))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * b_short(-32))
    assertEquals(b_double(Double.parseDouble("1.6189E-319")), b_double(Double.MIN_VALUE) * b_short(Short.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-1.61895E-319")), b_double(Double.MIN_VALUE) * b_short(Short.MIN_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * b_short(0)))
  }

  function testDoublePCharMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * p_char(0))
    assertEquals(b_double(0.0), b_double(0.0) * p_char(1))
    assertEquals(b_double(0.0), b_double(0.0) * p_char(23))
    assertEquals(b_double(0.0), b_double(0.0) * p_char(Character.MAX_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * p_char(0))
    assertEquals(b_double(1.0), b_double(1.0) * p_char(1))
    assertEquals(b_double(23.0), b_double(1.0) * p_char(23))
    assertEquals(b_double(65535.0), b_double(1.0) * p_char(Character.MAX_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * p_char(0))
    assertEquals(b_double(-1.0), b_double(-1.0) * p_char(1))
    assertEquals(b_double(-23.0), b_double(-1.0) * p_char(23))
    assertEquals(b_double(-65535.0), b_double(-1.0) * p_char(Character.MAX_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * p_char(0))
    assertEquals(b_double(23.0), b_double(23.0) * p_char(1))
    assertEquals(b_double(529.0), b_double(23.0) * p_char(23))
    assertEquals(b_double(1507305.0), b_double(23.0) * p_char(Character.MAX_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * p_char(0))
    assertEquals(b_double(23.123), b_double(23.123) * p_char(1))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * p_char(23))
    assertEquals(b_double(1515365.8050000002), b_double(23.123) * p_char(Character.MAX_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * p_char(0))
    assertEquals(b_double(-32.0), b_double(-32.0) * p_char(1))
    assertEquals(b_double(-736.0), b_double(-32.0) * p_char(23))
    assertEquals(b_double(-2097120.0), b_double(-32.0) * p_char(Character.MAX_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * p_char(0))
    assertEquals(b_double(-32.456), b_double(-32.456) * p_char(1))
    assertEquals(b_double(-746.488), b_double(-32.456) * p_char(23))
    assertEquals(b_double(-2127003.9600000004), b_double(-32.456) * p_char(Character.MAX_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * p_char(0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_char(1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_char(23))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_char(Character.MAX_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * p_char(0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_char(1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_char(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_char(Character.MAX_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_char(0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_char(1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_char(23))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_char(Character.MAX_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * p_char(0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * p_char(1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_char(23))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_char(Character.MAX_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * p_char(0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * p_char(1))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * p_char(23))
    assertEquals(b_double(Double.parseDouble("3.23786E-319")), b_double(Double.MIN_VALUE) * p_char(Character.MAX_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * p_char(0)))
  }

  function testDoubleCharacterMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * b_char(0))
    assertEquals(b_double(0.0), b_double(0.0) * b_char(1))
    assertEquals(b_double(0.0), b_double(0.0) * b_char(23))
    assertEquals(b_double(0.0), b_double(0.0) * b_char(Character.MAX_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * b_char(0))
    assertEquals(b_double(1.0), b_double(1.0) * b_char(1))
    assertEquals(b_double(23.0), b_double(1.0) * b_char(23))
    assertEquals(b_double(65535.0), b_double(1.0) * b_char(Character.MAX_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * b_char(0))
    assertEquals(b_double(-1.0), b_double(-1.0) * b_char(1))
    assertEquals(b_double(-23.0), b_double(-1.0) * b_char(23))
    assertEquals(b_double(-65535.0), b_double(-1.0) * b_char(Character.MAX_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * b_char(0))
    assertEquals(b_double(23.0), b_double(23.0) * b_char(1))
    assertEquals(b_double(529.0), b_double(23.0) * b_char(23))
    assertEquals(b_double(1507305.0), b_double(23.0) * b_char(Character.MAX_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * b_char(0))
    assertEquals(b_double(23.123), b_double(23.123) * b_char(1))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * b_char(23))
    assertEquals(b_double(1515365.8050000002), b_double(23.123) * b_char(Character.MAX_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * b_char(0))
    assertEquals(b_double(-32.0), b_double(-32.0) * b_char(1))
    assertEquals(b_double(-736.0), b_double(-32.0) * b_char(23))
    assertEquals(b_double(-2097120.0), b_double(-32.0) * b_char(Character.MAX_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * b_char(0))
    assertEquals(b_double(-32.456), b_double(-32.456) * b_char(1))
    assertEquals(b_double(-746.488), b_double(-32.456) * b_char(23))
    assertEquals(b_double(-2127003.9600000004), b_double(-32.456) * b_char(Character.MAX_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * b_char(0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_char(1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_char(23))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_char(Character.MAX_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * b_char(0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_char(1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_char(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_char(Character.MAX_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_char(0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_char(1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_char(23))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_char(Character.MAX_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * b_char(0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * b_char(1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_char(23))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_char(Character.MAX_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * b_char(0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * b_char(1))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * b_char(23))
    assertEquals(b_double(Double.parseDouble("3.23786E-319")), b_double(Double.MIN_VALUE) * b_char(Character.MAX_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * b_char(0)))
  }

  function testDoublePIntMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * p_int(0))
    assertEquals(b_double(0.0), b_double(0.0) * p_int(1))
    assertEquals(b_double(-0.0), b_double(0.0) * p_int(-1))
    assertEquals(b_double(0.0), b_double(0.0) * p_int(23))
    assertEquals(b_double(-0.0), b_double(0.0) * p_int(-32))
    assertEquals(b_double(0.0), b_double(0.0) * p_int(Integer.MAX_VALUE))
    assertEquals(b_double(-0.0), b_double(0.0) * p_int(Integer.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * p_int(0))
    assertEquals(b_double(1.0), b_double(1.0) * p_int(1))
    assertEquals(b_double(-1.0), b_double(1.0) * p_int(-1))
    assertEquals(b_double(23.0), b_double(1.0) * p_int(23))
    assertEquals(b_double(-32.0), b_double(1.0) * p_int(-32))
    assertEquals(b_double(Double.parseDouble("2.147483647E9")), b_double(1.0) * p_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-2.147483648E9")), b_double(1.0) * p_int(Integer.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * p_int(0))
    assertEquals(b_double(-1.0), b_double(-1.0) * p_int(1))
    assertEquals(b_double(1.0), b_double(-1.0) * p_int(-1))
    assertEquals(b_double(-23.0), b_double(-1.0) * p_int(23))
    assertEquals(b_double(32.0), b_double(-1.0) * p_int(-32))
    assertEquals(b_double(Double.parseDouble("-2.147483647E9")), b_double(-1.0) * p_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("2.147483648E9")), b_double(-1.0) * p_int(Integer.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * p_int(0))
    assertEquals(b_double(23.0), b_double(23.0) * p_int(1))
    assertEquals(b_double(-23.0), b_double(23.0) * p_int(-1))
    assertEquals(b_double(529.0), b_double(23.0) * p_int(23))
    assertEquals(b_double(-736.0), b_double(23.0) * p_int(-32))
    assertEquals(b_double(Double.parseDouble("4.9392123881E10")), b_double(23.0) * p_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.9392123904E10")), b_double(23.0) * p_int(Integer.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * p_int(0))
    assertEquals(b_double(23.123), b_double(23.123) * p_int(1))
    assertEquals(b_double(-23.123), b_double(23.123) * p_int(-1))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * p_int(23))
    assertEquals(b_double(-739.936), b_double(23.123) * p_int(-32))
    assertEquals(b_double(Double.parseDouble("4.9656264369581E10")), b_double(23.123) * p_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.9656264392704E10")), b_double(23.123) * p_int(Integer.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * p_int(0))
    assertEquals(b_double(-32.0), b_double(-32.0) * p_int(1))
    assertEquals(b_double(32.0), b_double(-32.0) * p_int(-1))
    assertEquals(b_double(-736.0), b_double(-32.0) * p_int(23))
    assertEquals(b_double(1024.0), b_double(-32.0) * p_int(-32))
    assertEquals(b_double(Double.parseDouble("-6.8719476704E10")), b_double(-32.0) * p_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("6.8719476736E10")), b_double(-32.0) * p_int(Integer.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * p_int(0))
    assertEquals(b_double(-32.456), b_double(-32.456) * p_int(1))
    assertEquals(b_double(32.456), b_double(-32.456) * p_int(-1))
    assertEquals(b_double(-746.488), b_double(-32.456) * p_int(23))
    assertEquals(b_double(1038.592), b_double(-32.456) * p_int(-32))
    assertEquals(b_double(Double.parseDouble("-6.969872924703201E10")), b_double(-32.456) * p_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("6.9698729279488E10")), b_double(-32.456) * p_int(Integer.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * p_int(0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_int(1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_int(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_int(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_int(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_int(Integer.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * p_int(0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_int(1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_int(-1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_int(23))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_int(-32))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_int(Integer.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_int(0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_int(1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_int(-1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_int(23))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_int(-32))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_int(Integer.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * p_int(0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * p_int(1))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(Double.MAX_VALUE) * p_int(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_int(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_int(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_int(Integer.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * p_int(0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * p_int(1))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(Double.MIN_VALUE) * p_int(-1))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * p_int(23))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * p_int(-32))
    assertEquals(b_double(Double.parseDouble("1.060997895E-314")), b_double(Double.MIN_VALUE) * p_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-1.0609978955E-314")), b_double(Double.MIN_VALUE) * p_int(Integer.MIN_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * p_int(0)))
  }

  function testDoubleIntegerMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * b_int(0))
    assertEquals(b_double(0.0), b_double(0.0) * b_int(1))
    assertEquals(b_double(-0.0), b_double(0.0) * b_int(-1))
    assertEquals(b_double(0.0), b_double(0.0) * b_int(23))
    assertEquals(b_double(-0.0), b_double(0.0) * b_int(-32))
    assertEquals(b_double(0.0), b_double(0.0) * b_int(Integer.MAX_VALUE))
    assertEquals(b_double(-0.0), b_double(0.0) * b_int(Integer.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * b_int(0))
    assertEquals(b_double(1.0), b_double(1.0) * b_int(1))
    assertEquals(b_double(-1.0), b_double(1.0) * b_int(-1))
    assertEquals(b_double(23.0), b_double(1.0) * b_int(23))
    assertEquals(b_double(-32.0), b_double(1.0) * b_int(-32))
    assertEquals(b_double(Double.parseDouble("2.147483647E9")), b_double(1.0) * b_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-2.147483648E9")), b_double(1.0) * b_int(Integer.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * b_int(0))
    assertEquals(b_double(-1.0), b_double(-1.0) * b_int(1))
    assertEquals(b_double(1.0), b_double(-1.0) * b_int(-1))
    assertEquals(b_double(-23.0), b_double(-1.0) * b_int(23))
    assertEquals(b_double(32.0), b_double(-1.0) * b_int(-32))
    assertEquals(b_double(Double.parseDouble("-2.147483647E9")), b_double(-1.0) * b_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("2.147483648E9")), b_double(-1.0) * b_int(Integer.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * b_int(0))
    assertEquals(b_double(23.0), b_double(23.0) * b_int(1))
    assertEquals(b_double(-23.0), b_double(23.0) * b_int(-1))
    assertEquals(b_double(529.0), b_double(23.0) * b_int(23))
    assertEquals(b_double(-736.0), b_double(23.0) * b_int(-32))
    assertEquals(b_double(Double.parseDouble("4.9392123881E10")), b_double(23.0) * b_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.9392123904E10")), b_double(23.0) * b_int(Integer.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * b_int(0))
    assertEquals(b_double(23.123), b_double(23.123) * b_int(1))
    assertEquals(b_double(-23.123), b_double(23.123) * b_int(-1))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * b_int(23))
    assertEquals(b_double(-739.936), b_double(23.123) * b_int(-32))
    assertEquals(b_double(Double.parseDouble("4.9656264369581E10")), b_double(23.123) * b_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.9656264392704E10")), b_double(23.123) * b_int(Integer.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * b_int(0))
    assertEquals(b_double(-32.0), b_double(-32.0) * b_int(1))
    assertEquals(b_double(32.0), b_double(-32.0) * b_int(-1))
    assertEquals(b_double(-736.0), b_double(-32.0) * b_int(23))
    assertEquals(b_double(1024.0), b_double(-32.0) * b_int(-32))
    assertEquals(b_double(Double.parseDouble("-6.8719476704E10")), b_double(-32.0) * b_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("6.8719476736E10")), b_double(-32.0) * b_int(Integer.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * b_int(0))
    assertEquals(b_double(-32.456), b_double(-32.456) * b_int(1))
    assertEquals(b_double(32.456), b_double(-32.456) * b_int(-1))
    assertEquals(b_double(-746.488), b_double(-32.456) * b_int(23))
    assertEquals(b_double(1038.592), b_double(-32.456) * b_int(-32))
    assertEquals(b_double(Double.parseDouble("-6.969872924703201E10")), b_double(-32.456) * b_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("6.9698729279488E10")), b_double(-32.456) * b_int(Integer.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * b_int(0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_int(1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_int(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_int(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_int(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_int(Integer.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * b_int(0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_int(1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_int(-1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_int(23))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_int(-32))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_int(Integer.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_int(0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_int(1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_int(-1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_int(23))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_int(-32))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_int(Integer.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * b_int(0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * b_int(1))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(Double.MAX_VALUE) * b_int(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_int(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_int(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_int(Integer.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * b_int(0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * b_int(1))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(Double.MIN_VALUE) * b_int(-1))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * b_int(23))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * b_int(-32))
    assertEquals(b_double(Double.parseDouble("1.060997895E-314")), b_double(Double.MIN_VALUE) * b_int(Integer.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-1.0609978955E-314")), b_double(Double.MIN_VALUE) * b_int(Integer.MIN_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * b_int(0)))
  }

  function testDoublePLongMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * p_long(0))
    assertEquals(b_double(0.0), b_double(0.0) * p_long(1))
    assertEquals(b_double(-0.0), b_double(0.0) * p_long(-1))
    assertEquals(b_double(0.0), b_double(0.0) * p_long(23))
    assertEquals(b_double(-0.0), b_double(0.0) * p_long(-32))
    assertEquals(b_double(0.0), b_double(0.0) * p_long(Long.MAX_VALUE))
    assertEquals(b_double(-0.0), b_double(0.0) * p_long(Long.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * p_long(0))
    assertEquals(b_double(1.0), b_double(1.0) * p_long(1))
    assertEquals(b_double(-1.0), b_double(1.0) * p_long(-1))
    assertEquals(b_double(23.0), b_double(1.0) * p_long(23))
    assertEquals(b_double(-32.0), b_double(1.0) * p_long(-32))
    assertEquals(b_double(Double.parseDouble("9.223372036854776E18")), b_double(1.0) * p_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-9.223372036854776E18")), b_double(1.0) * p_long(Long.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * p_long(0))
    assertEquals(b_double(-1.0), b_double(-1.0) * p_long(1))
    assertEquals(b_double(1.0), b_double(-1.0) * p_long(-1))
    assertEquals(b_double(-23.0), b_double(-1.0) * p_long(23))
    assertEquals(b_double(32.0), b_double(-1.0) * p_long(-32))
    assertEquals(b_double(Double.parseDouble("-9.223372036854776E18")), b_double(-1.0) * p_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("9.223372036854776E18")), b_double(-1.0) * p_long(Long.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * p_long(0))
    assertEquals(b_double(23.0), b_double(23.0) * p_long(1))
    assertEquals(b_double(-23.0), b_double(23.0) * p_long(-1))
    assertEquals(b_double(529.0), b_double(23.0) * p_long(23))
    assertEquals(b_double(-736.0), b_double(23.0) * p_long(-32))
    assertEquals(b_double(Double.parseDouble("2.1213755684765984E20")), b_double(23.0) * p_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-2.1213755684765984E20")), b_double(23.0) * p_long(Long.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * p_long(0))
    assertEquals(b_double(23.123), b_double(23.123) * p_long(1))
    assertEquals(b_double(-23.123), b_double(23.123) * p_long(-1))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * p_long(23))
    assertEquals(b_double(-739.936), b_double(23.123) * p_long(-32))
    assertEquals(b_double(Double.parseDouble("2.13272031608193E20")), b_double(23.123) * p_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-2.13272031608193E20")), b_double(23.123) * p_long(Long.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * p_long(0))
    assertEquals(b_double(-32.0), b_double(-32.0) * p_long(1))
    assertEquals(b_double(32.0), b_double(-32.0) * p_long(-1))
    assertEquals(b_double(-736.0), b_double(-32.0) * p_long(23))
    assertEquals(b_double(1024.0), b_double(-32.0) * p_long(-32))
    assertEquals(b_double(Double.parseDouble("-2.9514790517935283E20")), b_double(-32.0) * p_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("2.9514790517935283E20")), b_double(-32.0) * p_long(Long.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * p_long(0))
    assertEquals(b_double(-32.456), b_double(-32.456) * p_long(1))
    assertEquals(b_double(32.456), b_double(-32.456) * p_long(-1))
    assertEquals(b_double(-746.488), b_double(-32.456) * p_long(23))
    assertEquals(b_double(1038.592), b_double(-32.456) * p_long(-32))
    assertEquals(b_double(Double.parseDouble("-2.993537628281586E20")), b_double(-32.456) * p_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("2.993537628281586E20")), b_double(-32.456) * p_long(Long.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * p_long(0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_long(1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_long(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_long(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_long(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_long(Long.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * p_long(0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_long(1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_long(-1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_long(23))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_long(-32))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_long(Long.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_long(0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_long(1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_long(-1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_long(23))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_long(-32))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_long(Long.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * p_long(0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * p_long(1))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(Double.MAX_VALUE) * p_long(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_long(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_long(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_long(Long.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * p_long(0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * p_long(1))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(Double.MIN_VALUE) * p_long(-1))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * p_long(23))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * p_long(-32))
    assertEquals(b_double(Double.parseDouble("4.5569512622227484E-305")), b_double(Double.MIN_VALUE) * p_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.5569512622227484E-305")), b_double(Double.MIN_VALUE) * p_long(Long.MIN_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * p_long(0)))
  }

  function testDoubleLongMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * b_long(0))
    assertEquals(b_double(0.0), b_double(0.0) * b_long(1))
    assertEquals(b_double(-0.0), b_double(0.0) * b_long(-1))
    assertEquals(b_double(0.0), b_double(0.0) * b_long(23))
    assertEquals(b_double(-0.0), b_double(0.0) * b_long(-32))
    assertEquals(b_double(0.0), b_double(0.0) * b_long(Long.MAX_VALUE))
    assertEquals(b_double(-0.0), b_double(0.0) * b_long(Long.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * b_long(0))
    assertEquals(b_double(1.0), b_double(1.0) * b_long(1))
    assertEquals(b_double(-1.0), b_double(1.0) * b_long(-1))
    assertEquals(b_double(23.0), b_double(1.0) * b_long(23))
    assertEquals(b_double(-32.0), b_double(1.0) * b_long(-32))
    assertEquals(b_double(Double.parseDouble("9.223372036854776E18")), b_double(1.0) * b_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-9.223372036854776E18")), b_double(1.0) * b_long(Long.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * b_long(0))
    assertEquals(b_double(-1.0), b_double(-1.0) * b_long(1))
    assertEquals(b_double(1.0), b_double(-1.0) * b_long(-1))
    assertEquals(b_double(-23.0), b_double(-1.0) * b_long(23))
    assertEquals(b_double(32.0), b_double(-1.0) * b_long(-32))
    assertEquals(b_double(Double.parseDouble("-9.223372036854776E18")), b_double(-1.0) * b_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("9.223372036854776E18")), b_double(-1.0) * b_long(Long.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * b_long(0))
    assertEquals(b_double(23.0), b_double(23.0) * b_long(1))
    assertEquals(b_double(-23.0), b_double(23.0) * b_long(-1))
    assertEquals(b_double(529.0), b_double(23.0) * b_long(23))
    assertEquals(b_double(-736.0), b_double(23.0) * b_long(-32))
    assertEquals(b_double(Double.parseDouble("2.1213755684765984E20")), b_double(23.0) * b_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-2.1213755684765984E20")), b_double(23.0) * b_long(Long.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * b_long(0))
    assertEquals(b_double(23.123), b_double(23.123) * b_long(1))
    assertEquals(b_double(-23.123), b_double(23.123) * b_long(-1))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * b_long(23))
    assertEquals(b_double(-739.936), b_double(23.123) * b_long(-32))
    assertEquals(b_double(Double.parseDouble("2.13272031608193E20")), b_double(23.123) * b_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-2.13272031608193E20")), b_double(23.123) * b_long(Long.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * b_long(0))
    assertEquals(b_double(-32.0), b_double(-32.0) * b_long(1))
    assertEquals(b_double(32.0), b_double(-32.0) * b_long(-1))
    assertEquals(b_double(-736.0), b_double(-32.0) * b_long(23))
    assertEquals(b_double(1024.0), b_double(-32.0) * b_long(-32))
    assertEquals(b_double(Double.parseDouble("-2.9514790517935283E20")), b_double(-32.0) * b_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("2.9514790517935283E20")), b_double(-32.0) * b_long(Long.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * b_long(0))
    assertEquals(b_double(-32.456), b_double(-32.456) * b_long(1))
    assertEquals(b_double(32.456), b_double(-32.456) * b_long(-1))
    assertEquals(b_double(-746.488), b_double(-32.456) * b_long(23))
    assertEquals(b_double(1038.592), b_double(-32.456) * b_long(-32))
    assertEquals(b_double(Double.parseDouble("-2.993537628281586E20")), b_double(-32.456) * b_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("2.993537628281586E20")), b_double(-32.456) * b_long(Long.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * b_long(0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_long(1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_long(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_long(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_long(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_long(Long.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * b_long(0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_long(1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_long(-1))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_long(23))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_long(-32))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_long(Long.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_long(0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_long(1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_long(-1))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_long(23))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_long(-32))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_long(Long.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * b_long(0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * b_long(1))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(Double.MAX_VALUE) * b_long(-1))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_long(23))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_long(-32))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_long(Long.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * b_long(0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * b_long(1))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(Double.MIN_VALUE) * b_long(-1))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * b_long(23))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * b_long(-32))
    assertEquals(b_double(Double.parseDouble("4.5569512622227484E-305")), b_double(Double.MIN_VALUE) * b_long(Long.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.5569512622227484E-305")), b_double(Double.MIN_VALUE) * b_long(Long.MIN_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * b_long(0)))
  }

  function testDoublePFloatMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * p_float(0.0))
    assertEquals(b_double(0.0), b_double(0.0) * p_float(1.0))
    assertEquals(b_double(-0.0), b_double(0.0) * p_float(-1.0))
    assertEquals(b_double(0.0), b_double(0.0) * p_float(23.0))
    assertEquals(b_double(0.0), b_double(0.0) * p_float(23.123))
    assertEquals(b_double(-0.0), b_double(0.0) * p_float(-32.0))
    assertEquals(b_double(-0.0), b_double(0.0) * p_float(-32.456))
    assertEquals(b_double(Double.NaN_), b_double(0.0) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(0.0) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(0.0) * p_float(Float.NaN_))
    assertEquals(b_double(0.0), b_double(0.0) * p_float(Float.MAX_VALUE))
    assertEquals(b_double(0.0), b_double(0.0) * p_float(Float.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * p_float(0.0))
    assertEquals(b_double(1.0), b_double(1.0) * p_float(1.0))
    assertEquals(b_double(-1.0), b_double(1.0) * p_float(-1.0))
    assertEquals(b_double(23.0), b_double(1.0) * p_float(23.0))
    assertEquals(b_double(23.12299919128418), b_double(1.0) * p_float(23.123))
    assertEquals(b_double(-32.0), b_double(1.0) * p_float(-32.0))
    assertEquals(b_double(-32.45600128173828), b_double(1.0) * p_float(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(1.0) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(1.0) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(1.0) * p_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_double(1.0) * p_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("1.401298464324817E-45")), b_double(1.0) * p_float(Float.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * p_float(0.0))
    assertEquals(b_double(-1.0), b_double(-1.0) * p_float(1.0))
    assertEquals(b_double(1.0), b_double(-1.0) * p_float(-1.0))
    assertEquals(b_double(-23.0), b_double(-1.0) * p_float(23.0))
    assertEquals(b_double(-23.12299919128418), b_double(-1.0) * p_float(23.123))
    assertEquals(b_double(32.0), b_double(-1.0) * p_float(-32.0))
    assertEquals(b_double(32.45600128173828), b_double(-1.0) * p_float(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-1.0) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(-1.0) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(-1.0) * p_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("-3.4028234663852886E38")), b_double(-1.0) * p_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-1.401298464324817E-45")), b_double(-1.0) * p_float(Float.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * p_float(0.0))
    assertEquals(b_double(23.0), b_double(23.0) * p_float(1.0))
    assertEquals(b_double(-23.0), b_double(23.0) * p_float(-1.0))
    assertEquals(b_double(529.0), b_double(23.0) * p_float(23.0))
    assertEquals(b_double(531.8289813995361), b_double(23.0) * p_float(23.123))
    assertEquals(b_double(-736.0), b_double(23.0) * p_float(-32.0))
    assertEquals(b_double(-746.4880294799805), b_double(23.0) * p_float(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(23.0) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(23.0) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(23.0) * p_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("7.826493972686164E39")), b_double(23.0) * p_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("3.2229864679470793E-44")), b_double(23.0) * p_float(Float.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * p_float(0.0))
    assertEquals(b_double(23.123), b_double(23.123) * p_float(1.0))
    assertEquals(b_double(-23.123), b_double(23.123) * p_float(-1.0))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * p_float(23.0))
    assertEquals(b_double(534.6731103000641), b_double(23.123) * p_float(23.123))
    assertEquals(b_double(-739.936), b_double(23.123) * p_float(-32.0))
    assertEquals(b_double(-750.4801176376343), b_double(23.123) * p_float(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(23.123) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(23.123) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(23.123) * p_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("7.868348701322703E39")), b_double(23.123) * p_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("3.2402224390582747E-44")), b_double(23.123) * p_float(Float.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * p_float(0.0))
    assertEquals(b_double(-32.0), b_double(-32.0) * p_float(1.0))
    assertEquals(b_double(32.0), b_double(-32.0) * p_float(-1.0))
    assertEquals(b_double(-736.0), b_double(-32.0) * p_float(23.0))
    assertEquals(b_double(-739.9359741210938), b_double(-32.0) * p_float(23.123))
    assertEquals(b_double(1024.0), b_double(-32.0) * p_float(-32.0))
    assertEquals(b_double(1038.592041015625), b_double(-32.0) * p_float(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-32.0) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(-32.0) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(-32.0) * p_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.0889035092432924E40")), b_double(-32.0) * p_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.4841550858394146E-44")), b_double(-32.0) * p_float(Float.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * p_float(0.0))
    assertEquals(b_double(-32.456), b_double(-32.456) * p_float(1.0))
    assertEquals(b_double(32.456), b_double(-32.456) * p_float(-1.0))
    assertEquals(b_double(-746.488), b_double(-32.456) * p_float(23.0))
    assertEquals(b_double(-750.4800617523194), b_double(-32.456) * p_float(23.123))
    assertEquals(b_double(1038.592), b_double(-32.456) * p_float(-32.0))
    assertEquals(b_double(1053.3919776000978), b_double(-32.456) * p_float(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-32.456) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(-32.456) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(-32.456) * p_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.1044203842500094E40")), b_double(-32.456) * p_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.548054295812627E-44")), b_double(-32.456) * p_float(Float.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * p_float(0.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_float(1.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_float(-1.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_float(23.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_float(23.123))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_float(-32.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_float(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * p_float(Float.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_float(Float.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * p_float(0.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_float(1.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_float(-1.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_float(23.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_float(23.123))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_float(-32.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_float(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * p_float(Float.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_float(Float.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_float(0.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_float(1.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_float(-1.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_float(23.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_float(23.123))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_float(-32.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_float(-32.456))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_float(Float.NaN_))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_float(Float.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * p_float(0.0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * p_float(1.0))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(Double.MAX_VALUE) * p_float(-1.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_float(23.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_float(23.123))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_float(-32.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_float(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.MAX_VALUE) * p_float(Float.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("2.5191046292098293E263")), b_double(Double.MAX_VALUE) * p_float(Float.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * p_float(0.0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * p_float(1.0))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(Double.MIN_VALUE) * p_float(-1.0))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * p_float(23.0))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * p_float(23.123))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * p_float(-32.0))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * p_float(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MIN_VALUE) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MIN_VALUE) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.MIN_VALUE) * p_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("1.681218173603397E-285")), b_double(Double.MIN_VALUE) * p_float(Float.MAX_VALUE))
    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * p_float(Float.MIN_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * p_float(0.0)))
  }

  function testDoubleFloatMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * b_float(0.0))
    assertEquals(b_double(0.0), b_double(0.0) * b_float(1.0))
    assertEquals(b_double(-0.0), b_double(0.0) * b_float(-1.0))
    assertEquals(b_double(0.0), b_double(0.0) * b_float(23.0))
    assertEquals(b_double(0.0), b_double(0.0) * b_float(23.123))
    assertEquals(b_double(-0.0), b_double(0.0) * b_float(-32.0))
    assertEquals(b_double(-0.0), b_double(0.0) * b_float(-32.456))
    assertEquals(b_double(Double.NaN_), b_double(0.0) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(0.0) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(0.0) * b_float(Float.NaN_))
    assertEquals(b_double(0.0), b_double(0.0) * b_float(Float.MAX_VALUE))
    assertEquals(b_double(0.0), b_double(0.0) * b_float(Float.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * b_float(0.0))
    assertEquals(b_double(1.0), b_double(1.0) * b_float(1.0))
    assertEquals(b_double(-1.0), b_double(1.0) * b_float(-1.0))
    assertEquals(b_double(23.0), b_double(1.0) * b_float(23.0))
    assertEquals(b_double(23.12299919128418), b_double(1.0) * b_float(23.123))
    assertEquals(b_double(-32.0), b_double(1.0) * b_float(-32.0))
    assertEquals(b_double(-32.45600128173828), b_double(1.0) * b_float(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(1.0) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(1.0) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(1.0) * b_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_double(1.0) * b_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("1.401298464324817E-45")), b_double(1.0) * b_float(Float.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * b_float(0.0))
    assertEquals(b_double(-1.0), b_double(-1.0) * b_float(1.0))
    assertEquals(b_double(1.0), b_double(-1.0) * b_float(-1.0))
    assertEquals(b_double(-23.0), b_double(-1.0) * b_float(23.0))
    assertEquals(b_double(-23.12299919128418), b_double(-1.0) * b_float(23.123))
    assertEquals(b_double(32.0), b_double(-1.0) * b_float(-32.0))
    assertEquals(b_double(32.45600128173828), b_double(-1.0) * b_float(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-1.0) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(-1.0) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(-1.0) * b_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("-3.4028234663852886E38")), b_double(-1.0) * b_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-1.401298464324817E-45")), b_double(-1.0) * b_float(Float.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * b_float(0.0))
    assertEquals(b_double(23.0), b_double(23.0) * b_float(1.0))
    assertEquals(b_double(-23.0), b_double(23.0) * b_float(-1.0))
    assertEquals(b_double(529.0), b_double(23.0) * b_float(23.0))
    assertEquals(b_double(531.8289813995361), b_double(23.0) * b_float(23.123))
    assertEquals(b_double(-736.0), b_double(23.0) * b_float(-32.0))
    assertEquals(b_double(-746.4880294799805), b_double(23.0) * b_float(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(23.0) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(23.0) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(23.0) * b_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("7.826493972686164E39")), b_double(23.0) * b_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("3.2229864679470793E-44")), b_double(23.0) * b_float(Float.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * b_float(0.0))
    assertEquals(b_double(23.123), b_double(23.123) * b_float(1.0))
    assertEquals(b_double(-23.123), b_double(23.123) * b_float(-1.0))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * b_float(23.0))
    assertEquals(b_double(534.6731103000641), b_double(23.123) * b_float(23.123))
    assertEquals(b_double(-739.936), b_double(23.123) * b_float(-32.0))
    assertEquals(b_double(-750.4801176376343), b_double(23.123) * b_float(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(23.123) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(23.123) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(23.123) * b_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("7.868348701322703E39")), b_double(23.123) * b_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("3.2402224390582747E-44")), b_double(23.123) * b_float(Float.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * b_float(0.0))
    assertEquals(b_double(-32.0), b_double(-32.0) * b_float(1.0))
    assertEquals(b_double(32.0), b_double(-32.0) * b_float(-1.0))
    assertEquals(b_double(-736.0), b_double(-32.0) * b_float(23.0))
    assertEquals(b_double(-739.9359741210938), b_double(-32.0) * b_float(23.123))
    assertEquals(b_double(1024.0), b_double(-32.0) * b_float(-32.0))
    assertEquals(b_double(1038.592041015625), b_double(-32.0) * b_float(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-32.0) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(-32.0) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(-32.0) * b_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.0889035092432924E40")), b_double(-32.0) * b_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.4841550858394146E-44")), b_double(-32.0) * b_float(Float.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * b_float(0.0))
    assertEquals(b_double(-32.456), b_double(-32.456) * b_float(1.0))
    assertEquals(b_double(32.456), b_double(-32.456) * b_float(-1.0))
    assertEquals(b_double(-746.488), b_double(-32.456) * b_float(23.0))
    assertEquals(b_double(-750.4800617523194), b_double(-32.456) * b_float(23.123))
    assertEquals(b_double(1038.592), b_double(-32.456) * b_float(-32.0))
    assertEquals(b_double(1053.3919776000978), b_double(-32.456) * b_float(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-32.456) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(-32.456) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(-32.456) * b_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.1044203842500094E40")), b_double(-32.456) * b_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.548054295812627E-44")), b_double(-32.456) * b_float(Float.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * b_float(0.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_float(1.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_float(-1.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_float(23.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_float(23.123))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_float(-32.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_float(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * b_float(Float.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_float(Float.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * b_float(0.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_float(1.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_float(-1.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_float(23.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_float(23.123))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_float(-32.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_float(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * b_float(Float.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_float(Float.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_float(0.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_float(1.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_float(-1.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_float(23.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_float(23.123))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_float(-32.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_float(-32.456))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_float(Float.NaN_))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_float(Float.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * b_float(0.0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * b_float(1.0))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(Double.MAX_VALUE) * b_float(-1.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_float(23.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_float(23.123))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_float(-32.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_float(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.MAX_VALUE) * b_float(Float.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_float(Float.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("2.5191046292098293E263")), b_double(Double.MAX_VALUE) * b_float(Float.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * b_float(0.0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * b_float(1.0))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(Double.MIN_VALUE) * b_float(-1.0))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * b_float(23.0))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * b_float(23.123))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * b_float(-32.0))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * b_float(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MIN_VALUE) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MIN_VALUE) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.MIN_VALUE) * b_float(Float.NaN_))
    assertEquals(b_double(Double.parseDouble("1.681218173603397E-285")), b_double(Double.MIN_VALUE) * b_float(Float.MAX_VALUE))
    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * b_float(Float.MIN_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * b_float(0.0)))
  }

  function testDoublePDoubleMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * p_double(0.0))
    assertEquals(b_double(0.0), b_double(0.0) * p_double(1.0))
    assertEquals(b_double(-0.0), b_double(0.0) * p_double(-1.0))
    assertEquals(b_double(0.0), b_double(0.0) * p_double(23.0))
    assertEquals(b_double(0.0), b_double(0.0) * p_double(23.123))
    assertEquals(b_double(-0.0), b_double(0.0) * p_double(-32.0))
    assertEquals(b_double(-0.0), b_double(0.0) * p_double(-32.456))
    assertEquals(b_double(Double.NaN_), b_double(0.0) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(0.0) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(0.0) * p_double(Double.NaN_))
    assertEquals(b_double(0.0), b_double(0.0) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(0.0), b_double(0.0) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * p_double(0.0))
    assertEquals(b_double(1.0), b_double(1.0) * p_double(1.0))
    assertEquals(b_double(-1.0), b_double(1.0) * p_double(-1.0))
    assertEquals(b_double(23.0), b_double(1.0) * p_double(23.0))
    assertEquals(b_double(23.123), b_double(1.0) * p_double(23.123))
    assertEquals(b_double(-32.0), b_double(1.0) * p_double(-32.0))
    assertEquals(b_double(-32.456), b_double(1.0) * p_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(1.0) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(1.0) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(1.0) * p_double(Double.NaN_))
    assertEquals(b_double(Double.MAX_VALUE), b_double(1.0) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.MIN_VALUE), b_double(1.0) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * p_double(0.0))
    assertEquals(b_double(-1.0), b_double(-1.0) * p_double(1.0))
    assertEquals(b_double(1.0), b_double(-1.0) * p_double(-1.0))
    assertEquals(b_double(-23.0), b_double(-1.0) * p_double(23.0))
    assertEquals(b_double(-23.123), b_double(-1.0) * p_double(23.123))
    assertEquals(b_double(32.0), b_double(-1.0) * p_double(-32.0))
    assertEquals(b_double(32.456), b_double(-1.0) * p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-1.0) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(-1.0) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(-1.0) * p_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(-1.0) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(-1.0) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * p_double(0.0))
    assertEquals(b_double(23.0), b_double(23.0) * p_double(1.0))
    assertEquals(b_double(-23.0), b_double(23.0) * p_double(-1.0))
    assertEquals(b_double(529.0), b_double(23.0) * p_double(23.0))
    assertEquals(b_double(531.8290000000001), b_double(23.0) * p_double(23.123))
    assertEquals(b_double(-736.0), b_double(23.0) * p_double(-32.0))
    assertEquals(b_double(-746.488), b_double(23.0) * p_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(23.0) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(23.0) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(23.0) * p_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(23.0) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(23.0) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * p_double(0.0))
    assertEquals(b_double(23.123), b_double(23.123) * p_double(1.0))
    assertEquals(b_double(-23.123), b_double(23.123) * p_double(-1.0))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * p_double(23.0))
    assertEquals(b_double(534.673129), b_double(23.123) * p_double(23.123))
    assertEquals(b_double(-739.936), b_double(23.123) * p_double(-32.0))
    assertEquals(b_double(-750.4800880000001), b_double(23.123) * p_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(23.123) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(23.123) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(23.123) * p_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(23.123) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(23.123) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * p_double(0.0))
    assertEquals(b_double(-32.0), b_double(-32.0) * p_double(1.0))
    assertEquals(b_double(32.0), b_double(-32.0) * p_double(-1.0))
    assertEquals(b_double(-736.0), b_double(-32.0) * p_double(23.0))
    assertEquals(b_double(-739.936), b_double(-32.0) * p_double(23.123))
    assertEquals(b_double(1024.0), b_double(-32.0) * p_double(-32.0))
    assertEquals(b_double(1038.592), b_double(-32.0) * p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-32.0) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(-32.0) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(-32.0) * p_double(Double.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-32.0) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(-32.0) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * p_double(0.0))
    assertEquals(b_double(-32.456), b_double(-32.456) * p_double(1.0))
    assertEquals(b_double(32.456), b_double(-32.456) * p_double(-1.0))
    assertEquals(b_double(-746.488), b_double(-32.456) * p_double(23.0))
    assertEquals(b_double(-750.4800880000001), b_double(-32.456) * p_double(23.123))
    assertEquals(b_double(1038.592), b_double(-32.456) * p_double(-32.0))
    assertEquals(b_double(1053.3919360000002), b_double(-32.456) * p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-32.456) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(-32.456) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(-32.456) * p_double(Double.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-32.456) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(-32.456) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * p_double(0.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_double(1.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_double(-1.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_double(23.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_double(23.123))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_double(-32.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * p_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * p_double(0.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_double(1.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_double(-1.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_double(23.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_double(23.123))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_double(-32.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * p_double(Double.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_double(0.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_double(1.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_double(-1.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_double(23.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_double(23.123))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_double(-32.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_double(-32.456))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_double(Double.NaN_))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * p_double(0.0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * p_double(1.0))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(Double.MAX_VALUE) * p_double(-1.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_double(23.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_double(23.123))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_double(-32.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.MAX_VALUE) * p_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("8.881784197001251E-16")), b_double(Double.MAX_VALUE) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * p_double(0.0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * p_double(1.0))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(Double.MIN_VALUE) * p_double(-1.0))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * p_double(23.0))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * p_double(23.123))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * p_double(-32.0))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * p_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MIN_VALUE) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MIN_VALUE) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.MIN_VALUE) * p_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("8.881784197001251E-16")), b_double(Double.MIN_VALUE) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * p_double(Double.MIN_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * p_double(0.0)))
  }

  function testDoubleDoubleMultiplication() {
    assertEquals(b_double(0.0), b_double(0.0) * b_double(0.0))
    assertEquals(b_double(0.0), b_double(0.0) * b_double(1.0))
    assertEquals(b_double(-0.0), b_double(0.0) * b_double(-1.0))
    assertEquals(b_double(0.0), b_double(0.0) * b_double(23.0))
    assertEquals(b_double(0.0), b_double(0.0) * b_double(23.123))
    assertEquals(b_double(-0.0), b_double(0.0) * b_double(-32.0))
    assertEquals(b_double(-0.0), b_double(0.0) * b_double(-32.456))
    assertEquals(b_double(Double.NaN_), b_double(0.0) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(0.0) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(0.0) * b_double(Double.NaN_))
    assertEquals(b_double(0.0), b_double(0.0) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(0.0), b_double(0.0) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(1.0) * b_double(0.0))
    assertEquals(b_double(1.0), b_double(1.0) * b_double(1.0))
    assertEquals(b_double(-1.0), b_double(1.0) * b_double(-1.0))
    assertEquals(b_double(23.0), b_double(1.0) * b_double(23.0))
    assertEquals(b_double(23.123), b_double(1.0) * b_double(23.123))
    assertEquals(b_double(-32.0), b_double(1.0) * b_double(-32.0))
    assertEquals(b_double(-32.456), b_double(1.0) * b_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(1.0) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(1.0) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(1.0) * b_double(Double.NaN_))
    assertEquals(b_double(Double.MAX_VALUE), b_double(1.0) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.MIN_VALUE), b_double(1.0) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-1.0) * b_double(0.0))
    assertEquals(b_double(-1.0), b_double(-1.0) * b_double(1.0))
    assertEquals(b_double(1.0), b_double(-1.0) * b_double(-1.0))
    assertEquals(b_double(-23.0), b_double(-1.0) * b_double(23.0))
    assertEquals(b_double(-23.123), b_double(-1.0) * b_double(23.123))
    assertEquals(b_double(32.0), b_double(-1.0) * b_double(-32.0))
    assertEquals(b_double(32.456), b_double(-1.0) * b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-1.0) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(-1.0) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(-1.0) * b_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(-1.0) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(-1.0) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.0) * b_double(0.0))
    assertEquals(b_double(23.0), b_double(23.0) * b_double(1.0))
    assertEquals(b_double(-23.0), b_double(23.0) * b_double(-1.0))
    assertEquals(b_double(529.0), b_double(23.0) * b_double(23.0))
    assertEquals(b_double(531.8290000000001), b_double(23.0) * b_double(23.123))
    assertEquals(b_double(-736.0), b_double(23.0) * b_double(-32.0))
    assertEquals(b_double(-746.488), b_double(23.0) * b_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(23.0) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(23.0) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(23.0) * b_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(23.0) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(23.0) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(23.123) * b_double(0.0))
    assertEquals(b_double(23.123), b_double(23.123) * b_double(1.0))
    assertEquals(b_double(-23.123), b_double(23.123) * b_double(-1.0))
    assertEquals(b_double(531.8290000000001), b_double(23.123) * b_double(23.0))
    assertEquals(b_double(534.673129), b_double(23.123) * b_double(23.123))
    assertEquals(b_double(-739.936), b_double(23.123) * b_double(-32.0))
    assertEquals(b_double(-750.4800880000001), b_double(23.123) * b_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(23.123) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(23.123) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(23.123) * b_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(23.123) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(23.123) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.0) * b_double(0.0))
    assertEquals(b_double(-32.0), b_double(-32.0) * b_double(1.0))
    assertEquals(b_double(32.0), b_double(-32.0) * b_double(-1.0))
    assertEquals(b_double(-736.0), b_double(-32.0) * b_double(23.0))
    assertEquals(b_double(-739.936), b_double(-32.0) * b_double(23.123))
    assertEquals(b_double(1024.0), b_double(-32.0) * b_double(-32.0))
    assertEquals(b_double(1038.592), b_double(-32.0) * b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-32.0) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(-32.0) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(-32.0) * b_double(Double.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-32.0) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(-32.0) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(-0.0), b_double(-32.456) * b_double(0.0))
    assertEquals(b_double(-32.456), b_double(-32.456) * b_double(1.0))
    assertEquals(b_double(32.456), b_double(-32.456) * b_double(-1.0))
    assertEquals(b_double(-746.488), b_double(-32.456) * b_double(23.0))
    assertEquals(b_double(-750.4800880000001), b_double(-32.456) * b_double(23.123))
    assertEquals(b_double(1038.592), b_double(-32.456) * b_double(-32.0))
    assertEquals(b_double(1053.3919360000002), b_double(-32.456) * b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-32.456) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(-32.456) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(-32.456) * b_double(Double.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(-32.456) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(-32.456) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * b_double(0.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_double(1.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_double(-1.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_double(23.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_double(23.123))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_double(-32.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.POSITIVE_INFINITY) * b_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.POSITIVE_INFINITY) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * b_double(0.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_double(1.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_double(-1.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_double(23.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_double(23.123))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_double(-32.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.NEGATIVE_INFINITY) * b_double(Double.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.NEGATIVE_INFINITY) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_double(0.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_double(1.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_double(-1.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_double(23.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_double(23.123))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_double(-32.0))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_double(-32.456))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_double(Double.NaN_))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_double(Double.NaN_) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MAX_VALUE) * b_double(0.0))
    assertEquals(b_double(Double.MAX_VALUE), b_double(Double.MAX_VALUE) * b_double(1.0))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_double(Double.MAX_VALUE) * b_double(-1.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_double(23.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_double(23.123))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_double(-32.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MAX_VALUE) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.MAX_VALUE) * b_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MAX_VALUE) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("8.881784197001251E-16")), b_double(Double.MAX_VALUE) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * b_double(0.0))
    assertEquals(b_double(Double.MIN_VALUE), b_double(Double.MIN_VALUE) * b_double(1.0))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_double(Double.MIN_VALUE) * b_double(-1.0))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * b_double(23.0))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_double(Double.MIN_VALUE) * b_double(23.123))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * b_double(-32.0))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_double(Double.MIN_VALUE) * b_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_double(Double.MIN_VALUE) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_double(Double.MIN_VALUE) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_double(Double.MIN_VALUE) * b_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("8.881784197001251E-16")), b_double(Double.MIN_VALUE) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(0.0), b_double(Double.MIN_VALUE) * b_double(Double.MIN_VALUE))

    assertEquals(Double, statictypeof(b_double(0.0) * b_double(0.0)))
  }

  function testDoubleBigIntegerMultiplication() {
    assertEquals(big_decimal("0.0"), b_double(0.0) * big_int("0"))
    assertEquals(big_decimal("0.0"), b_double(0.0) * big_int("1"))
    assertEquals(big_decimal("0.0"), b_double(0.0) * big_int("-1"))
    assertEquals(big_decimal("0.0"), b_double(0.0) * big_int("23"))
    assertEquals(big_decimal("0.0"), b_double(0.0) * big_int("-32"))
    assertEquals(big_decimal("0.0"), b_double(0.0) * big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("0.0"), b_double(0.0) * big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("0.0"), b_double(1.0) * big_int("0"))
    assertEquals(big_decimal("1.0"), b_double(1.0) * big_int("1"))
    assertEquals(big_decimal("-1.0"), b_double(1.0) * big_int("-1"))
    assertEquals(big_decimal("23.0"), b_double(1.0) * big_int("23"))
    assertEquals(big_decimal("-32.0"), b_double(1.0) * big_int("-32"))
    assertEquals(big_decimal("123456789012345678901234567890.0"), b_double(1.0) * big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("-123456789012345678901234567890.0"), b_double(1.0) * big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("0.0"), b_double(-1.0) * big_int("0"))
    assertEquals(big_decimal("-1.0"), b_double(-1.0) * big_int("1"))
    assertEquals(big_decimal("1.0"), b_double(-1.0) * big_int("-1"))
    assertEquals(big_decimal("-23.0"), b_double(-1.0) * big_int("23"))
    assertEquals(big_decimal("32.0"), b_double(-1.0) * big_int("-32"))
    assertEquals(big_decimal("-123456789012345678901234567890.0"), b_double(-1.0) * big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("123456789012345678901234567890.0"), b_double(-1.0) * big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("0.0"), b_double(23.0) * big_int("0"))
    assertEquals(big_decimal("23.0"), b_double(23.0) * big_int("1"))
    assertEquals(big_decimal("-23.0"), b_double(23.0) * big_int("-1"))
    assertEquals(big_decimal("529.0"), b_double(23.0) * big_int("23"))
    assertEquals(big_decimal("-736.0"), b_double(23.0) * big_int("-32"))
    assertEquals(big_decimal("2839506147283950614728395061470.0"), b_double(23.0) * big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("-2839506147283950614728395061470.0"), b_double(23.0) * big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("0.000"), b_double(23.123) * big_int("0"))
    assertEquals(big_decimal("23.123"), b_double(23.123) * big_int("1"))
    assertEquals(big_decimal("-23.123"), b_double(23.123) * big_int("-1"))
    assertEquals(big_decimal("531.829"), b_double(23.123) * big_int("23"))
    assertEquals(big_decimal("-739.936"), b_double(23.123) * big_int("-32"))
    assertEquals(big_decimal("2854691332332469133233246913320.470"), b_double(23.123) * big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("-2854691332332469133233246913320.470"), b_double(23.123) * big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("0.0"), b_double(-32.0) * big_int("0"))
    assertEquals(big_decimal("-32.0"), b_double(-32.0) * big_int("1"))
    assertEquals(big_decimal("32.0"), b_double(-32.0) * big_int("-1"))
    assertEquals(big_decimal("-736.0"), b_double(-32.0) * big_int("23"))
    assertEquals(big_decimal("1024.0"), b_double(-32.0) * big_int("-32"))
    assertEquals(big_decimal("-3950617248395061724839506172480.0"), b_double(-32.0) * big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("3950617248395061724839506172480.0"), b_double(-32.0) * big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("0.000"), b_double(-32.456) * big_int("0"))
    assertEquals(big_decimal("-32.456"), b_double(-32.456) * big_int("1"))
    assertEquals(big_decimal("32.456"), b_double(-32.456) * big_int("-1"))
    assertEquals(big_decimal("-746.488"), b_double(-32.456) * big_int("23"))
    assertEquals(big_decimal("1038.592"), b_double(-32.456) * big_int("-32"))
    assertEquals(big_decimal("-4006913544184691354418469135437.840"), b_double(-32.456) * big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("4006913544184691354418469135437.840"), b_double(-32.456) * big_int("-123456789012345678901234567890"))

    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_int("0"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_int("1"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_int("-1"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_int("23"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_int("-32"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_int("123456789012345678901234567890"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_int("-123456789012345678901234567890"))

    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_int("0"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_int("1"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_int("-1"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_int("23"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_int("-32"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_int("123456789012345678901234567890"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_int("-123456789012345678901234567890"))

    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_int("0"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_int("1"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_int("-1"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_int("23"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_int("-32"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_int("123456789012345678901234567890"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("0E+292"), b_double(Double.MAX_VALUE) * big_int("0"))
    assertEquals(big_decimal("1.7976931348623157E+308"), b_double(Double.MAX_VALUE) * big_int("1"))
    assertEquals(big_decimal("-1.7976931348623157E+308"), b_double(Double.MAX_VALUE) * big_int("-1"))
    assertEquals(big_decimal("4.13469421018332611E+309"), b_double(Double.MAX_VALUE) * big_int("23"))
    assertEquals(big_decimal("-5.75261803155941024E+309"), b_double(Double.MAX_VALUE) * big_int("-32"))
    assertEquals(big_decimal("2.219374220596391956322512195630031845342628730E+337"), b_double(Double.MAX_VALUE) * big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("-2.219374220596391956322512195630031845342628730E+337"), b_double(Double.MAX_VALUE) * big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("0E-325"), b_double(Double.MIN_VALUE) * big_int("0"))
    assertEquals(big_decimal("4.9E-324"), b_double(Double.MIN_VALUE) * big_int("1"))
    assertEquals(big_decimal("-4.9E-324"), b_double(Double.MIN_VALUE) * big_int("-1"))
    assertEquals(big_decimal("1.127E-322"), b_double(Double.MIN_VALUE) * big_int("23"))
    assertEquals(big_decimal("-1.568E-322"), b_double(Double.MIN_VALUE) * big_int("-32"))
    assertEquals(big_decimal("6.049382661604938266160493826610E-295"), b_double(Double.MIN_VALUE) * big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("-6.049382661604938266160493826610E-295"), b_double(Double.MIN_VALUE) * big_int("-123456789012345678901234567890"))

    assertEquals(BigDecimal, statictypeof(b_double(0.0) * big_int("0")))
  }

  function testDoubleBigDecimalMultiplication() {
    assertEquals(big_decimal("0.0"), b_double(0.0) * big_decimal("0"))
    assertEquals(big_decimal("0.0"), b_double(0.0) * big_decimal("1"))
    assertEquals(big_decimal("0.0"), b_double(0.0) * big_decimal("-1"))
    assertEquals(big_decimal("0.0"), b_double(0.0) * big_decimal("23"))
    assertEquals(big_decimal("0.0000"), b_double(0.0) * big_decimal("23.123"))
    assertEquals(big_decimal("0.0"), b_double(0.0) * big_decimal("-32"))
    assertEquals(big_decimal("0.0000"), b_double(0.0) * big_decimal("-32.456"))
    assertEquals(big_decimal("0E-10"), b_double(0.0) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("0E-10"), b_double(0.0) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0.0"), b_double(1.0) * big_decimal("0"))
    assertEquals(big_decimal("1.0"), b_double(1.0) * big_decimal("1"))
    assertEquals(big_decimal("-1.0"), b_double(1.0) * big_decimal("-1"))
    assertEquals(big_decimal("23.0"), b_double(1.0) * big_decimal("23"))
    assertEquals(big_decimal("23.1230"), b_double(1.0) * big_decimal("23.123"))
    assertEquals(big_decimal("-32.0"), b_double(1.0) * big_decimal("-32"))
    assertEquals(big_decimal("-32.4560"), b_double(1.0) * big_decimal("-32.456"))
    assertEquals(big_decimal("123456789012345678901234567890.1234567890"), b_double(1.0) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("-123456789012345678901234567890.1234567890"), b_double(1.0) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0.0"), b_double(-1.0) * big_decimal("0"))
    assertEquals(big_decimal("-1.0"), b_double(-1.0) * big_decimal("1"))
    assertEquals(big_decimal("1.0"), b_double(-1.0) * big_decimal("-1"))
    assertEquals(big_decimal("-23.0"), b_double(-1.0) * big_decimal("23"))
    assertEquals(big_decimal("-23.1230"), b_double(-1.0) * big_decimal("23.123"))
    assertEquals(big_decimal("32.0"), b_double(-1.0) * big_decimal("-32"))
    assertEquals(big_decimal("32.4560"), b_double(-1.0) * big_decimal("-32.456"))
    assertEquals(big_decimal("-123456789012345678901234567890.1234567890"), b_double(-1.0) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("123456789012345678901234567890.1234567890"), b_double(-1.0) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0.0"), b_double(23.0) * big_decimal("0"))
    assertEquals(big_decimal("23.0"), b_double(23.0) * big_decimal("1"))
    assertEquals(big_decimal("-23.0"), b_double(23.0) * big_decimal("-1"))
    assertEquals(big_decimal("529.0"), b_double(23.0) * big_decimal("23"))
    assertEquals(big_decimal("531.8290"), b_double(23.0) * big_decimal("23.123"))
    assertEquals(big_decimal("-736.0"), b_double(23.0) * big_decimal("-32"))
    assertEquals(big_decimal("-746.4880"), b_double(23.0) * big_decimal("-32.456"))
    assertEquals(big_decimal("2839506147283950614728395061472.8395061470"), b_double(23.0) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("-2839506147283950614728395061472.8395061470"), b_double(23.0) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0.000"), b_double(23.123) * big_decimal("0"))
    assertEquals(big_decimal("23.123"), b_double(23.123) * big_decimal("1"))
    assertEquals(big_decimal("-23.123"), b_double(23.123) * big_decimal("-1"))
    assertEquals(big_decimal("531.829"), b_double(23.123) * big_decimal("23"))
    assertEquals(big_decimal("534.673129"), b_double(23.123) * big_decimal("23.123"))
    assertEquals(big_decimal("-739.936"), b_double(23.123) * big_decimal("-32"))
    assertEquals(big_decimal("-750.480088"), b_double(23.123) * big_decimal("-32.456"))
    assertEquals(big_decimal("2854691332332469133233246913323.324691332047"), b_double(23.123) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("-2854691332332469133233246913323.324691332047"), b_double(23.123) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0.0"), b_double(-32.0) * big_decimal("0"))
    assertEquals(big_decimal("-32.0"), b_double(-32.0) * big_decimal("1"))
    assertEquals(big_decimal("32.0"), b_double(-32.0) * big_decimal("-1"))
    assertEquals(big_decimal("-736.0"), b_double(-32.0) * big_decimal("23"))
    assertEquals(big_decimal("-739.9360"), b_double(-32.0) * big_decimal("23.123"))
    assertEquals(big_decimal("1024.0"), b_double(-32.0) * big_decimal("-32"))
    assertEquals(big_decimal("1038.5920"), b_double(-32.0) * big_decimal("-32.456"))
    assertEquals(big_decimal("-3950617248395061724839506172483.9506172480"), b_double(-32.0) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("3950617248395061724839506172483.9506172480"), b_double(-32.0) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0.000"), b_double(-32.456) * big_decimal("0"))
    assertEquals(big_decimal("-32.456"), b_double(-32.456) * big_decimal("1"))
    assertEquals(big_decimal("32.456"), b_double(-32.456) * big_decimal("-1"))
    assertEquals(big_decimal("-746.488"), b_double(-32.456) * big_decimal("23"))
    assertEquals(big_decimal("-750.480088"), b_double(-32.456) * big_decimal("23.123"))
    assertEquals(big_decimal("1038.592"), b_double(-32.456) * big_decimal("-32"))
    assertEquals(big_decimal("1053.391936"), b_double(-32.456) * big_decimal("-32.456"))
    assertEquals(big_decimal("-4006913544184691354418469135441.846913543784"), b_double(-32.456) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("4006913544184691354418469135441.846913543784"), b_double(-32.456) * big_decimal("-123456789012345678901234567890.123456789"))

    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_decimal("0"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_decimal("1"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_decimal("-1"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_decimal("23"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_decimal("23.123"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_decimal("-32"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_decimal("-32.456"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_decimal("123456789012345678901234567890.123456789"))
    // Skipped test assertEquals(something, b_double(Double.POSITIVE_INFINITY) - big_decimal("-123456789012345678901234567890.123456789"))

    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_decimal("0"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_decimal("1"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_decimal("-1"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_decimal("23"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_decimal("23.123"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_decimal("-32"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_decimal("-32.456"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_decimal("123456789012345678901234567890.123456789"))
    // Skipped test assertEquals(something, b_double(Double.NEGATIVE_INFINITY) - big_decimal("-123456789012345678901234567890.123456789"))

    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_decimal("0"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_decimal("1"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_decimal("-1"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_decimal("23"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_decimal("23.123"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_decimal("-32"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_decimal("-32.456"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_decimal("123456789012345678901234567890.123456789"))
    // Skipped test assertEquals(something, b_double(Double.NaN_) - big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0E+292"), b_double(Double.MAX_VALUE) * big_decimal("0"))
    assertEquals(big_decimal("1.7976931348623157E+308"), b_double(Double.MAX_VALUE) * big_decimal("1"))
    assertEquals(big_decimal("-1.7976931348623157E+308"), b_double(Double.MAX_VALUE) * big_decimal("-1"))
    assertEquals(big_decimal("4.13469421018332611E+309"), b_double(Double.MAX_VALUE) * big_decimal("23"))
    assertEquals(big_decimal("4.15680583574213259311E+309"), b_double(Double.MAX_VALUE) * big_decimal("23.123"))
    assertEquals(big_decimal("-5.75261803155941024E+309"), b_double(Double.MAX_VALUE) * big_decimal("-32"))
    assertEquals(big_decimal("-5.83459283850913183592E+309"), b_double(Double.MAX_VALUE) * big_decimal("-32.456"))
    assertEquals(big_decimal("2.219374220596391956322512195632251219563003184534262873E+337"), b_double(Double.MAX_VALUE) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("-2.219374220596391956322512195632251219563003184534262873E+337"), b_double(Double.MAX_VALUE) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0E-325"), b_double(Double.MIN_VALUE) * big_decimal("0"))
    assertEquals(big_decimal("4.9E-324"), b_double(Double.MIN_VALUE) * big_decimal("1"))
    assertEquals(big_decimal("-4.9E-324"), b_double(Double.MIN_VALUE) * big_decimal("-1"))
    assertEquals(big_decimal("1.127E-322"), b_double(Double.MIN_VALUE) * big_decimal("23"))
    assertEquals(big_decimal("1.133027E-322"), b_double(Double.MIN_VALUE) * big_decimal("23.123"))
    assertEquals(big_decimal("-1.568E-322"), b_double(Double.MIN_VALUE) * big_decimal("-32"))
    assertEquals(big_decimal("-1.590344E-322"), b_double(Double.MIN_VALUE) * big_decimal("-32.456"))
    assertEquals(big_decimal("6.049382661604938266160493826616049382661E-295"), b_double(Double.MIN_VALUE) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("-6.049382661604938266160493826616049382661E-295"), b_double(Double.MIN_VALUE) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(BigDecimal, statictypeof(b_double(0.0) * big_decimal("0")))
  }

}

