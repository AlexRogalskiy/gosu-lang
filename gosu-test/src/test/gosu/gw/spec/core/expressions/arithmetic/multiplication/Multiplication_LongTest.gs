package gw.spec.core.expressions.arithmetic.multiplication
uses java.lang.Byte
uses java.lang.Character
uses java.lang.Integer
uses java.lang.Short
uses java.lang.Long
uses java.lang.Float
uses java.lang.Double
uses java.math.BigInteger
uses java.math.BigDecimal
uses gw.spec.core.expressions.arithmetic.ArithmeticTestBase

class Multiplication_LongTest extends ArithmeticTestBase {

  function testLongPByteMultiplication() {
    assertEquals(b_long(0), b_long(0) !* p_byte(0))
    assertEquals(b_long(0), b_long(0) !* p_byte(1))
    assertEquals(b_long(0), b_long(0) !* p_byte(-1))
    assertEquals(b_long(0), b_long(0) !* p_byte(23))
    assertEquals(b_long(0), b_long(0) !* p_byte(-32))
    assertEquals(b_long(0), b_long(0) !* p_byte(Byte.MAX_VALUE))
    assertEquals(b_long(0), b_long(0) !* p_byte(Byte.MIN_VALUE))

    assertEquals(b_long(0), b_long(1) !* p_byte(0))
    assertEquals(b_long(1), b_long(1) !* p_byte(1))
    assertEquals(b_long(-1), b_long(1) !* p_byte(-1))
    assertEquals(b_long(23), b_long(1) !* p_byte(23))
    assertEquals(b_long(-32), b_long(1) !* p_byte(-32))
    assertEquals(b_long(127), b_long(1) !* p_byte(Byte.MAX_VALUE))
    assertEquals(b_long(-128), b_long(1) !* p_byte(Byte.MIN_VALUE))

    assertEquals(b_long(0), b_long(-1) !* p_byte(0))
    assertEquals(b_long(-1), b_long(-1) !* p_byte(1))
    assertEquals(b_long(1), b_long(-1) !* p_byte(-1))
    assertEquals(b_long(-23), b_long(-1) !* p_byte(23))
    assertEquals(b_long(32), b_long(-1) !* p_byte(-32))
    assertEquals(b_long(-127), b_long(-1) !* p_byte(Byte.MAX_VALUE))
    assertEquals(b_long(128), b_long(-1) !* p_byte(Byte.MIN_VALUE))

    assertEquals(b_long(0), b_long(23) !* p_byte(0))
    assertEquals(b_long(23), b_long(23) !* p_byte(1))
    assertEquals(b_long(-23), b_long(23) !* p_byte(-1))
    assertEquals(b_long(529), b_long(23) !* p_byte(23))
    assertEquals(b_long(-736), b_long(23) !* p_byte(-32))
    assertEquals(b_long(2921), b_long(23) !* p_byte(Byte.MAX_VALUE))
    assertEquals(b_long(-2944), b_long(23) !* p_byte(Byte.MIN_VALUE))

    assertEquals(b_long(0), b_long(-32) !* p_byte(0))
    assertEquals(b_long(-32), b_long(-32) !* p_byte(1))
    assertEquals(b_long(32), b_long(-32) !* p_byte(-1))
    assertEquals(b_long(-736), b_long(-32) !* p_byte(23))
    assertEquals(b_long(1024), b_long(-32) !* p_byte(-32))
    assertEquals(b_long(-4064), b_long(-32) !* p_byte(Byte.MAX_VALUE))
    assertEquals(b_long(4096), b_long(-32) !* p_byte(Byte.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MAX_VALUE) !* p_byte(0))
    assertEquals(b_long(9223372036854775807), b_long(Long.MAX_VALUE) !* p_byte(1))
    assertEquals(b_long(-9223372036854775807), b_long(Long.MAX_VALUE) !* p_byte(-1))
    assertEquals(b_long(9223372036854775785), b_long(Long.MAX_VALUE) !* p_byte(23))
    assertEquals(b_long(32), b_long(Long.MAX_VALUE) !* p_byte(-32))
    assertEquals(b_long(9223372036854775681), b_long(Long.MAX_VALUE) !* p_byte(Byte.MAX_VALUE))
    assertEquals(b_long(128), b_long(Long.MAX_VALUE) !* p_byte(Byte.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* p_byte(0))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_byte(1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_byte(-1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_byte(23))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* p_byte(-32))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_byte(Byte.MAX_VALUE))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* p_byte(Byte.MIN_VALUE))

    assertEquals(Long, statictypeof(b_long(0) !* p_byte(0)))
  }

  function testLongByteMultiplication() {
    assertEquals(b_long(0), b_long(0) !* b_byte(0))
    assertEquals(b_long(0), b_long(0) !* p_byte(1))
    assertEquals(b_long(0), b_long(0) !* p_byte(-1))
    assertEquals(b_long(0), b_long(0) !* b_byte(23))
    assertEquals(b_long(0), b_long(0) !* b_byte(-32))
    assertEquals(b_long(0), b_long(0) !* b_byte(Byte.MAX_VALUE))
    assertEquals(b_long(0), b_long(0) !* b_byte(Byte.MIN_VALUE))

    assertEquals(b_long(0), b_long(1) !* b_byte(0))
    assertEquals(b_long(1), b_long(1) !* p_byte(1))
    assertEquals(b_long(-1), b_long(1) !* p_byte(-1))
    assertEquals(b_long(23), b_long(1) !* b_byte(23))
    assertEquals(b_long(-32), b_long(1) !* b_byte(-32))
    assertEquals(b_long(127), b_long(1) !* b_byte(Byte.MAX_VALUE))
    assertEquals(b_long(-128), b_long(1) !* b_byte(Byte.MIN_VALUE))

    assertEquals(b_long(0), b_long(-1) !* b_byte(0))
    assertEquals(b_long(-1), b_long(-1) !* p_byte(1))
    assertEquals(b_long(1), b_long(-1) !* p_byte(-1))
    assertEquals(b_long(-23), b_long(-1) !* b_byte(23))
    assertEquals(b_long(32), b_long(-1) !* b_byte(-32))
    assertEquals(b_long(-127), b_long(-1) !* b_byte(Byte.MAX_VALUE))
    assertEquals(b_long(128), b_long(-1) !* b_byte(Byte.MIN_VALUE))

    assertEquals(b_long(0), b_long(23) !* b_byte(0))
    assertEquals(b_long(23), b_long(23) !* p_byte(1))
    assertEquals(b_long(-23), b_long(23) !* p_byte(-1))
    assertEquals(b_long(529), b_long(23) !* b_byte(23))
    assertEquals(b_long(-736), b_long(23) !* b_byte(-32))
    assertEquals(b_long(2921), b_long(23) !* b_byte(Byte.MAX_VALUE))
    assertEquals(b_long(-2944), b_long(23) !* b_byte(Byte.MIN_VALUE))

    assertEquals(b_long(0), b_long(-32) !* b_byte(0))
    assertEquals(b_long(-32), b_long(-32) !* p_byte(1))
    assertEquals(b_long(32), b_long(-32) !* p_byte(-1))
    assertEquals(b_long(-736), b_long(-32) !* b_byte(23))
    assertEquals(b_long(1024), b_long(-32) !* b_byte(-32))
    assertEquals(b_long(-4064), b_long(-32) !* b_byte(Byte.MAX_VALUE))
    assertEquals(b_long(4096), b_long(-32) !* b_byte(Byte.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MAX_VALUE) !* b_byte(0))
    assertEquals(b_long(9223372036854775807), b_long(Long.MAX_VALUE) !* p_byte(1))
    assertEquals(b_long(-9223372036854775807), b_long(Long.MAX_VALUE) !* p_byte(-1))
    assertEquals(b_long(9223372036854775785), b_long(Long.MAX_VALUE) !* b_byte(23))
    assertEquals(b_long(32), b_long(Long.MAX_VALUE) !* b_byte(-32))
    assertEquals(b_long(9223372036854775681), b_long(Long.MAX_VALUE) !* b_byte(Byte.MAX_VALUE))
    assertEquals(b_long(128), b_long(Long.MAX_VALUE) !* b_byte(Byte.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* b_byte(0))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_byte(1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_byte(-1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_byte(23))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* b_byte(-32))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_byte(Byte.MAX_VALUE))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* b_byte(Byte.MIN_VALUE))

    assertEquals(Long, statictypeof(b_long(0) !* b_byte(0)))
  }

  function testLongPShortMultiplication() {
    assertEquals(b_long(0), b_long(0) !* p_short(0))
    assertEquals(b_long(0), b_long(0) !* p_short(1))
    assertEquals(b_long(0), b_long(0) !* p_short(-1))
    assertEquals(b_long(0), b_long(0) !* p_short(23))
    assertEquals(b_long(0), b_long(0) !* p_short(-32))
    assertEquals(b_long(0), b_long(0) !* p_short(Short.MAX_VALUE))
    assertEquals(b_long(0), b_long(0) !* p_short(Short.MIN_VALUE))

    assertEquals(b_long(0), b_long(1) !* p_short(0))
    assertEquals(b_long(1), b_long(1) !* p_short(1))
    assertEquals(b_long(-1), b_long(1) !* p_short(-1))
    assertEquals(b_long(23), b_long(1) !* p_short(23))
    assertEquals(b_long(-32), b_long(1) !* p_short(-32))
    assertEquals(b_long(32767), b_long(1) !* p_short(Short.MAX_VALUE))
    assertEquals(b_long(-32768), b_long(1) !* p_short(Short.MIN_VALUE))

    assertEquals(b_long(0), b_long(-1) !* p_short(0))
    assertEquals(b_long(-1), b_long(-1) !* p_short(1))
    assertEquals(b_long(1), b_long(-1) !* p_short(-1))
    assertEquals(b_long(-23), b_long(-1) !* p_short(23))
    assertEquals(b_long(32), b_long(-1) !* p_short(-32))
    assertEquals(b_long(-32767), b_long(-1) !* p_short(Short.MAX_VALUE))
    assertEquals(b_long(32768), b_long(-1) !* p_short(Short.MIN_VALUE))

    assertEquals(b_long(0), b_long(23) !* p_short(0))
    assertEquals(b_long(23), b_long(23) !* p_short(1))
    assertEquals(b_long(-23), b_long(23) !* p_short(-1))
    assertEquals(b_long(529), b_long(23) !* p_short(23))
    assertEquals(b_long(-736), b_long(23) !* p_short(-32))
    assertEquals(b_long(753641), b_long(23) !* p_short(Short.MAX_VALUE))
    assertEquals(b_long(-753664), b_long(23) !* p_short(Short.MIN_VALUE))

    assertEquals(b_long(0), b_long(-32) !* p_short(0))
    assertEquals(b_long(-32), b_long(-32) !* p_short(1))
    assertEquals(b_long(32), b_long(-32) !* p_short(-1))
    assertEquals(b_long(-736), b_long(-32) !* p_short(23))
    assertEquals(b_long(1024), b_long(-32) !* p_short(-32))
    assertEquals(b_long(-1048544), b_long(-32) !* p_short(Short.MAX_VALUE))
    assertEquals(b_long(1048576), b_long(-32) !* p_short(Short.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MAX_VALUE) !* p_short(0))
    assertEquals(b_long(9223372036854775807), b_long(Long.MAX_VALUE) !* p_short(1))
    assertEquals(b_long(-9223372036854775807), b_long(Long.MAX_VALUE) !* p_short(-1))
    assertEquals(b_long(9223372036854775785), b_long(Long.MAX_VALUE) !* p_short(23))
    assertEquals(b_long(32), b_long(Long.MAX_VALUE) !* p_short(-32))
    assertEquals(b_long(9223372036854743041), b_long(Long.MAX_VALUE) !* p_short(Short.MAX_VALUE))
    assertEquals(b_long(32768), b_long(Long.MAX_VALUE) !* p_short(Short.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* p_short(0))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_short(1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_short(-1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_short(23))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* p_short(-32))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_short(Short.MAX_VALUE))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* p_short(Short.MIN_VALUE))

    assertEquals(Long, statictypeof(b_long(0) !* p_short(0)))
  }

  function testLongShortMultiplication() {
    assertEquals(b_long(0), b_long(0) !* b_short(0))
    assertEquals(b_long(0), b_long(0) !* b_short(1))
    assertEquals(b_long(0), b_long(0) !* b_short(-1))
    assertEquals(b_long(0), b_long(0) !* b_short(23))
    assertEquals(b_long(0), b_long(0) !* b_short(-32))
    assertEquals(b_long(0), b_long(0) !* b_short(Short.MAX_VALUE))
    assertEquals(b_long(0), b_long(0) !* b_short(Short.MIN_VALUE))

    assertEquals(b_long(0), b_long(1) !* b_short(0))
    assertEquals(b_long(1), b_long(1) !* b_short(1))
    assertEquals(b_long(-1), b_long(1) !* b_short(-1))
    assertEquals(b_long(23), b_long(1) !* b_short(23))
    assertEquals(b_long(-32), b_long(1) !* b_short(-32))
    assertEquals(b_long(32767), b_long(1) !* b_short(Short.MAX_VALUE))
    assertEquals(b_long(-32768), b_long(1) !* b_short(Short.MIN_VALUE))

    assertEquals(b_long(0), b_long(-1) !* b_short(0))
    assertEquals(b_long(-1), b_long(-1) !* b_short(1))
    assertEquals(b_long(1), b_long(-1) !* b_short(-1))
    assertEquals(b_long(-23), b_long(-1) !* b_short(23))
    assertEquals(b_long(32), b_long(-1) !* b_short(-32))
    assertEquals(b_long(-32767), b_long(-1) !* b_short(Short.MAX_VALUE))
    assertEquals(b_long(32768), b_long(-1) !* b_short(Short.MIN_VALUE))

    assertEquals(b_long(0), b_long(23) !* b_short(0))
    assertEquals(b_long(23), b_long(23) !* b_short(1))
    assertEquals(b_long(-23), b_long(23) !* b_short(-1))
    assertEquals(b_long(529), b_long(23) !* b_short(23))
    assertEquals(b_long(-736), b_long(23) !* b_short(-32))
    assertEquals(b_long(753641), b_long(23) !* b_short(Short.MAX_VALUE))
    assertEquals(b_long(-753664), b_long(23) !* b_short(Short.MIN_VALUE))

    assertEquals(b_long(0), b_long(-32) !* b_short(0))
    assertEquals(b_long(-32), b_long(-32) !* b_short(1))
    assertEquals(b_long(32), b_long(-32) !* b_short(-1))
    assertEquals(b_long(-736), b_long(-32) !* b_short(23))
    assertEquals(b_long(1024), b_long(-32) !* b_short(-32))
    assertEquals(b_long(-1048544), b_long(-32) !* b_short(Short.MAX_VALUE))
    assertEquals(b_long(1048576), b_long(-32) !* b_short(Short.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MAX_VALUE) !* b_short(0))
    assertEquals(b_long(9223372036854775807), b_long(Long.MAX_VALUE) !* b_short(1))
    assertEquals(b_long(-9223372036854775807), b_long(Long.MAX_VALUE) !* b_short(-1))
    assertEquals(b_long(9223372036854775785), b_long(Long.MAX_VALUE) !* b_short(23))
    assertEquals(b_long(32), b_long(Long.MAX_VALUE) !* b_short(-32))
    assertEquals(b_long(9223372036854743041), b_long(Long.MAX_VALUE) !* b_short(Short.MAX_VALUE))
    assertEquals(b_long(32768), b_long(Long.MAX_VALUE) !* b_short(Short.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* b_short(0))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_short(1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_short(-1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_short(23))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* b_short(-32))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_short(Short.MAX_VALUE))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* b_short(Short.MIN_VALUE))

    assertEquals(Long, statictypeof(b_long(0) !* b_short(0)))
  }

  function testLongPCharMultiplication() {
    assertEquals(b_long(0), b_long(0) !* p_char(0))
    assertEquals(b_long(0), b_long(0) !* p_char(1))
    assertEquals(b_long(0), b_long(0) !* p_char(23))
    assertEquals(b_long(0), b_long(0) !* p_char(Character.MAX_VALUE))

    assertEquals(b_long(0), b_long(1) !* p_char(0))
    assertEquals(b_long(1), b_long(1) !* p_char(1))
    assertEquals(b_long(23), b_long(1) !* p_char(23))
    assertEquals(b_long(65535), b_long(1) !* p_char(Character.MAX_VALUE))

    assertEquals(b_long(0), b_long(-1) !* p_char(0))
    assertEquals(b_long(-1), b_long(-1) !* p_char(1))
    assertEquals(b_long(-23), b_long(-1) !* p_char(23))
    assertEquals(b_long(-65535), b_long(-1) !* p_char(Character.MAX_VALUE))

    assertEquals(b_long(0), b_long(23) !* p_char(0))
    assertEquals(b_long(23), b_long(23) !* p_char(1))
    assertEquals(b_long(529), b_long(23) !* p_char(23))
    assertEquals(b_long(1507305), b_long(23) !* p_char(Character.MAX_VALUE))

    assertEquals(b_long(0), b_long(-32) !* p_char(0))
    assertEquals(b_long(-32), b_long(-32) !* p_char(1))
    assertEquals(b_long(-736), b_long(-32) !* p_char(23))
    assertEquals(b_long(-2097120), b_long(-32) !* p_char(Character.MAX_VALUE))

    assertEquals(b_long(0), b_long(Long.MAX_VALUE) !* p_char(0))
    assertEquals(b_long(9223372036854775807), b_long(Long.MAX_VALUE) !* p_char(1))
    assertEquals(b_long(9223372036854775785), b_long(Long.MAX_VALUE) !* p_char(23))
    assertEquals(b_long(9223372036854710273), b_long(Long.MAX_VALUE) !* p_char(Character.MAX_VALUE))

    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* p_char(0))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_char(1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_char(23))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_char(Character.MAX_VALUE))

    assertEquals(Long, statictypeof(b_long(0) !* p_char(0)))
  }

  function testLongCharacterMultiplication() {
    assertEquals(b_long(0), b_long(0) !* b_char(0))
    assertEquals(b_long(0), b_long(0) !* b_char(1))
    assertEquals(b_long(0), b_long(0) !* b_char(23))
    assertEquals(b_long(0), b_long(0) !* b_char(Character.MAX_VALUE))

    assertEquals(b_long(0), b_long(1) !* b_char(0))
    assertEquals(b_long(1), b_long(1) !* b_char(1))
    assertEquals(b_long(23), b_long(1) !* b_char(23))
    assertEquals(b_long(65535), b_long(1) !* b_char(Character.MAX_VALUE))

    assertEquals(b_long(0), b_long(-1) !* b_char(0))
    assertEquals(b_long(-1), b_long(-1) !* b_char(1))
    assertEquals(b_long(-23), b_long(-1) !* b_char(23))
    assertEquals(b_long(-65535), b_long(-1) !* b_char(Character.MAX_VALUE))

    assertEquals(b_long(0), b_long(23) !* b_char(0))
    assertEquals(b_long(23), b_long(23) !* b_char(1))
    assertEquals(b_long(529), b_long(23) !* b_char(23))
    assertEquals(b_long(1507305), b_long(23) !* b_char(Character.MAX_VALUE))

    assertEquals(b_long(0), b_long(-32) !* b_char(0))
    assertEquals(b_long(-32), b_long(-32) !* b_char(1))
    assertEquals(b_long(-736), b_long(-32) !* b_char(23))
    assertEquals(b_long(-2097120), b_long(-32) !* b_char(Character.MAX_VALUE))

    assertEquals(b_long(0), b_long(Long.MAX_VALUE) !* b_char(0))
    assertEquals(b_long(9223372036854775807), b_long(Long.MAX_VALUE) !* b_char(1))
    assertEquals(b_long(9223372036854775785), b_long(Long.MAX_VALUE) !* b_char(23))
    assertEquals(b_long(9223372036854710273), b_long(Long.MAX_VALUE) !* b_char(Character.MAX_VALUE))

    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* b_char(0))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_char(1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_char(23))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_char(Character.MAX_VALUE))

    assertEquals(Long, statictypeof(b_long(0) !* b_char(0)))
  }

  function testLongPIntMultiplication() {
    assertEquals(b_long(0), b_long(0) !* p_int(0))
    assertEquals(b_long(0), b_long(0) !* p_int(1))
    assertEquals(b_long(0), b_long(0) !* p_int(-1))
    assertEquals(b_long(0), b_long(0) !* p_int(23))
    assertEquals(b_long(0), b_long(0) !* p_int(-32))
    assertEquals(b_long(0), b_long(0) !* p_int(Integer.MAX_VALUE))
    assertEquals(b_long(0), b_long(0) !* p_int(Integer.MIN_VALUE))

    assertEquals(b_long(0), b_long(1) !* p_int(0))
    assertEquals(b_long(1), b_long(1) !* p_int(1))
    assertEquals(b_long(-1), b_long(1) !* p_int(-1))
    assertEquals(b_long(23), b_long(1) !* p_int(23))
    assertEquals(b_long(-32), b_long(1) !* p_int(-32))
    assertEquals(b_long(2147483647), b_long(1) !* p_int(Integer.MAX_VALUE))
    assertEquals(b_long(-2147483648), b_long(1) !* p_int(Integer.MIN_VALUE))

    assertEquals(b_long(0), b_long(-1) !* p_int(0))
    assertEquals(b_long(-1), b_long(-1) !* p_int(1))
    assertEquals(b_long(1), b_long(-1) !* p_int(-1))
    assertEquals(b_long(-23), b_long(-1) !* p_int(23))
    assertEquals(b_long(32), b_long(-1) !* p_int(-32))
    assertEquals(b_long(-2147483647), b_long(-1) !* p_int(Integer.MAX_VALUE))
    assertEquals(b_long(2147483648), b_long(-1) !* p_int(Integer.MIN_VALUE))

    assertEquals(b_long(0), b_long(23) !* p_int(0))
    assertEquals(b_long(23), b_long(23) !* p_int(1))
    assertEquals(b_long(-23), b_long(23) !* p_int(-1))
    assertEquals(b_long(529), b_long(23) !* p_int(23))
    assertEquals(b_long(-736), b_long(23) !* p_int(-32))
    assertEquals(b_long(49392123881), b_long(23) !* p_int(Integer.MAX_VALUE))
    assertEquals(b_long(-49392123904), b_long(23) !* p_int(Integer.MIN_VALUE))

    assertEquals(b_long(0), b_long(-32) !* p_int(0))
    assertEquals(b_long(-32), b_long(-32) !* p_int(1))
    assertEquals(b_long(32), b_long(-32) !* p_int(-1))
    assertEquals(b_long(-736), b_long(-32) !* p_int(23))
    assertEquals(b_long(1024), b_long(-32) !* p_int(-32))
    assertEquals(b_long(-68719476704), b_long(-32) !* p_int(Integer.MAX_VALUE))
    assertEquals(b_long(68719476736), b_long(-32) !* p_int(Integer.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MAX_VALUE) !* p_int(0))
    assertEquals(b_long(9223372036854775807), b_long(Long.MAX_VALUE) !* p_int(1))
    assertEquals(b_long(-9223372036854775807), b_long(Long.MAX_VALUE) !* p_int(-1))
    assertEquals(b_long(9223372036854775785), b_long(Long.MAX_VALUE) !* p_int(23))
    assertEquals(b_long(32), b_long(Long.MAX_VALUE) !* p_int(-32))
    assertEquals(b_long(9223372034707292161), b_long(Long.MAX_VALUE) !* p_int(Integer.MAX_VALUE))
    assertEquals(b_long(2147483648), b_long(Long.MAX_VALUE) !* p_int(Integer.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* p_int(0))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_int(1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_int(-1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_int(23))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* p_int(-32))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_int(Integer.MAX_VALUE))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* p_int(Integer.MIN_VALUE))

    assertEquals(Long, statictypeof(b_long(0) !* p_int(0)))
  }

  function testLongIntegerMultiplication() {
    assertEquals(b_long(0), b_long(0) !* b_int(0))
    assertEquals(b_long(0), b_long(0) !* b_int(1))
    assertEquals(b_long(0), b_long(0) !* b_int(-1))
    assertEquals(b_long(0), b_long(0) !* b_int(23))
    assertEquals(b_long(0), b_long(0) !* b_int(-32))
    assertEquals(b_long(0), b_long(0) !* b_int(Integer.MAX_VALUE))
    assertEquals(b_long(0), b_long(0) !* b_int(Integer.MIN_VALUE))

    assertEquals(b_long(0), b_long(1) !* b_int(0))
    assertEquals(b_long(1), b_long(1) !* b_int(1))
    assertEquals(b_long(-1), b_long(1) !* b_int(-1))
    assertEquals(b_long(23), b_long(1) !* b_int(23))
    assertEquals(b_long(-32), b_long(1) !* b_int(-32))
    assertEquals(b_long(2147483647), b_long(1) !* b_int(Integer.MAX_VALUE))
    assertEquals(b_long(-2147483648), b_long(1) !* b_int(Integer.MIN_VALUE))

    assertEquals(b_long(0), b_long(-1) !* b_int(0))
    assertEquals(b_long(-1), b_long(-1) !* b_int(1))
    assertEquals(b_long(1), b_long(-1) !* b_int(-1))
    assertEquals(b_long(-23), b_long(-1) !* b_int(23))
    assertEquals(b_long(32), b_long(-1) !* b_int(-32))
    assertEquals(b_long(-2147483647), b_long(-1) !* b_int(Integer.MAX_VALUE))
    assertEquals(b_long(2147483648), b_long(-1) !* b_int(Integer.MIN_VALUE))

    assertEquals(b_long(0), b_long(23) !* b_int(0))
    assertEquals(b_long(23), b_long(23) !* b_int(1))
    assertEquals(b_long(-23), b_long(23) !* b_int(-1))
    assertEquals(b_long(529), b_long(23) !* b_int(23))
    assertEquals(b_long(-736), b_long(23) !* b_int(-32))
    assertEquals(b_long(49392123881), b_long(23) !* b_int(Integer.MAX_VALUE))
    assertEquals(b_long(-49392123904), b_long(23) !* b_int(Integer.MIN_VALUE))

    assertEquals(b_long(0), b_long(-32) !* b_int(0))
    assertEquals(b_long(-32), b_long(-32) !* b_int(1))
    assertEquals(b_long(32), b_long(-32) !* b_int(-1))
    assertEquals(b_long(-736), b_long(-32) !* b_int(23))
    assertEquals(b_long(1024), b_long(-32) !* b_int(-32))
    assertEquals(b_long(-68719476704), b_long(-32) !* b_int(Integer.MAX_VALUE))
    assertEquals(b_long(68719476736), b_long(-32) !* b_int(Integer.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MAX_VALUE) !* b_int(0))
    assertEquals(b_long(9223372036854775807), b_long(Long.MAX_VALUE) !* b_int(1))
    assertEquals(b_long(-9223372036854775807), b_long(Long.MAX_VALUE) !* b_int(-1))
    assertEquals(b_long(9223372036854775785), b_long(Long.MAX_VALUE) !* b_int(23))
    assertEquals(b_long(32), b_long(Long.MAX_VALUE) !* b_int(-32))
    assertEquals(b_long(9223372034707292161), b_long(Long.MAX_VALUE) !* b_int(Integer.MAX_VALUE))
    assertEquals(b_long(2147483648), b_long(Long.MAX_VALUE) !* b_int(Integer.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* b_int(0))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_int(1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_int(-1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_int(23))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* b_int(-32))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_int(Integer.MAX_VALUE))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* b_int(Integer.MIN_VALUE))

    assertEquals(Long, statictypeof(b_long(0) !* b_int(0)))
  }

  function testLongPLongMultiplication() {
    assertEquals(b_long(0), b_long(0) !* p_long(0))
    assertEquals(b_long(0), b_long(0) !* p_long(1))
    assertEquals(b_long(0), b_long(0) !* p_long(-1))
    assertEquals(b_long(0), b_long(0) !* p_long(23))
    assertEquals(b_long(0), b_long(0) !* p_long(-32))
    assertEquals(b_long(0), b_long(0) !* p_long(Long.MAX_VALUE))
    assertEquals(b_long(0), b_long(0) !* p_long(Long.MIN_VALUE))

    assertEquals(b_long(0), b_long(1) !* p_long(0))
    assertEquals(b_long(1), b_long(1) !* p_long(1))
    assertEquals(b_long(-1), b_long(1) !* p_long(-1))
    assertEquals(b_long(23), b_long(1) !* p_long(23))
    assertEquals(b_long(-32), b_long(1) !* p_long(-32))
    assertEquals(b_long(9223372036854775807), b_long(1) !* p_long(Long.MAX_VALUE))
    assertEquals(b_long(-9223372036854775808), b_long(1) !* p_long(Long.MIN_VALUE))

    assertEquals(b_long(0), b_long(-1) !* p_long(0))
    assertEquals(b_long(-1), b_long(-1) !* p_long(1))
    assertEquals(b_long(1), b_long(-1) !* p_long(-1))
    assertEquals(b_long(-23), b_long(-1) !* p_long(23))
    assertEquals(b_long(32), b_long(-1) !* p_long(-32))
    assertEquals(b_long(-9223372036854775807), b_long(-1) !* p_long(Long.MAX_VALUE))
    assertEquals(b_long(-9223372036854775808), b_long(-1) !* p_long(Long.MIN_VALUE))

    assertEquals(b_long(0), b_long(23) !* p_long(0))
    assertEquals(b_long(23), b_long(23) !* p_long(1))
    assertEquals(b_long(-23), b_long(23) !* p_long(-1))
    assertEquals(b_long(529), b_long(23) !* p_long(23))
    assertEquals(b_long(-736), b_long(23) !* p_long(-32))
    assertEquals(b_long(9223372036854775785), b_long(23) !* p_long(Long.MAX_VALUE))
    assertEquals(b_long(-9223372036854775808), b_long(23) !* p_long(Long.MIN_VALUE))

    assertEquals(b_long(0), b_long(-32) !* p_long(0))
    assertEquals(b_long(-32), b_long(-32) !* p_long(1))
    assertEquals(b_long(32), b_long(-32) !* p_long(-1))
    assertEquals(b_long(-736), b_long(-32) !* p_long(23))
    assertEquals(b_long(1024), b_long(-32) !* p_long(-32))
    assertEquals(b_long(32), b_long(-32) !* p_long(Long.MAX_VALUE))
    assertEquals(b_long(0), b_long(-32) !* p_long(Long.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MAX_VALUE) !* p_long(0))
    assertEquals(b_long(9223372036854775807), b_long(Long.MAX_VALUE) !* p_long(1))
    assertEquals(b_long(-9223372036854775807), b_long(Long.MAX_VALUE) !* p_long(-1))
    assertEquals(b_long(9223372036854775785), b_long(Long.MAX_VALUE) !* p_long(23))
    assertEquals(b_long(32), b_long(Long.MAX_VALUE) !* p_long(-32))
    assertEquals(b_long(1), b_long(Long.MAX_VALUE) !* p_long(Long.MAX_VALUE))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MAX_VALUE) !* p_long(Long.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* p_long(0))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_long(1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_long(-1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_long(23))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* p_long(-32))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* p_long(Long.MAX_VALUE))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* p_long(Long.MIN_VALUE))

    assertEquals(Long, statictypeof(b_long(0) !* p_long(0)))
  }

  function testLongLongMultiplication() {
    assertEquals(b_long(0), b_long(0) !* b_long(0))
    assertEquals(b_long(0), b_long(0) !* b_long(1))
    assertEquals(b_long(0), b_long(0) !* b_long(-1))
    assertEquals(b_long(0), b_long(0) !* b_long(23))
    assertEquals(b_long(0), b_long(0) !* b_long(-32))
    assertEquals(b_long(0), b_long(0) !* b_long(Long.MAX_VALUE))
    assertEquals(b_long(0), b_long(0) !* b_long(Long.MIN_VALUE))

    assertEquals(b_long(0), b_long(1) !* b_long(0))
    assertEquals(b_long(1), b_long(1) !* b_long(1))
    assertEquals(b_long(-1), b_long(1) !* b_long(-1))
    assertEquals(b_long(23), b_long(1) !* b_long(23))
    assertEquals(b_long(-32), b_long(1) !* b_long(-32))
    assertEquals(b_long(9223372036854775807), b_long(1) !* b_long(Long.MAX_VALUE))
    assertEquals(b_long(-9223372036854775808), b_long(1) !* b_long(Long.MIN_VALUE))

    assertEquals(b_long(0), b_long(-1) !* b_long(0))
    assertEquals(b_long(-1), b_long(-1) !* b_long(1))
    assertEquals(b_long(1), b_long(-1) !* b_long(-1))
    assertEquals(b_long(-23), b_long(-1) !* b_long(23))
    assertEquals(b_long(32), b_long(-1) !* b_long(-32))
    assertEquals(b_long(-9223372036854775807), b_long(-1) !* b_long(Long.MAX_VALUE))
    assertEquals(b_long(-9223372036854775808), b_long(-1) !* b_long(Long.MIN_VALUE))

    assertEquals(b_long(0), b_long(23) !* b_long(0))
    assertEquals(b_long(23), b_long(23) !* b_long(1))
    assertEquals(b_long(-23), b_long(23) !* b_long(-1))
    assertEquals(b_long(529), b_long(23) !* b_long(23))
    assertEquals(b_long(-736), b_long(23) !* b_long(-32))
    assertEquals(b_long(9223372036854775785), b_long(23) !* b_long(Long.MAX_VALUE))
    assertEquals(b_long(-9223372036854775808), b_long(23) !* b_long(Long.MIN_VALUE))

    assertEquals(b_long(0), b_long(-32) !* b_long(0))
    assertEquals(b_long(-32), b_long(-32) !* b_long(1))
    assertEquals(b_long(32), b_long(-32) !* b_long(-1))
    assertEquals(b_long(-736), b_long(-32) !* b_long(23))
    assertEquals(b_long(1024), b_long(-32) !* b_long(-32))
    assertEquals(b_long(32), b_long(-32) !* b_long(Long.MAX_VALUE))
    assertEquals(b_long(0), b_long(-32) !* b_long(Long.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MAX_VALUE) !* b_long(0))
    assertEquals(b_long(9223372036854775807), b_long(Long.MAX_VALUE) !* b_long(1))
    assertEquals(b_long(-9223372036854775807), b_long(Long.MAX_VALUE) !* b_long(-1))
    assertEquals(b_long(9223372036854775785), b_long(Long.MAX_VALUE) !* b_long(23))
    assertEquals(b_long(32), b_long(Long.MAX_VALUE) !* b_long(-32))
    assertEquals(b_long(1), b_long(Long.MAX_VALUE) !* b_long(Long.MAX_VALUE))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MAX_VALUE) !* b_long(Long.MIN_VALUE))

    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* b_long(0))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_long(1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_long(-1))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_long(23))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* b_long(-32))
    assertEquals(b_long(-9223372036854775808), b_long(Long.MIN_VALUE) !* b_long(Long.MAX_VALUE))
    assertEquals(b_long(0), b_long(Long.MIN_VALUE) !* b_long(Long.MIN_VALUE))

    assertEquals(Long, statictypeof(b_long(0) !* b_long(0)))
  }

  function testLongPFloatMultiplication() {
    assertEquals(b_float(0.0), b_long(0) * p_float(0.0))
    assertEquals(b_float(0.0), b_long(0) * p_float(1.0))
    assertEquals(b_float(-0.0), b_long(0) * p_float(-1.0))
    assertEquals(b_float(0.0), b_long(0) * p_float(23.0))
    assertEquals(b_float(0.0), b_long(0) * p_float(23.123))
    assertEquals(b_float(-0.0), b_long(0) * p_float(-32.0))
    assertEquals(b_float(-0.0), b_long(0) * p_float(-32.456))
    assertEquals(b_float(Float.NaN_), b_long(0) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(0) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(0) * p_float(Float.NaN_))
    assertEquals(b_float(0.0), b_long(0) * p_float(Float.MAX_VALUE))
    assertEquals(b_float(0.0), b_long(0) * p_float(Float.MIN_VALUE))

    assertEquals(b_float(0.0), b_long(1) * p_float(0.0))
    assertEquals(b_float(1.0), b_long(1) * p_float(1.0))
    assertEquals(b_float(-1.0), b_long(1) * p_float(-1.0))
    assertEquals(b_float(23.0), b_long(1) * p_float(23.0))
    assertEquals(b_float(23.123), b_long(1) * p_float(23.123))
    assertEquals(b_float(-32.0), b_long(1) * p_float(-32.0))
    assertEquals(b_float(-32.456), b_long(1) * p_float(-32.456))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(1) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(1) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(1) * p_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_long(1) * p_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_long(1) * p_float(Float.MIN_VALUE))

    assertEquals(b_float(-0.0), b_long(-1) * p_float(0.0))
    assertEquals(b_float(-1.0), b_long(-1) * p_float(1.0))
    assertEquals(b_float(1.0), b_long(-1) * p_float(-1.0))
    assertEquals(b_float(-23.0), b_long(-1) * p_float(23.0))
    assertEquals(b_float(-23.123), b_long(-1) * p_float(23.123))
    assertEquals(b_float(32.0), b_long(-1) * p_float(-32.0))
    assertEquals(b_float(32.456), b_long(-1) * p_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(-1) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(-1) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(-1) * p_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_long(-1) * p_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("-1.4E-45")), b_long(-1) * p_float(Float.MIN_VALUE))

    assertEquals(b_float(0.0), b_long(23) * p_float(0.0))
    assertEquals(b_float(23.0), b_long(23) * p_float(1.0))
    assertEquals(b_float(-23.0), b_long(23) * p_float(-1.0))
    assertEquals(b_float(529.0), b_long(23) * p_float(23.0))
    assertEquals(b_float(531.829), b_long(23) * p_float(23.123))
    assertEquals(b_float(-736.0), b_long(23) * p_float(-32.0))
    assertEquals(b_float(-746.48804), b_long(23) * p_float(-32.456))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(23) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(23) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(23) * p_float(Float.NaN_))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(23) * p_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("3.2E-44")), b_long(23) * p_float(Float.MIN_VALUE))

    assertEquals(b_float(-0.0), b_long(-32) * p_float(0.0))
    assertEquals(b_float(-32.0), b_long(-32) * p_float(1.0))
    assertEquals(b_float(32.0), b_long(-32) * p_float(-1.0))
    assertEquals(b_float(-736.0), b_long(-32) * p_float(23.0))
    assertEquals(b_float(-739.936), b_long(-32) * p_float(23.123))
    assertEquals(b_float(1024.0), b_long(-32) * p_float(-32.0))
    assertEquals(b_float(1038.592), b_long(-32) * p_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(-32) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(-32) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(-32) * p_float(Float.NaN_))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(-32) * p_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("-4.5E-44")), b_long(-32) * p_float(Float.MIN_VALUE))

    assertEquals(b_float(0.0), b_long(Long.MAX_VALUE) * p_float(0.0))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_long(Long.MAX_VALUE) * p_float(1.0))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_long(Long.MAX_VALUE) * p_float(-1.0))
    assertEquals(b_float(Float.parseFloat("2.1213756E20")), b_long(Long.MAX_VALUE) * p_float(23.0))
    assertEquals(b_float(Float.parseFloat("2.1327202E20")), b_long(Long.MAX_VALUE) * p_float(23.123))
    assertEquals(b_float(Float.parseFloat("-2.951479E20")), b_long(Long.MAX_VALUE) * p_float(-32.0))
    assertEquals(b_float(Float.parseFloat("-2.9935377E20")), b_long(Long.MAX_VALUE) * p_float(-32.456))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(Long.MAX_VALUE) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(Long.MAX_VALUE) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(Long.MAX_VALUE) * p_float(Float.NaN_))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(Long.MAX_VALUE) * p_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("1.2924697E-26")), b_long(Long.MAX_VALUE) * p_float(Float.MIN_VALUE))

    assertEquals(b_float(-0.0), b_long(Long.MIN_VALUE) * p_float(0.0))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_long(Long.MIN_VALUE) * p_float(1.0))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_long(Long.MIN_VALUE) * p_float(-1.0))
    assertEquals(b_float(Float.parseFloat("-2.1213756E20")), b_long(Long.MIN_VALUE) * p_float(23.0))
    assertEquals(b_float(Float.parseFloat("-2.1327202E20")), b_long(Long.MIN_VALUE) * p_float(23.123))
    assertEquals(b_float(Float.parseFloat("2.951479E20")), b_long(Long.MIN_VALUE) * p_float(-32.0))
    assertEquals(b_float(Float.parseFloat("2.9935377E20")), b_long(Long.MIN_VALUE) * p_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(Long.MIN_VALUE) * p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(Long.MIN_VALUE) * p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(Long.MIN_VALUE) * p_float(Float.NaN_))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(Long.MIN_VALUE) * p_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("-1.2924697E-26")), b_long(Long.MIN_VALUE) * p_float(Float.MIN_VALUE))

    assertEquals(Float, statictypeof(b_long(0) * p_float(0.0)))
  }

  function testLongFloatMultiplication() {
    assertEquals(b_float(0.0), b_long(0) * b_float(0.0))
    assertEquals(b_float(0.0), b_long(0) * b_float(1.0))
    assertEquals(b_float(-0.0), b_long(0) * b_float(-1.0))
    assertEquals(b_float(0.0), b_long(0) * b_float(23.0))
    assertEquals(b_float(0.0), b_long(0) * b_float(23.123))
    assertEquals(b_float(-0.0), b_long(0) * b_float(-32.0))
    assertEquals(b_float(-0.0), b_long(0) * b_float(-32.456))
    assertEquals(b_float(Float.NaN_), b_long(0) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(0) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(0) * b_float(Float.NaN_))
    assertEquals(b_float(0.0), b_long(0) * b_float(Float.MAX_VALUE))
    assertEquals(b_float(0.0), b_long(0) * b_float(Float.MIN_VALUE))

    assertEquals(b_float(0.0), b_long(1) * b_float(0.0))
    assertEquals(b_float(1.0), b_long(1) * b_float(1.0))
    assertEquals(b_float(-1.0), b_long(1) * b_float(-1.0))
    assertEquals(b_float(23.0), b_long(1) * b_float(23.0))
    assertEquals(b_float(23.123), b_long(1) * b_float(23.123))
    assertEquals(b_float(-32.0), b_long(1) * b_float(-32.0))
    assertEquals(b_float(-32.456), b_long(1) * b_float(-32.456))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(1) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(1) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(1) * b_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_long(1) * b_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_long(1) * b_float(Float.MIN_VALUE))

    assertEquals(b_float(-0.0), b_long(-1) * b_float(0.0))
    assertEquals(b_float(-1.0), b_long(-1) * b_float(1.0))
    assertEquals(b_float(1.0), b_long(-1) * b_float(-1.0))
    assertEquals(b_float(-23.0), b_long(-1) * b_float(23.0))
    assertEquals(b_float(-23.123), b_long(-1) * b_float(23.123))
    assertEquals(b_float(32.0), b_long(-1) * b_float(-32.0))
    assertEquals(b_float(32.456), b_long(-1) * b_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(-1) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(-1) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(-1) * b_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_long(-1) * b_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("-1.4E-45")), b_long(-1) * b_float(Float.MIN_VALUE))

    assertEquals(b_float(0.0), b_long(23) * b_float(0.0))
    assertEquals(b_float(23.0), b_long(23) * b_float(1.0))
    assertEquals(b_float(-23.0), b_long(23) * b_float(-1.0))
    assertEquals(b_float(529.0), b_long(23) * b_float(23.0))
    assertEquals(b_float(531.829), b_long(23) * b_float(23.123))
    assertEquals(b_float(-736.0), b_long(23) * b_float(-32.0))
    assertEquals(b_float(-746.48804), b_long(23) * b_float(-32.456))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(23) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(23) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(23) * b_float(Float.NaN_))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(23) * b_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("3.2E-44")), b_long(23) * b_float(Float.MIN_VALUE))

    assertEquals(b_float(-0.0), b_long(-32) * b_float(0.0))
    assertEquals(b_float(-32.0), b_long(-32) * b_float(1.0))
    assertEquals(b_float(32.0), b_long(-32) * b_float(-1.0))
    assertEquals(b_float(-736.0), b_long(-32) * b_float(23.0))
    assertEquals(b_float(-739.936), b_long(-32) * b_float(23.123))
    assertEquals(b_float(1024.0), b_long(-32) * b_float(-32.0))
    assertEquals(b_float(1038.592), b_long(-32) * b_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(-32) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(-32) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(-32) * b_float(Float.NaN_))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(-32) * b_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("-4.5E-44")), b_long(-32) * b_float(Float.MIN_VALUE))

    assertEquals(b_float(0.0), b_long(Long.MAX_VALUE) * b_float(0.0))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_long(Long.MAX_VALUE) * b_float(1.0))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_long(Long.MAX_VALUE) * b_float(-1.0))
    assertEquals(b_float(Float.parseFloat("2.1213756E20")), b_long(Long.MAX_VALUE) * b_float(23.0))
    assertEquals(b_float(Float.parseFloat("2.1327202E20")), b_long(Long.MAX_VALUE) * b_float(23.123))
    assertEquals(b_float(Float.parseFloat("-2.951479E20")), b_long(Long.MAX_VALUE) * b_float(-32.0))
    assertEquals(b_float(Float.parseFloat("-2.9935377E20")), b_long(Long.MAX_VALUE) * b_float(-32.456))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(Long.MAX_VALUE) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(Long.MAX_VALUE) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(Long.MAX_VALUE) * b_float(Float.NaN_))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(Long.MAX_VALUE) * b_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("1.2924697E-26")), b_long(Long.MAX_VALUE) * b_float(Float.MIN_VALUE))

    assertEquals(b_float(-0.0), b_long(Long.MIN_VALUE) * b_float(0.0))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_long(Long.MIN_VALUE) * b_float(1.0))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_long(Long.MIN_VALUE) * b_float(-1.0))
    assertEquals(b_float(Float.parseFloat("-2.1213756E20")), b_long(Long.MIN_VALUE) * b_float(23.0))
    assertEquals(b_float(Float.parseFloat("-2.1327202E20")), b_long(Long.MIN_VALUE) * b_float(23.123))
    assertEquals(b_float(Float.parseFloat("2.951479E20")), b_long(Long.MIN_VALUE) * b_float(-32.0))
    assertEquals(b_float(Float.parseFloat("2.9935377E20")), b_long(Long.MIN_VALUE) * b_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(Long.MIN_VALUE) * b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_long(Long.MIN_VALUE) * b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_long(Long.MIN_VALUE) * b_float(Float.NaN_))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_long(Long.MIN_VALUE) * b_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("-1.2924697E-26")), b_long(Long.MIN_VALUE) * b_float(Float.MIN_VALUE))

    assertEquals(Float, statictypeof(b_long(0) * b_float(0.0)))
  }

  function testLongPDoubleMultiplication() {
    assertEquals(b_double(0.0), b_long(0) * p_double(0.0))
    assertEquals(b_double(0.0), b_long(0) * p_double(1.0))
    assertEquals(b_double(-0.0), b_long(0) * p_double(-1.0))
    assertEquals(b_double(0.0), b_long(0) * p_double(23.0))
    assertEquals(b_double(0.0), b_long(0) * p_double(23.123))
    assertEquals(b_double(-0.0), b_long(0) * p_double(-32.0))
    assertEquals(b_double(-0.0), b_long(0) * p_double(-32.456))
    assertEquals(b_double(Double.NaN_), b_long(0) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(0) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(0) * p_double(Double.NaN_))
    assertEquals(b_double(0.0), b_long(0) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(0.0), b_long(0) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_long(1) * p_double(0.0))
    assertEquals(b_double(1.0), b_long(1) * p_double(1.0))
    assertEquals(b_double(-1.0), b_long(1) * p_double(-1.0))
    assertEquals(b_double(23.0), b_long(1) * p_double(23.0))
    assertEquals(b_double(23.123), b_long(1) * p_double(23.123))
    assertEquals(b_double(-32.0), b_long(1) * p_double(-32.0))
    assertEquals(b_double(-32.456), b_long(1) * p_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(1) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(1) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(1) * p_double(Double.NaN_))
    assertEquals(b_double(Double.MAX_VALUE), b_long(1) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.MIN_VALUE), b_long(1) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(-0.0), b_long(-1) * p_double(0.0))
    assertEquals(b_double(-1.0), b_long(-1) * p_double(1.0))
    assertEquals(b_double(1.0), b_long(-1) * p_double(-1.0))
    assertEquals(b_double(-23.0), b_long(-1) * p_double(23.0))
    assertEquals(b_double(-23.123), b_long(-1) * p_double(23.123))
    assertEquals(b_double(32.0), b_long(-1) * p_double(-32.0))
    assertEquals(b_double(32.456), b_long(-1) * p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(-1) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(-1) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(-1) * p_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_long(-1) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_long(-1) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_long(23) * p_double(0.0))
    assertEquals(b_double(23.0), b_long(23) * p_double(1.0))
    assertEquals(b_double(-23.0), b_long(23) * p_double(-1.0))
    assertEquals(b_double(529.0), b_long(23) * p_double(23.0))
    assertEquals(b_double(531.8290000000001), b_long(23) * p_double(23.123))
    assertEquals(b_double(-736.0), b_long(23) * p_double(-32.0))
    assertEquals(b_double(-746.488), b_long(23) * p_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(23) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(23) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(23) * p_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(23) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_long(23) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(-0.0), b_long(-32) * p_double(0.0))
    assertEquals(b_double(-32.0), b_long(-32) * p_double(1.0))
    assertEquals(b_double(32.0), b_long(-32) * p_double(-1.0))
    assertEquals(b_double(-736.0), b_long(-32) * p_double(23.0))
    assertEquals(b_double(-739.936), b_long(-32) * p_double(23.123))
    assertEquals(b_double(1024.0), b_long(-32) * p_double(-32.0))
    assertEquals(b_double(1038.592), b_long(-32) * p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(-32) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(-32) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(-32) * p_double(Double.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(-32) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_long(-32) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_long(Long.MAX_VALUE) * p_double(0.0))
    assertEquals(b_double(Double.parseDouble("9.223372036854776E18")), b_long(Long.MAX_VALUE) * p_double(1.0))
    assertEquals(b_double(Double.parseDouble("-9.223372036854776E18")), b_long(Long.MAX_VALUE) * p_double(-1.0))
    assertEquals(b_double(Double.parseDouble("2.1213755684765984E20")), b_long(Long.MAX_VALUE) * p_double(23.0))
    assertEquals(b_double(Double.parseDouble("2.13272031608193E20")), b_long(Long.MAX_VALUE) * p_double(23.123))
    assertEquals(b_double(Double.parseDouble("-2.9514790517935283E20")), b_long(Long.MAX_VALUE) * p_double(-32.0))
    assertEquals(b_double(Double.parseDouble("-2.993537628281586E20")), b_long(Long.MAX_VALUE) * p_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(Long.MAX_VALUE) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(Long.MAX_VALUE) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(Long.MAX_VALUE) * p_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(Long.MAX_VALUE) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("4.5569512622227484E-305")), b_long(Long.MAX_VALUE) * p_double(Double.MIN_VALUE))

    assertEquals(b_double(-0.0), b_long(Long.MIN_VALUE) * p_double(0.0))
    assertEquals(b_double(Double.parseDouble("-9.223372036854776E18")), b_long(Long.MIN_VALUE) * p_double(1.0))
    assertEquals(b_double(Double.parseDouble("9.223372036854776E18")), b_long(Long.MIN_VALUE) * p_double(-1.0))
    assertEquals(b_double(Double.parseDouble("-2.1213755684765984E20")), b_long(Long.MIN_VALUE) * p_double(23.0))
    assertEquals(b_double(Double.parseDouble("-2.13272031608193E20")), b_long(Long.MIN_VALUE) * p_double(23.123))
    assertEquals(b_double(Double.parseDouble("2.9514790517935283E20")), b_long(Long.MIN_VALUE) * p_double(-32.0))
    assertEquals(b_double(Double.parseDouble("2.993537628281586E20")), b_long(Long.MIN_VALUE) * p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(Long.MIN_VALUE) * p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(Long.MIN_VALUE) * p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(Long.MIN_VALUE) * p_double(Double.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(Long.MIN_VALUE) * p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.5569512622227484E-305")), b_long(Long.MIN_VALUE) * p_double(Double.MIN_VALUE))

    assertEquals(Double, statictypeof(b_long(0) * p_double(0.0)))
  }

  function testLongDoubleMultiplication() {
    assertEquals(b_double(0.0), b_long(0) * b_double(0.0))
    assertEquals(b_double(0.0), b_long(0) * b_double(1.0))
    assertEquals(b_double(-0.0), b_long(0) * b_double(-1.0))
    assertEquals(b_double(0.0), b_long(0) * b_double(23.0))
    assertEquals(b_double(0.0), b_long(0) * b_double(23.123))
    assertEquals(b_double(-0.0), b_long(0) * b_double(-32.0))
    assertEquals(b_double(-0.0), b_long(0) * b_double(-32.456))
    assertEquals(b_double(Double.NaN_), b_long(0) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(0) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(0) * b_double(Double.NaN_))
    assertEquals(b_double(0.0), b_long(0) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(0.0), b_long(0) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_long(1) * b_double(0.0))
    assertEquals(b_double(1.0), b_long(1) * b_double(1.0))
    assertEquals(b_double(-1.0), b_long(1) * b_double(-1.0))
    assertEquals(b_double(23.0), b_long(1) * b_double(23.0))
    assertEquals(b_double(23.123), b_long(1) * b_double(23.123))
    assertEquals(b_double(-32.0), b_long(1) * b_double(-32.0))
    assertEquals(b_double(-32.456), b_long(1) * b_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(1) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(1) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(1) * b_double(Double.NaN_))
    assertEquals(b_double(Double.MAX_VALUE), b_long(1) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.MIN_VALUE), b_long(1) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(-0.0), b_long(-1) * b_double(0.0))
    assertEquals(b_double(-1.0), b_long(-1) * b_double(1.0))
    assertEquals(b_double(1.0), b_long(-1) * b_double(-1.0))
    assertEquals(b_double(-23.0), b_long(-1) * b_double(23.0))
    assertEquals(b_double(-23.123), b_long(-1) * b_double(23.123))
    assertEquals(b_double(32.0), b_long(-1) * b_double(-32.0))
    assertEquals(b_double(32.456), b_long(-1) * b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(-1) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(-1) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(-1) * b_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_long(-1) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_long(-1) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_long(23) * b_double(0.0))
    assertEquals(b_double(23.0), b_long(23) * b_double(1.0))
    assertEquals(b_double(-23.0), b_long(23) * b_double(-1.0))
    assertEquals(b_double(529.0), b_long(23) * b_double(23.0))
    assertEquals(b_double(531.8290000000001), b_long(23) * b_double(23.123))
    assertEquals(b_double(-736.0), b_long(23) * b_double(-32.0))
    assertEquals(b_double(-746.488), b_long(23) * b_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(23) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(23) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(23) * b_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(23) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("1.14E-322")), b_long(23) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(-0.0), b_long(-32) * b_double(0.0))
    assertEquals(b_double(-32.0), b_long(-32) * b_double(1.0))
    assertEquals(b_double(32.0), b_long(-32) * b_double(-1.0))
    assertEquals(b_double(-736.0), b_long(-32) * b_double(23.0))
    assertEquals(b_double(-739.936), b_long(-32) * b_double(23.123))
    assertEquals(b_double(1024.0), b_long(-32) * b_double(-32.0))
    assertEquals(b_double(1038.592), b_long(-32) * b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(-32) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(-32) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(-32) * b_double(Double.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(-32) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-1.58E-322")), b_long(-32) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(0.0), b_long(Long.MAX_VALUE) * b_double(0.0))
    assertEquals(b_double(Double.parseDouble("9.223372036854776E18")), b_long(Long.MAX_VALUE) * b_double(1.0))
    assertEquals(b_double(Double.parseDouble("-9.223372036854776E18")), b_long(Long.MAX_VALUE) * b_double(-1.0))
    assertEquals(b_double(Double.parseDouble("2.1213755684765984E20")), b_long(Long.MAX_VALUE) * b_double(23.0))
    assertEquals(b_double(Double.parseDouble("2.13272031608193E20")), b_long(Long.MAX_VALUE) * b_double(23.123))
    assertEquals(b_double(Double.parseDouble("-2.9514790517935283E20")), b_long(Long.MAX_VALUE) * b_double(-32.0))
    assertEquals(b_double(Double.parseDouble("-2.993537628281586E20")), b_long(Long.MAX_VALUE) * b_double(-32.456))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(Long.MAX_VALUE) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(Long.MAX_VALUE) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(Long.MAX_VALUE) * b_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(Long.MAX_VALUE) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("4.5569512622227484E-305")), b_long(Long.MAX_VALUE) * b_double(Double.MIN_VALUE))

    assertEquals(b_double(-0.0), b_long(Long.MIN_VALUE) * b_double(0.0))
    assertEquals(b_double(Double.parseDouble("-9.223372036854776E18")), b_long(Long.MIN_VALUE) * b_double(1.0))
    assertEquals(b_double(Double.parseDouble("9.223372036854776E18")), b_long(Long.MIN_VALUE) * b_double(-1.0))
    assertEquals(b_double(Double.parseDouble("-2.1213755684765984E20")), b_long(Long.MIN_VALUE) * b_double(23.0))
    assertEquals(b_double(Double.parseDouble("-2.13272031608193E20")), b_long(Long.MIN_VALUE) * b_double(23.123))
    assertEquals(b_double(Double.parseDouble("2.9514790517935283E20")), b_long(Long.MIN_VALUE) * b_double(-32.0))
    assertEquals(b_double(Double.parseDouble("2.993537628281586E20")), b_long(Long.MIN_VALUE) * b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(Long.MIN_VALUE) * b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_long(Long.MIN_VALUE) * b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_long(Long.MIN_VALUE) * b_double(Double.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_long(Long.MIN_VALUE) * b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.5569512622227484E-305")), b_long(Long.MIN_VALUE) * b_double(Double.MIN_VALUE))

    assertEquals(Double, statictypeof(b_long(0) * b_double(0.0)))
  }

  function testLongBigIntegerMultiplication() {
    assertEquals(big_int("0"), b_long(0) * big_int("0"))
    assertEquals(big_int("0"), b_long(0) * big_int("1"))
    assertEquals(big_int("0"), b_long(0) * big_int("-1"))
    assertEquals(big_int("0"), b_long(0) * big_int("23"))
    assertEquals(big_int("0"), b_long(0) * big_int("-32"))
    assertEquals(big_int("0"), b_long(0) * big_int("123456789012345678901234567890"))
    assertEquals(big_int("0"), b_long(0) * big_int("-123456789012345678901234567890"))

    assertEquals(big_int("0"), b_long(1) * big_int("0"))
    assertEquals(big_int("1"), b_long(1) * big_int("1"))
    assertEquals(big_int("-1"), b_long(1) * big_int("-1"))
    assertEquals(big_int("23"), b_long(1) * big_int("23"))
    assertEquals(big_int("-32"), b_long(1) * big_int("-32"))
    assertEquals(big_int("123456789012345678901234567890"), b_long(1) * big_int("123456789012345678901234567890"))
    assertEquals(big_int("-123456789012345678901234567890"), b_long(1) * big_int("-123456789012345678901234567890"))

    assertEquals(big_int("0"), b_long(-1) * big_int("0"))
    assertEquals(big_int("-1"), b_long(-1) * big_int("1"))
    assertEquals(big_int("1"), b_long(-1) * big_int("-1"))
    assertEquals(big_int("-23"), b_long(-1) * big_int("23"))
    assertEquals(big_int("32"), b_long(-1) * big_int("-32"))
    assertEquals(big_int("-123456789012345678901234567890"), b_long(-1) * big_int("123456789012345678901234567890"))
    assertEquals(big_int("123456789012345678901234567890"), b_long(-1) * big_int("-123456789012345678901234567890"))

    assertEquals(big_int("0"), b_long(23) * big_int("0"))
    assertEquals(big_int("23"), b_long(23) * big_int("1"))
    assertEquals(big_int("-23"), b_long(23) * big_int("-1"))
    assertEquals(big_int("529"), b_long(23) * big_int("23"))
    assertEquals(big_int("-736"), b_long(23) * big_int("-32"))
    assertEquals(big_int("2839506147283950614728395061470"), b_long(23) * big_int("123456789012345678901234567890"))
    assertEquals(big_int("-2839506147283950614728395061470"), b_long(23) * big_int("-123456789012345678901234567890"))

    assertEquals(big_int("0"), b_long(-32) * big_int("0"))
    assertEquals(big_int("-32"), b_long(-32) * big_int("1"))
    assertEquals(big_int("32"), b_long(-32) * big_int("-1"))
    assertEquals(big_int("-736"), b_long(-32) * big_int("23"))
    assertEquals(big_int("1024"), b_long(-32) * big_int("-32"))
    assertEquals(big_int("-3950617248395061724839506172480"), b_long(-32) * big_int("123456789012345678901234567890"))
    assertEquals(big_int("3950617248395061724839506172480"), b_long(-32) * big_int("-123456789012345678901234567890"))

    assertEquals(big_int("0"), b_long(Long.MAX_VALUE) * big_int("0"))
    assertEquals(big_int("9223372036854775807"), b_long(Long.MAX_VALUE) * big_int("1"))
    assertEquals(big_int("-9223372036854775807"), b_long(Long.MAX_VALUE) * big_int("-1"))
    assertEquals(big_int("212137556847659843561"), b_long(Long.MAX_VALUE) * big_int("23"))
    assertEquals(big_int("-295147905179352825824"), b_long(Long.MAX_VALUE) * big_int("-32"))
    assertEquals(big_int("1138687895536349070000738629998935175104471037230"), b_long(Long.MAX_VALUE) * big_int("123456789012345678901234567890"))
    assertEquals(big_int("-1138687895536349070000738629998935175104471037230"), b_long(Long.MAX_VALUE) * big_int("-123456789012345678901234567890"))

    assertEquals(big_int("0"), b_long(Long.MIN_VALUE) * big_int("0"))
    assertEquals(big_int("-9223372036854775808"), b_long(Long.MIN_VALUE) * big_int("1"))
    assertEquals(big_int("9223372036854775808"), b_long(Long.MIN_VALUE) * big_int("-1"))
    assertEquals(big_int("-212137556847659843584"), b_long(Long.MIN_VALUE) * big_int("23"))
    assertEquals(big_int("295147905179352825856"), b_long(Long.MIN_VALUE) * big_int("-32"))
    assertEquals(big_int("-1138687895536349070124195419011280854005705605120"), b_long(Long.MIN_VALUE) * big_int("123456789012345678901234567890"))
    assertEquals(big_int("1138687895536349070124195419011280854005705605120"), b_long(Long.MIN_VALUE) * big_int("-123456789012345678901234567890"))

    assertEquals(BigInteger, statictypeof(b_long(0) * big_int("0")))
  }

  function testLongBigDecimalMultiplication() {
    assertEquals(big_decimal("0"), b_long(0) * big_decimal("0"))
    assertEquals(big_decimal("0"), b_long(0) * big_decimal("1"))
    assertEquals(big_decimal("0"), b_long(0) * big_decimal("-1"))
    assertEquals(big_decimal("0"), b_long(0) * big_decimal("23"))
    assertEquals(big_decimal("0.000"), b_long(0) * big_decimal("23.123"))
    assertEquals(big_decimal("0"), b_long(0) * big_decimal("-32"))
    assertEquals(big_decimal("0.000"), b_long(0) * big_decimal("-32.456"))
    assertEquals(big_decimal("0E-9"), b_long(0) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("0E-9"), b_long(0) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0"), b_long(1) * big_decimal("0"))
    assertEquals(big_decimal("1"), b_long(1) * big_decimal("1"))
    assertEquals(big_decimal("-1"), b_long(1) * big_decimal("-1"))
    assertEquals(big_decimal("23"), b_long(1) * big_decimal("23"))
    assertEquals(big_decimal("23.123"), b_long(1) * big_decimal("23.123"))
    assertEquals(big_decimal("-32"), b_long(1) * big_decimal("-32"))
    assertEquals(big_decimal("-32.456"), b_long(1) * big_decimal("-32.456"))
    assertEquals(big_decimal("123456789012345678901234567890.123456789"), b_long(1) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("-123456789012345678901234567890.123456789"), b_long(1) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0"), b_long(-1) * big_decimal("0"))
    assertEquals(big_decimal("-1"), b_long(-1) * big_decimal("1"))
    assertEquals(big_decimal("1"), b_long(-1) * big_decimal("-1"))
    assertEquals(big_decimal("-23"), b_long(-1) * big_decimal("23"))
    assertEquals(big_decimal("-23.123"), b_long(-1) * big_decimal("23.123"))
    assertEquals(big_decimal("32"), b_long(-1) * big_decimal("-32"))
    assertEquals(big_decimal("32.456"), b_long(-1) * big_decimal("-32.456"))
    assertEquals(big_decimal("-123456789012345678901234567890.123456789"), b_long(-1) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("123456789012345678901234567890.123456789"), b_long(-1) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0"), b_long(23) * big_decimal("0"))
    assertEquals(big_decimal("23"), b_long(23) * big_decimal("1"))
    assertEquals(big_decimal("-23"), b_long(23) * big_decimal("-1"))
    assertEquals(big_decimal("529"), b_long(23) * big_decimal("23"))
    assertEquals(big_decimal("531.829"), b_long(23) * big_decimal("23.123"))
    assertEquals(big_decimal("-736"), b_long(23) * big_decimal("-32"))
    assertEquals(big_decimal("-746.488"), b_long(23) * big_decimal("-32.456"))
    assertEquals(big_decimal("2839506147283950614728395061472.839506147"), b_long(23) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("-2839506147283950614728395061472.839506147"), b_long(23) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0"), b_long(-32) * big_decimal("0"))
    assertEquals(big_decimal("-32"), b_long(-32) * big_decimal("1"))
    assertEquals(big_decimal("32"), b_long(-32) * big_decimal("-1"))
    assertEquals(big_decimal("-736"), b_long(-32) * big_decimal("23"))
    assertEquals(big_decimal("-739.936"), b_long(-32) * big_decimal("23.123"))
    assertEquals(big_decimal("1024"), b_long(-32) * big_decimal("-32"))
    assertEquals(big_decimal("1038.592"), b_long(-32) * big_decimal("-32.456"))
    assertEquals(big_decimal("-3950617248395061724839506172483.950617248"), b_long(-32) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("3950617248395061724839506172483.950617248"), b_long(-32) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0"), b_long(Long.MAX_VALUE) * big_decimal("0"))
    assertEquals(big_decimal("9223372036854775807"), b_long(Long.MAX_VALUE) * big_decimal("1"))
    assertEquals(big_decimal("-9223372036854775807"), b_long(Long.MAX_VALUE) * big_decimal("-1"))
    assertEquals(big_decimal("212137556847659843561"), b_long(Long.MAX_VALUE) * big_decimal("23"))
    assertEquals(big_decimal("213272031608192980985.261"), b_long(Long.MAX_VALUE) * big_decimal("23.123"))
    assertEquals(big_decimal("-295147905179352825824"), b_long(Long.MAX_VALUE) * big_decimal("-32"))
    assertEquals(big_decimal("-299353762828158603591.992"), b_long(Long.MAX_VALUE) * big_decimal("-32.456"))
    assertEquals(big_decimal("1138687895536349070000738630000073862999893517510.447103723"), b_long(Long.MAX_VALUE) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("-1138687895536349070000738630000073862999893517510.447103723"), b_long(Long.MAX_VALUE) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("0"), b_long(Long.MIN_VALUE) * big_decimal("0"))
    assertEquals(big_decimal("-9223372036854775808"), b_long(Long.MIN_VALUE) * big_decimal("1"))
    assertEquals(big_decimal("9223372036854775808"), b_long(Long.MIN_VALUE) * big_decimal("-1"))
    assertEquals(big_decimal("-212137556847659843584"), b_long(Long.MIN_VALUE) * big_decimal("23"))
    assertEquals(big_decimal("-213272031608192981008.384"), b_long(Long.MIN_VALUE) * big_decimal("23.123"))
    assertEquals(big_decimal("295147905179352825856"), b_long(Long.MIN_VALUE) * big_decimal("-32"))
    assertEquals(big_decimal("299353762828158603624.448"), b_long(Long.MIN_VALUE) * big_decimal("-32.456"))
    assertEquals(big_decimal("-1138687895536349070124195419012419541901128085400.570560512"), b_long(Long.MIN_VALUE) * big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("1138687895536349070124195419012419541901128085400.570560512"), b_long(Long.MIN_VALUE) * big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(BigDecimal, statictypeof(b_long(0) * big_decimal("0")))
  }

}

