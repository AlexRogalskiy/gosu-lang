package gw.spec.core.expressions.arithmetic.subtraction
uses java.lang.Byte
uses java.lang.Character
uses java.lang.Integer
uses java.lang.Short
uses java.lang.Long
uses java.lang.Float
uses java.lang.Double
uses java.math.BigInteger
uses java.math.BigDecimal
uses gw.spec.core.expressions.arithmetic.ArithmeticTestBase

class Subtraction_FloatTest extends ArithmeticTestBase {

  function testFloatPByteSubtraction() {
    assertEquals(b_float(0.0), b_float(0.0) - p_byte(0))
    assertEquals(b_float(-23.0), b_float(0.0) - p_byte(23))
    assertEquals(b_float(32.0), b_float(0.0) - p_byte(-32))
    assertEquals(b_float(-127.0), b_float(0.0) - p_byte(Byte.MAX_VALUE))
    assertEquals(b_float(128.0), b_float(0.0) - p_byte(Byte.MIN_VALUE))

    assertEquals(b_float(23.0), b_float(23.0) - p_byte(0))
    assertEquals(b_float(0.0), b_float(23.0) - p_byte(23))
    assertEquals(b_float(55.0), b_float(23.0) - p_byte(-32))
    assertEquals(b_float(-104.0), b_float(23.0) - p_byte(Byte.MAX_VALUE))
    assertEquals(b_float(151.0), b_float(23.0) - p_byte(Byte.MIN_VALUE))

    assertEquals(b_float(23.123), b_float(23.123) - p_byte(0))
    assertEquals(b_float(0.12299919), b_float(23.123) - p_byte(23))
    assertEquals(b_float(55.123), b_float(23.123) - p_byte(-32))
    assertEquals(b_float(-103.877), b_float(23.123) - p_byte(Byte.MAX_VALUE))
    assertEquals(b_float(151.123), b_float(23.123) - p_byte(Byte.MIN_VALUE))

    assertEquals(b_float(-32.0), b_float(-32.0) - p_byte(0))
    assertEquals(b_float(-55.0), b_float(-32.0) - p_byte(23))
    assertEquals(b_float(0.0), b_float(-32.0) - p_byte(-32))
    assertEquals(b_float(-159.0), b_float(-32.0) - p_byte(Byte.MAX_VALUE))
    assertEquals(b_float(96.0), b_float(-32.0) - p_byte(Byte.MIN_VALUE))

    assertEquals(b_float(-32.456), b_float(-32.456) - p_byte(0))
    assertEquals(b_float(-55.456), b_float(-32.456) - p_byte(23))
    assertEquals(b_float(-0.45600128), b_float(-32.456) - p_byte(-32))
    assertEquals(b_float(-159.456), b_float(-32.456) - p_byte(Byte.MAX_VALUE))
    assertEquals(b_float(95.544), b_float(-32.456) - p_byte(Byte.MIN_VALUE))

    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_byte(0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_byte(23))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_byte(-32))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_byte(Byte.MAX_VALUE))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_byte(Byte.MIN_VALUE))

    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_byte(0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_byte(23))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_byte(-32))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_byte(Byte.MAX_VALUE))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_byte(Byte.MIN_VALUE))

    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_byte(0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_byte(23))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_byte(-32))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_byte(Byte.MAX_VALUE))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_byte(Byte.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_byte(0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_byte(23))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_byte(-32))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_byte(Byte.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_byte(Byte.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_float(Float.MIN_VALUE) - p_byte(0))
    assertEquals(b_float(-23.0), b_float(Float.MIN_VALUE) - p_byte(23))
    assertEquals(b_float(32.0), b_float(Float.MIN_VALUE) - p_byte(-32))
    assertEquals(b_float(-127.0), b_float(Float.MIN_VALUE) - p_byte(Byte.MAX_VALUE))
    assertEquals(b_float(128.0), b_float(Float.MIN_VALUE) - p_byte(Byte.MIN_VALUE))

    assertEquals(Float, statictypeof(b_float(0.0) - p_byte(0)))
  }

  function testFloatByteSubtraction() {
    assertEquals(b_float(0.0), b_float(0.0) - b_byte(0))
    assertEquals(b_float(-23.0), b_float(0.0) - b_byte(23))
    assertEquals(b_float(32.0), b_float(0.0) - b_byte(-32))
    assertEquals(b_float(-127.0), b_float(0.0) - b_byte(Byte.MAX_VALUE))
    assertEquals(b_float(128.0), b_float(0.0) - b_byte(Byte.MIN_VALUE))

    assertEquals(b_float(23.0), b_float(23.0) - b_byte(0))
    assertEquals(b_float(0.0), b_float(23.0) - b_byte(23))
    assertEquals(b_float(55.0), b_float(23.0) - b_byte(-32))
    assertEquals(b_float(-104.0), b_float(23.0) - b_byte(Byte.MAX_VALUE))
    assertEquals(b_float(151.0), b_float(23.0) - b_byte(Byte.MIN_VALUE))

    assertEquals(b_float(23.123), b_float(23.123) - b_byte(0))
    assertEquals(b_float(0.12299919), b_float(23.123) - b_byte(23))
    assertEquals(b_float(55.123), b_float(23.123) - b_byte(-32))
    assertEquals(b_float(-103.877), b_float(23.123) - b_byte(Byte.MAX_VALUE))
    assertEquals(b_float(151.123), b_float(23.123) - b_byte(Byte.MIN_VALUE))

    assertEquals(b_float(-32.0), b_float(-32.0) - b_byte(0))
    assertEquals(b_float(-55.0), b_float(-32.0) - b_byte(23))
    assertEquals(b_float(0.0), b_float(-32.0) - b_byte(-32))
    assertEquals(b_float(-159.0), b_float(-32.0) - b_byte(Byte.MAX_VALUE))
    assertEquals(b_float(96.0), b_float(-32.0) - b_byte(Byte.MIN_VALUE))

    assertEquals(b_float(-32.456), b_float(-32.456) - b_byte(0))
    assertEquals(b_float(-55.456), b_float(-32.456) - b_byte(23))
    assertEquals(b_float(-0.45600128), b_float(-32.456) - b_byte(-32))
    assertEquals(b_float(-159.456), b_float(-32.456) - b_byte(Byte.MAX_VALUE))
    assertEquals(b_float(95.544), b_float(-32.456) - b_byte(Byte.MIN_VALUE))

    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_byte(0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_byte(23))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_byte(-32))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_byte(Byte.MAX_VALUE))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_byte(Byte.MIN_VALUE))

    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_byte(0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_byte(23))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_byte(-32))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_byte(Byte.MAX_VALUE))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_byte(Byte.MIN_VALUE))

    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_byte(0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_byte(23))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_byte(-32))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_byte(Byte.MAX_VALUE))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_byte(Byte.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_byte(0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_byte(23))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_byte(-32))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_byte(Byte.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_byte(Byte.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_float(Float.MIN_VALUE) - b_byte(0))
    assertEquals(b_float(-23.0), b_float(Float.MIN_VALUE) - b_byte(23))
    assertEquals(b_float(32.0), b_float(Float.MIN_VALUE) - b_byte(-32))
    assertEquals(b_float(-127.0), b_float(Float.MIN_VALUE) - b_byte(Byte.MAX_VALUE))
    assertEquals(b_float(128.0), b_float(Float.MIN_VALUE) - b_byte(Byte.MIN_VALUE))

    assertEquals(Float, statictypeof(b_float(0.0) - b_byte(0)))
  }

  function testFloatPShortSubtraction() {
    assertEquals(b_float(0.0), b_float(0.0) - p_short(0))
    assertEquals(b_float(-23.0), b_float(0.0) - p_short(23))
    assertEquals(b_float(32.0), b_float(0.0) - p_short(-32))
    assertEquals(b_float(-32767.0), b_float(0.0) - p_short(Short.MAX_VALUE))
    assertEquals(b_float(32768.0), b_float(0.0) - p_short(Short.MIN_VALUE))

    assertEquals(b_float(23.0), b_float(23.0) - p_short(0))
    assertEquals(b_float(0.0), b_float(23.0) - p_short(23))
    assertEquals(b_float(55.0), b_float(23.0) - p_short(-32))
    assertEquals(b_float(-32744.0), b_float(23.0) - p_short(Short.MAX_VALUE))
    assertEquals(b_float(32791.0), b_float(23.0) - p_short(Short.MIN_VALUE))

    assertEquals(b_float(23.123), b_float(23.123) - p_short(0))
    assertEquals(b_float(0.12299919), b_float(23.123) - p_short(23))
    assertEquals(b_float(55.123), b_float(23.123) - p_short(-32))
    assertEquals(b_float(-32743.877), b_float(23.123) - p_short(Short.MAX_VALUE))
    assertEquals(b_float(32791.12), b_float(23.123) - p_short(Short.MIN_VALUE))

    assertEquals(b_float(-32.0), b_float(-32.0) - p_short(0))
    assertEquals(b_float(-55.0), b_float(-32.0) - p_short(23))
    assertEquals(b_float(0.0), b_float(-32.0) - p_short(-32))
    assertEquals(b_float(-32799.0), b_float(-32.0) - p_short(Short.MAX_VALUE))
    assertEquals(b_float(32736.0), b_float(-32.0) - p_short(Short.MIN_VALUE))

    assertEquals(b_float(-32.456), b_float(-32.456) - p_short(0))
    assertEquals(b_float(-55.456), b_float(-32.456) - p_short(23))
    assertEquals(b_float(-0.45600128), b_float(-32.456) - p_short(-32))
    assertEquals(b_float(-32799.457), b_float(-32.456) - p_short(Short.MAX_VALUE))
    assertEquals(b_float(32735.545), b_float(-32.456) - p_short(Short.MIN_VALUE))

    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_short(0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_short(23))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_short(-32))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_short(Short.MAX_VALUE))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_short(Short.MIN_VALUE))

    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_short(0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_short(23))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_short(-32))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_short(Short.MAX_VALUE))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_short(Short.MIN_VALUE))

    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_short(0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_short(23))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_short(-32))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_short(Short.MAX_VALUE))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_short(Short.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_short(0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_short(23))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_short(-32))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_short(Short.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_short(Short.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_float(Float.MIN_VALUE) - p_short(0))
    assertEquals(b_float(-23.0), b_float(Float.MIN_VALUE) - p_short(23))
    assertEquals(b_float(32.0), b_float(Float.MIN_VALUE) - p_short(-32))
    assertEquals(b_float(-32767.0), b_float(Float.MIN_VALUE) - p_short(Short.MAX_VALUE))
    assertEquals(b_float(32768.0), b_float(Float.MIN_VALUE) - p_short(Short.MIN_VALUE))

    assertEquals(Float, statictypeof(b_float(0.0) - p_short(0)))
  }

  function testFloatShortSubtraction() {
    assertEquals(b_float(0.0), b_float(0.0) - b_short(0))
    assertEquals(b_float(-23.0), b_float(0.0) - b_short(23))
    assertEquals(b_float(32.0), b_float(0.0) - b_short(-32))
    assertEquals(b_float(-32767.0), b_float(0.0) - b_short(Short.MAX_VALUE))
    assertEquals(b_float(32768.0), b_float(0.0) - b_short(Short.MIN_VALUE))

    assertEquals(b_float(23.0), b_float(23.0) - b_short(0))
    assertEquals(b_float(0.0), b_float(23.0) - b_short(23))
    assertEquals(b_float(55.0), b_float(23.0) - b_short(-32))
    assertEquals(b_float(-32744.0), b_float(23.0) - b_short(Short.MAX_VALUE))
    assertEquals(b_float(32791.0), b_float(23.0) - b_short(Short.MIN_VALUE))

    assertEquals(b_float(23.123), b_float(23.123) - b_short(0))
    assertEquals(b_float(0.12299919), b_float(23.123) - b_short(23))
    assertEquals(b_float(55.123), b_float(23.123) - b_short(-32))
    assertEquals(b_float(-32743.877), b_float(23.123) - b_short(Short.MAX_VALUE))
    assertEquals(b_float(32791.12), b_float(23.123) - b_short(Short.MIN_VALUE))

    assertEquals(b_float(-32.0), b_float(-32.0) - b_short(0))
    assertEquals(b_float(-55.0), b_float(-32.0) - b_short(23))
    assertEquals(b_float(0.0), b_float(-32.0) - b_short(-32))
    assertEquals(b_float(-32799.0), b_float(-32.0) - b_short(Short.MAX_VALUE))
    assertEquals(b_float(32736.0), b_float(-32.0) - b_short(Short.MIN_VALUE))

    assertEquals(b_float(-32.456), b_float(-32.456) - b_short(0))
    assertEquals(b_float(-55.456), b_float(-32.456) - b_short(23))
    assertEquals(b_float(-0.45600128), b_float(-32.456) - b_short(-32))
    assertEquals(b_float(-32799.457), b_float(-32.456) - b_short(Short.MAX_VALUE))
    assertEquals(b_float(32735.545), b_float(-32.456) - b_short(Short.MIN_VALUE))

    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_short(0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_short(23))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_short(-32))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_short(Short.MAX_VALUE))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_short(Short.MIN_VALUE))

    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_short(0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_short(23))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_short(-32))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_short(Short.MAX_VALUE))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_short(Short.MIN_VALUE))

    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_short(0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_short(23))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_short(-32))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_short(Short.MAX_VALUE))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_short(Short.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_short(0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_short(23))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_short(-32))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_short(Short.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_short(Short.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_float(Float.MIN_VALUE) - b_short(0))
    assertEquals(b_float(-23.0), b_float(Float.MIN_VALUE) - b_short(23))
    assertEquals(b_float(32.0), b_float(Float.MIN_VALUE) - b_short(-32))
    assertEquals(b_float(-32767.0), b_float(Float.MIN_VALUE) - b_short(Short.MAX_VALUE))
    assertEquals(b_float(32768.0), b_float(Float.MIN_VALUE) - b_short(Short.MIN_VALUE))

    assertEquals(Float, statictypeof(b_float(0.0) - b_short(0)))
  }

  function testFloatPCharSubtraction() {
    assertEquals(b_float(0.0), b_float(0.0) - p_char(0))
    assertEquals(b_float(-23.0), b_float(0.0) - p_char(23))
    assertEquals(b_float(-65535.0), b_float(0.0) - p_char(Character.MAX_VALUE))

    assertEquals(b_float(23.0), b_float(23.0) - p_char(0))
    assertEquals(b_float(0.0), b_float(23.0) - p_char(23))
    assertEquals(b_float(-65512.0), b_float(23.0) - p_char(Character.MAX_VALUE))

    assertEquals(b_float(23.123), b_float(23.123) - p_char(0))
    assertEquals(b_float(0.12299919), b_float(23.123) - p_char(23))
    assertEquals(b_float(-65511.88), b_float(23.123) - p_char(Character.MAX_VALUE))

    assertEquals(b_float(-32.0), b_float(-32.0) - p_char(0))
    assertEquals(b_float(-55.0), b_float(-32.0) - p_char(23))
    assertEquals(b_float(-65567.0), b_float(-32.0) - p_char(Character.MAX_VALUE))

    assertEquals(b_float(-32.456), b_float(-32.456) - p_char(0))
    assertEquals(b_float(-55.456), b_float(-32.456) - p_char(23))
    assertEquals(b_float(-65567.45), b_float(-32.456) - p_char(Character.MAX_VALUE))

    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_char(0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_char(23))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_char(Character.MAX_VALUE))

    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_char(0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_char(23))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_char(Character.MAX_VALUE))

    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_char(0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_char(23))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_char(Character.MAX_VALUE))

    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_char(0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_char(23))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_char(Character.MAX_VALUE))

    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_float(Float.MIN_VALUE) - p_char(0))
    assertEquals(b_float(-23.0), b_float(Float.MIN_VALUE) - p_char(23))
    assertEquals(b_float(-65535.0), b_float(Float.MIN_VALUE) - p_char(Character.MAX_VALUE))

    assertEquals(Float, statictypeof(b_float(0.0) - p_char(0)))
  }

  function testFloatCharacterSubtraction() {
    assertEquals(b_float(0.0), b_float(0.0) - b_char(0))
    assertEquals(b_float(-23.0), b_float(0.0) - b_char(23))
    assertEquals(b_float(-65535.0), b_float(0.0) - b_char(Character.MAX_VALUE))

    assertEquals(b_float(23.0), b_float(23.0) - b_char(0))
    assertEquals(b_float(0.0), b_float(23.0) - b_char(23))
    assertEquals(b_float(-65512.0), b_float(23.0) - b_char(Character.MAX_VALUE))

    assertEquals(b_float(23.123), b_float(23.123) - b_char(0))
    assertEquals(b_float(0.12299919), b_float(23.123) - b_char(23))
    assertEquals(b_float(-65511.88), b_float(23.123) - b_char(Character.MAX_VALUE))

    assertEquals(b_float(-32.0), b_float(-32.0) - b_char(0))
    assertEquals(b_float(-55.0), b_float(-32.0) - b_char(23))
    assertEquals(b_float(-65567.0), b_float(-32.0) - b_char(Character.MAX_VALUE))

    assertEquals(b_float(-32.456), b_float(-32.456) - b_char(0))
    assertEquals(b_float(-55.456), b_float(-32.456) - b_char(23))
    assertEquals(b_float(-65567.45), b_float(-32.456) - b_char(Character.MAX_VALUE))

    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_char(0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_char(23))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_char(Character.MAX_VALUE))

    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_char(0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_char(23))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_char(Character.MAX_VALUE))

    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_char(0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_char(23))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_char(Character.MAX_VALUE))

    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_char(0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_char(23))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_char(Character.MAX_VALUE))

    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_float(Float.MIN_VALUE) - b_char(0))
    assertEquals(b_float(-23.0), b_float(Float.MIN_VALUE) - b_char(23))
    assertEquals(b_float(-65535.0), b_float(Float.MIN_VALUE) - b_char(Character.MAX_VALUE))

    assertEquals(Float, statictypeof(b_float(0.0) - b_char(0)))
  }

  function testFloatPIntSubtraction() {
    assertEquals(b_float(0.0), b_float(0.0) - p_int(0))
    assertEquals(b_float(-23.0), b_float(0.0) - p_int(23))
    assertEquals(b_float(32.0), b_float(0.0) - p_int(-32))
    assertEquals(b_float(Float.parseFloat("-2.14748365E9")), b_float(0.0) - p_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("2.14748365E9")), b_float(0.0) - p_int(Integer.MIN_VALUE))

    assertEquals(b_float(23.0), b_float(23.0) - p_int(0))
    assertEquals(b_float(0.0), b_float(23.0) - p_int(23))
    assertEquals(b_float(55.0), b_float(23.0) - p_int(-32))
    assertEquals(b_float(Float.parseFloat("-2.14748365E9")), b_float(23.0) - p_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("2.14748365E9")), b_float(23.0) - p_int(Integer.MIN_VALUE))

    assertEquals(b_float(23.123), b_float(23.123) - p_int(0))
    assertEquals(b_float(0.12299919), b_float(23.123) - p_int(23))
    assertEquals(b_float(55.123), b_float(23.123) - p_int(-32))
    assertEquals(b_float(Float.parseFloat("-2.14748365E9")), b_float(23.123) - p_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("2.14748365E9")), b_float(23.123) - p_int(Integer.MIN_VALUE))

    assertEquals(b_float(-32.0), b_float(-32.0) - p_int(0))
    assertEquals(b_float(-55.0), b_float(-32.0) - p_int(23))
    assertEquals(b_float(0.0), b_float(-32.0) - p_int(-32))
    assertEquals(b_float(Float.parseFloat("-2.14748365E9")), b_float(-32.0) - p_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("2.14748365E9")), b_float(-32.0) - p_int(Integer.MIN_VALUE))

    assertEquals(b_float(-32.456), b_float(-32.456) - p_int(0))
    assertEquals(b_float(-55.456), b_float(-32.456) - p_int(23))
    assertEquals(b_float(-0.45600128), b_float(-32.456) - p_int(-32))
    assertEquals(b_float(Float.parseFloat("-2.14748365E9")), b_float(-32.456) - p_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("2.14748365E9")), b_float(-32.456) - p_int(Integer.MIN_VALUE))

    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_int(0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_int(23))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_int(-32))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_int(Integer.MIN_VALUE))

    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_int(0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_int(23))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_int(-32))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_int(Integer.MIN_VALUE))

    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_int(0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_int(23))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_int(-32))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_int(Integer.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_int(0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_int(23))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_int(-32))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_int(Integer.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_float(Float.MIN_VALUE) - p_int(0))
    assertEquals(b_float(-23.0), b_float(Float.MIN_VALUE) - p_int(23))
    assertEquals(b_float(32.0), b_float(Float.MIN_VALUE) - p_int(-32))
    assertEquals(b_float(Float.parseFloat("-2.14748365E9")), b_float(Float.MIN_VALUE) - p_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("2.14748365E9")), b_float(Float.MIN_VALUE) - p_int(Integer.MIN_VALUE))

    assertEquals(Float, statictypeof(b_float(0.0) - p_int(0)))
  }

  function testFloatIntegerSubtraction() {
    assertEquals(b_float(0.0), b_float(0.0) - b_int(0))
    assertEquals(b_float(-23.0), b_float(0.0) - b_int(23))
    assertEquals(b_float(32.0), b_float(0.0) - b_int(-32))
    assertEquals(b_float(Float.parseFloat("-2.14748365E9")), b_float(0.0) - b_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("2.14748365E9")), b_float(0.0) - b_int(Integer.MIN_VALUE))

    assertEquals(b_float(23.0), b_float(23.0) - b_int(0))
    assertEquals(b_float(0.0), b_float(23.0) - b_int(23))
    assertEquals(b_float(55.0), b_float(23.0) - b_int(-32))
    assertEquals(b_float(Float.parseFloat("-2.14748365E9")), b_float(23.0) - b_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("2.14748365E9")), b_float(23.0) - b_int(Integer.MIN_VALUE))

    assertEquals(b_float(23.123), b_float(23.123) - b_int(0))
    assertEquals(b_float(0.12299919), b_float(23.123) - b_int(23))
    assertEquals(b_float(55.123), b_float(23.123) - b_int(-32))
    assertEquals(b_float(Float.parseFloat("-2.14748365E9")), b_float(23.123) - b_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("2.14748365E9")), b_float(23.123) - b_int(Integer.MIN_VALUE))

    assertEquals(b_float(-32.0), b_float(-32.0) - b_int(0))
    assertEquals(b_float(-55.0), b_float(-32.0) - b_int(23))
    assertEquals(b_float(0.0), b_float(-32.0) - b_int(-32))
    assertEquals(b_float(Float.parseFloat("-2.14748365E9")), b_float(-32.0) - b_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("2.14748365E9")), b_float(-32.0) - b_int(Integer.MIN_VALUE))

    assertEquals(b_float(-32.456), b_float(-32.456) - b_int(0))
    assertEquals(b_float(-55.456), b_float(-32.456) - b_int(23))
    assertEquals(b_float(-0.45600128), b_float(-32.456) - b_int(-32))
    assertEquals(b_float(Float.parseFloat("-2.14748365E9")), b_float(-32.456) - b_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("2.14748365E9")), b_float(-32.456) - b_int(Integer.MIN_VALUE))

    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_int(0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_int(23))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_int(-32))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_int(Integer.MIN_VALUE))

    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_int(0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_int(23))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_int(-32))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_int(Integer.MIN_VALUE))

    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_int(0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_int(23))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_int(-32))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_int(Integer.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_int(0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_int(23))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_int(-32))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_int(Integer.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_float(Float.MIN_VALUE) - b_int(0))
    assertEquals(b_float(-23.0), b_float(Float.MIN_VALUE) - b_int(23))
    assertEquals(b_float(32.0), b_float(Float.MIN_VALUE) - b_int(-32))
    assertEquals(b_float(Float.parseFloat("-2.14748365E9")), b_float(Float.MIN_VALUE) - b_int(Integer.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("2.14748365E9")), b_float(Float.MIN_VALUE) - b_int(Integer.MIN_VALUE))

    assertEquals(Float, statictypeof(b_float(0.0) - b_int(0)))
  }

  function testFloatPLongSubtraction() {
    assertEquals(b_float(0.0), b_float(0.0) - p_long(0))
    assertEquals(b_float(-23.0), b_float(0.0) - p_long(23))
    assertEquals(b_float(32.0), b_float(0.0) - p_long(-32))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_float(0.0) - p_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_float(0.0) - p_long(Long.MIN_VALUE))

    assertEquals(b_float(23.0), b_float(23.0) - p_long(0))
    assertEquals(b_float(0.0), b_float(23.0) - p_long(23))
    assertEquals(b_float(55.0), b_float(23.0) - p_long(-32))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_float(23.0) - p_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_float(23.0) - p_long(Long.MIN_VALUE))

    assertEquals(b_float(23.123), b_float(23.123) - p_long(0))
    assertEquals(b_float(0.12299919), b_float(23.123) - p_long(23))
    assertEquals(b_float(55.123), b_float(23.123) - p_long(-32))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_float(23.123) - p_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_float(23.123) - p_long(Long.MIN_VALUE))

    assertEquals(b_float(-32.0), b_float(-32.0) - p_long(0))
    assertEquals(b_float(-55.0), b_float(-32.0) - p_long(23))
    assertEquals(b_float(0.0), b_float(-32.0) - p_long(-32))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_float(-32.0) - p_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_float(-32.0) - p_long(Long.MIN_VALUE))

    assertEquals(b_float(-32.456), b_float(-32.456) - p_long(0))
    assertEquals(b_float(-55.456), b_float(-32.456) - p_long(23))
    assertEquals(b_float(-0.45600128), b_float(-32.456) - p_long(-32))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_float(-32.456) - p_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_float(-32.456) - p_long(Long.MIN_VALUE))

    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_long(0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_long(23))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_long(-32))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_long(Long.MIN_VALUE))

    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_long(0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_long(23))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_long(-32))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_long(Long.MIN_VALUE))

    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_long(0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_long(23))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_long(-32))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_long(Long.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_long(0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_long(23))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_long(-32))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_long(Long.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_float(Float.MIN_VALUE) - p_long(0))
    assertEquals(b_float(-23.0), b_float(Float.MIN_VALUE) - p_long(23))
    assertEquals(b_float(32.0), b_float(Float.MIN_VALUE) - p_long(-32))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_float(Float.MIN_VALUE) - p_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_float(Float.MIN_VALUE) - p_long(Long.MIN_VALUE))

    assertEquals(Float, statictypeof(b_float(0.0) - p_long(0)))
  }

  function testFloatLongSubtraction() {
    assertEquals(b_float(0.0), b_float(0.0) - b_long(0))
    assertEquals(b_float(-23.0), b_float(0.0) - b_long(23))
    assertEquals(b_float(32.0), b_float(0.0) - b_long(-32))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_float(0.0) - b_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_float(0.0) - b_long(Long.MIN_VALUE))

    assertEquals(b_float(23.0), b_float(23.0) - b_long(0))
    assertEquals(b_float(0.0), b_float(23.0) - b_long(23))
    assertEquals(b_float(55.0), b_float(23.0) - b_long(-32))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_float(23.0) - b_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_float(23.0) - b_long(Long.MIN_VALUE))

    assertEquals(b_float(23.123), b_float(23.123) - b_long(0))
    assertEquals(b_float(0.12299919), b_float(23.123) - b_long(23))
    assertEquals(b_float(55.123), b_float(23.123) - b_long(-32))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_float(23.123) - b_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_float(23.123) - b_long(Long.MIN_VALUE))

    assertEquals(b_float(-32.0), b_float(-32.0) - b_long(0))
    assertEquals(b_float(-55.0), b_float(-32.0) - b_long(23))
    assertEquals(b_float(0.0), b_float(-32.0) - b_long(-32))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_float(-32.0) - b_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_float(-32.0) - b_long(Long.MIN_VALUE))

    assertEquals(b_float(-32.456), b_float(-32.456) - b_long(0))
    assertEquals(b_float(-55.456), b_float(-32.456) - b_long(23))
    assertEquals(b_float(-0.45600128), b_float(-32.456) - b_long(-32))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_float(-32.456) - b_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_float(-32.456) - b_long(Long.MIN_VALUE))

    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_long(0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_long(23))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_long(-32))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_long(Long.MIN_VALUE))

    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_long(0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_long(23))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_long(-32))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_long(Long.MIN_VALUE))

    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_long(0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_long(23))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_long(-32))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_long(Long.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_long(0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_long(23))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_long(-32))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_long(Long.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_float(Float.MIN_VALUE) - b_long(0))
    assertEquals(b_float(-23.0), b_float(Float.MIN_VALUE) - b_long(23))
    assertEquals(b_float(32.0), b_float(Float.MIN_VALUE) - b_long(-32))
    assertEquals(b_float(Float.parseFloat("-9.223372E18")), b_float(Float.MIN_VALUE) - b_long(Long.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("9.223372E18")), b_float(Float.MIN_VALUE) - b_long(Long.MIN_VALUE))

    assertEquals(Float, statictypeof(b_float(0.0) - b_long(0)))
  }

  function testFloatPFloatSubtraction() {
    assertEquals(b_float(0.0), b_float(0.0) - p_float(0.0))
    assertEquals(b_float(-23.0), b_float(0.0) - p_float(23.0))
    assertEquals(b_float(-23.123), b_float(0.0) - p_float(23.123))
    assertEquals(b_float(32.0), b_float(0.0) - p_float(-32.0))
    assertEquals(b_float(32.456), b_float(0.0) - p_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(0.0) - p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(0.0) - p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(0.0) - p_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_float(0.0) - p_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("-1.4E-45")), b_float(0.0) - p_float(Float.MIN_VALUE))

    assertEquals(b_float(23.0), b_float(23.0) - p_float(0.0))
    assertEquals(b_float(0.0), b_float(23.0) - p_float(23.0))
    assertEquals(b_float(-0.12299919), b_float(23.0) - p_float(23.123))
    assertEquals(b_float(55.0), b_float(23.0) - p_float(-32.0))
    assertEquals(b_float(55.456), b_float(23.0) - p_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(23.0) - p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(23.0) - p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(23.0) - p_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_float(23.0) - p_float(Float.MAX_VALUE))
    assertEquals(b_float(23.0), b_float(23.0) - p_float(Float.MIN_VALUE))

    assertEquals(b_float(23.123), b_float(23.123) - p_float(0.0))
    assertEquals(b_float(0.12299919), b_float(23.123) - p_float(23.0))
    assertEquals(b_float(0.0), b_float(23.123) - p_float(23.123))
    assertEquals(b_float(55.123), b_float(23.123) - p_float(-32.0))
    assertEquals(b_float(55.579002), b_float(23.123) - p_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(23.123) - p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(23.123) - p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(23.123) - p_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_float(23.123) - p_float(Float.MAX_VALUE))
    assertEquals(b_float(23.123), b_float(23.123) - p_float(Float.MIN_VALUE))

    assertEquals(b_float(-32.0), b_float(-32.0) - p_float(0.0))
    assertEquals(b_float(-55.0), b_float(-32.0) - p_float(23.0))
    assertEquals(b_float(-55.123), b_float(-32.0) - p_float(23.123))
    assertEquals(b_float(0.0), b_float(-32.0) - p_float(-32.0))
    assertEquals(b_float(0.45600128), b_float(-32.0) - p_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(-32.0) - p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(-32.0) - p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(-32.0) - p_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_float(-32.0) - p_float(Float.MAX_VALUE))
    assertEquals(b_float(-32.0), b_float(-32.0) - p_float(Float.MIN_VALUE))

    assertEquals(b_float(-32.456), b_float(-32.456) - p_float(0.0))
    assertEquals(b_float(-55.456), b_float(-32.456) - p_float(23.0))
    assertEquals(b_float(-55.579002), b_float(-32.456) - p_float(23.123))
    assertEquals(b_float(-0.45600128), b_float(-32.456) - p_float(-32.0))
    assertEquals(b_float(0.0), b_float(-32.456) - p_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(-32.456) - p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(-32.456) - p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(-32.456) - p_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_float(-32.456) - p_float(Float.MAX_VALUE))
    assertEquals(b_float(-32.456), b_float(-32.456) - p_float(Float.MIN_VALUE))

    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_float(0.0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_float(23.0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_float(23.123))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_float(-32.0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_float(-32.456))
    assertEquals(b_float(Float.NaN_), b_float(Float.POSITIVE_INFINITY) - p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.POSITIVE_INFINITY) - p_float(Float.NaN_))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_float(Float.MIN_VALUE))

    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_float(0.0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_float(23.0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_float(23.123))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_float(-32.0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.NEGATIVE_INFINITY) - p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.NEGATIVE_INFINITY) - p_float(Float.NaN_))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_float(Float.MIN_VALUE))

    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_float(0.0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_float(23.0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_float(23.123))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_float(-32.0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_float(-32.456))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_float(Float.NaN_))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - p_float(Float.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_float(0.0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_float(23.0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_float(23.123))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_float(-32.0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.MAX_VALUE) - p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.MAX_VALUE) - p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.MAX_VALUE) - p_float(Float.NaN_))
    assertEquals(b_float(0.0), b_float(Float.MAX_VALUE) - p_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - p_float(Float.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_float(Float.MIN_VALUE) - p_float(0.0))
    assertEquals(b_float(-23.0), b_float(Float.MIN_VALUE) - p_float(23.0))
    assertEquals(b_float(-23.123), b_float(Float.MIN_VALUE) - p_float(23.123))
    assertEquals(b_float(32.0), b_float(Float.MIN_VALUE) - p_float(-32.0))
    assertEquals(b_float(32.456), b_float(Float.MIN_VALUE) - p_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.MIN_VALUE) - p_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.MIN_VALUE) - p_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.MIN_VALUE) - p_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_float(Float.MIN_VALUE) - p_float(Float.MAX_VALUE))
    assertEquals(b_float(0.0), b_float(Float.MIN_VALUE) - p_float(Float.MIN_VALUE))

    assertEquals(Float, statictypeof(b_float(0.0) - p_float(0.0)))
  }

  function testFloatFloatSubtraction() {
    assertEquals(b_float(0.0), b_float(0.0) - b_float(0.0))
    assertEquals(b_float(-23.0), b_float(0.0) - b_float(23.0))
    assertEquals(b_float(-23.123), b_float(0.0) - b_float(23.123))
    assertEquals(b_float(32.0), b_float(0.0) - b_float(-32.0))
    assertEquals(b_float(32.456), b_float(0.0) - b_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(0.0) - b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(0.0) - b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(0.0) - b_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_float(0.0) - b_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("-1.4E-45")), b_float(0.0) - b_float(Float.MIN_VALUE))

    assertEquals(b_float(23.0), b_float(23.0) - b_float(0.0))
    assertEquals(b_float(0.0), b_float(23.0) - b_float(23.0))
    assertEquals(b_float(-0.12299919), b_float(23.0) - b_float(23.123))
    assertEquals(b_float(55.0), b_float(23.0) - b_float(-32.0))
    assertEquals(b_float(55.456), b_float(23.0) - b_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(23.0) - b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(23.0) - b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(23.0) - b_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_float(23.0) - b_float(Float.MAX_VALUE))
    assertEquals(b_float(23.0), b_float(23.0) - b_float(Float.MIN_VALUE))

    assertEquals(b_float(23.123), b_float(23.123) - b_float(0.0))
    assertEquals(b_float(0.12299919), b_float(23.123) - b_float(23.0))
    assertEquals(b_float(0.0), b_float(23.123) - b_float(23.123))
    assertEquals(b_float(55.123), b_float(23.123) - b_float(-32.0))
    assertEquals(b_float(55.579002), b_float(23.123) - b_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(23.123) - b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(23.123) - b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(23.123) - b_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_float(23.123) - b_float(Float.MAX_VALUE))
    assertEquals(b_float(23.123), b_float(23.123) - b_float(Float.MIN_VALUE))

    assertEquals(b_float(-32.0), b_float(-32.0) - b_float(0.0))
    assertEquals(b_float(-55.0), b_float(-32.0) - b_float(23.0))
    assertEquals(b_float(-55.123), b_float(-32.0) - b_float(23.123))
    assertEquals(b_float(0.0), b_float(-32.0) - b_float(-32.0))
    assertEquals(b_float(0.45600128), b_float(-32.0) - b_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(-32.0) - b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(-32.0) - b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(-32.0) - b_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_float(-32.0) - b_float(Float.MAX_VALUE))
    assertEquals(b_float(-32.0), b_float(-32.0) - b_float(Float.MIN_VALUE))

    assertEquals(b_float(-32.456), b_float(-32.456) - b_float(0.0))
    assertEquals(b_float(-55.456), b_float(-32.456) - b_float(23.0))
    assertEquals(b_float(-55.579002), b_float(-32.456) - b_float(23.123))
    assertEquals(b_float(-0.45600128), b_float(-32.456) - b_float(-32.0))
    assertEquals(b_float(0.0), b_float(-32.456) - b_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(-32.456) - b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(-32.456) - b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(-32.456) - b_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_float(-32.456) - b_float(Float.MAX_VALUE))
    assertEquals(b_float(-32.456), b_float(-32.456) - b_float(Float.MIN_VALUE))

    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_float(0.0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_float(23.0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_float(23.123))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_float(-32.0))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_float(-32.456))
    assertEquals(b_float(Float.NaN_), b_float(Float.POSITIVE_INFINITY) - b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.POSITIVE_INFINITY) - b_float(Float.NaN_))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_float(Float.MIN_VALUE))

    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_float(0.0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_float(23.0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_float(23.123))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_float(-32.0))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.NEGATIVE_INFINITY) - b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.NEGATIVE_INFINITY) - b_float(Float.NaN_))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_float(Float.MIN_VALUE))

    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_float(0.0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_float(23.0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_float(23.123))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_float(-32.0))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_float(-32.456))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_float(Float.NaN_))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.NaN_), b_float(Float.NaN_) - b_float(Float.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_float(0.0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_float(23.0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_float(23.123))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_float(-32.0))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.MAX_VALUE) - b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.MAX_VALUE) - b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.MAX_VALUE) - b_float(Float.NaN_))
    assertEquals(b_float(0.0), b_float(Float.MAX_VALUE) - b_float(Float.MAX_VALUE))
    assertEquals(b_float(Float.parseFloat("3.4028235E38")), b_float(Float.MAX_VALUE) - b_float(Float.MIN_VALUE))

    assertEquals(b_float(Float.parseFloat("1.4E-45")), b_float(Float.MIN_VALUE) - b_float(0.0))
    assertEquals(b_float(-23.0), b_float(Float.MIN_VALUE) - b_float(23.0))
    assertEquals(b_float(-23.123), b_float(Float.MIN_VALUE) - b_float(23.123))
    assertEquals(b_float(32.0), b_float(Float.MIN_VALUE) - b_float(-32.0))
    assertEquals(b_float(32.456), b_float(Float.MIN_VALUE) - b_float(-32.456))
    assertEquals(b_float(Float.NEGATIVE_INFINITY), b_float(Float.MIN_VALUE) - b_float(Float.POSITIVE_INFINITY))
    assertEquals(b_float(Float.POSITIVE_INFINITY), b_float(Float.MIN_VALUE) - b_float(Float.NEGATIVE_INFINITY))
    assertEquals(b_float(Float.NaN_), b_float(Float.MIN_VALUE) - b_float(Float.NaN_))
    assertEquals(b_float(Float.parseFloat("-3.4028235E38")), b_float(Float.MIN_VALUE) - b_float(Float.MAX_VALUE))
    assertEquals(b_float(0.0), b_float(Float.MIN_VALUE) - b_float(Float.MIN_VALUE))

    assertEquals(Float, statictypeof(b_float(0.0) - b_float(0.0)))
  }

  function testFloatPDoubleSubtraction() {
    assertEquals(b_double(0.0), b_float(0.0) - p_double(0.0))
    assertEquals(b_double(-23.0), b_float(0.0) - p_double(23.0))
    assertEquals(b_double(-23.123), b_float(0.0) - p_double(23.123))
    assertEquals(b_double(32.0), b_float(0.0) - p_double(-32.0))
    assertEquals(b_double(32.456), b_float(0.0) - p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(0.0) - p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(0.0) - p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(0.0) - p_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(0.0) - p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_float(0.0) - p_double(Double.MIN_VALUE))

    assertEquals(b_double(23.0), b_float(23.0) - p_double(0.0))
    assertEquals(b_double(0.0), b_float(23.0) - p_double(23.0))
    assertEquals(b_double(-0.12300000000000111), b_float(23.0) - p_double(23.123))
    assertEquals(b_double(55.0), b_float(23.0) - p_double(-32.0))
    assertEquals(b_double(55.456), b_float(23.0) - p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(23.0) - p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(23.0) - p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(23.0) - p_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(23.0) - p_double(Double.MAX_VALUE))
    assertEquals(b_double(23.0), b_float(23.0) - p_double(Double.MIN_VALUE))

    assertEquals(b_double(23.12299919128418), b_float(23.123) - p_double(0.0))
    assertEquals(b_double(0.12299919128417969), b_float(23.123) - p_double(23.0))
    assertEquals(b_double(Double.parseDouble("-8.087158214209467E-7")), b_float(23.123) - p_double(23.123))
    assertEquals(b_double(55.12299919128418), b_float(23.123) - p_double(-32.0))
    assertEquals(b_double(55.57899919128418), b_float(23.123) - p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(23.123) - p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(23.123) - p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(23.123) - p_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(23.123) - p_double(Double.MAX_VALUE))
    assertEquals(b_double(23.12299919128418), b_float(23.123) - p_double(Double.MIN_VALUE))

    assertEquals(b_double(-32.0), b_float(-32.0) - p_double(0.0))
    assertEquals(b_double(-55.0), b_float(-32.0) - p_double(23.0))
    assertEquals(b_double(-55.123000000000005), b_float(-32.0) - p_double(23.123))
    assertEquals(b_double(0.0), b_float(-32.0) - p_double(-32.0))
    assertEquals(b_double(0.45600000000000307), b_float(-32.0) - p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(-32.0) - p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(-32.0) - p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(-32.0) - p_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(-32.0) - p_double(Double.MAX_VALUE))
    assertEquals(b_double(-32.0), b_float(-32.0) - p_double(Double.MIN_VALUE))

    assertEquals(b_double(-32.45600128173828), b_float(-32.456) - p_double(0.0))
    assertEquals(b_double(-55.45600128173828), b_float(-32.456) - p_double(23.0))
    assertEquals(b_double(-55.579001281738286), b_float(-32.456) - p_double(23.123))
    assertEquals(b_double(-0.45600128173828125), b_float(-32.456) - p_double(-32.0))
    assertEquals(b_double(Double.parseDouble("-1.2817382781804554E-6")), b_float(-32.456) - p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(-32.456) - p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(-32.456) - p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(-32.456) - p_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(-32.456) - p_double(Double.MAX_VALUE))
    assertEquals(b_double(-32.45600128173828), b_float(-32.456) - p_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_double(0.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_double(23.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_double(23.123))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_double(-32.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_double(-32.456))
    assertEquals(b_double(Double.NaN_), b_float(Float.POSITIVE_INFINITY) - p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.POSITIVE_INFINITY) - p_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - p_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_double(0.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_double(23.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_double(23.123))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_double(-32.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.NEGATIVE_INFINITY) - p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.NEGATIVE_INFINITY) - p_double(Double.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - p_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - p_double(0.0))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - p_double(23.0))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - p_double(23.123))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - p_double(-32.0))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - p_double(-32.456))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - p_double(Double.NaN_))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - p_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_float(Float.MAX_VALUE) - p_double(0.0))
    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_float(Float.MAX_VALUE) - p_double(23.0))
    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_float(Float.MAX_VALUE) - p_double(23.123))
    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_float(Float.MAX_VALUE) - p_double(-32.0))
    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_float(Float.MAX_VALUE) - p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.MAX_VALUE) - p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.MAX_VALUE) - p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.MAX_VALUE) - p_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(Float.MAX_VALUE) - p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_float(Float.MAX_VALUE) - p_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.parseDouble("1.401298464324817E-45")), b_float(Float.MIN_VALUE) - p_double(0.0))
    assertEquals(b_double(-23.0), b_float(Float.MIN_VALUE) - p_double(23.0))
    assertEquals(b_double(-23.123), b_float(Float.MIN_VALUE) - p_double(23.123))
    assertEquals(b_double(32.0), b_float(Float.MIN_VALUE) - p_double(-32.0))
    assertEquals(b_double(32.456), b_float(Float.MIN_VALUE) - p_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.MIN_VALUE) - p_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.MIN_VALUE) - p_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.MIN_VALUE) - p_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(Float.MIN_VALUE) - p_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("1.401298464324817E-45")), b_float(Float.MIN_VALUE) - p_double(Double.MIN_VALUE))

    assertEquals(Double, statictypeof(b_float(0.0) - p_double(0.0)))
  }

  function testFloatDoubleSubtraction() {
    assertEquals(b_double(0.0), b_float(0.0) - b_double(0.0))
    assertEquals(b_double(-23.0), b_float(0.0) - b_double(23.0))
    assertEquals(b_double(-23.123), b_float(0.0) - b_double(23.123))
    assertEquals(b_double(32.0), b_float(0.0) - b_double(-32.0))
    assertEquals(b_double(32.456), b_float(0.0) - b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(0.0) - b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(0.0) - b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(0.0) - b_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(0.0) - b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("-4.9E-324")), b_float(0.0) - b_double(Double.MIN_VALUE))

    assertEquals(b_double(23.0), b_float(23.0) - b_double(0.0))
    assertEquals(b_double(0.0), b_float(23.0) - b_double(23.0))
    assertEquals(b_double(-0.12300000000000111), b_float(23.0) - b_double(23.123))
    assertEquals(b_double(55.0), b_float(23.0) - b_double(-32.0))
    assertEquals(b_double(55.456), b_float(23.0) - b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(23.0) - b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(23.0) - b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(23.0) - b_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(23.0) - b_double(Double.MAX_VALUE))
    assertEquals(b_double(23.0), b_float(23.0) - b_double(Double.MIN_VALUE))

    assertEquals(b_double(23.12299919128418), b_float(23.123) - b_double(0.0))
    assertEquals(b_double(0.12299919128417969), b_float(23.123) - b_double(23.0))
    assertEquals(b_double(Double.parseDouble("-8.087158214209467E-7")), b_float(23.123) - b_double(23.123))
    assertEquals(b_double(55.12299919128418), b_float(23.123) - b_double(-32.0))
    assertEquals(b_double(55.57899919128418), b_float(23.123) - b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(23.123) - b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(23.123) - b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(23.123) - b_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(23.123) - b_double(Double.MAX_VALUE))
    assertEquals(b_double(23.12299919128418), b_float(23.123) - b_double(Double.MIN_VALUE))

    assertEquals(b_double(-32.0), b_float(-32.0) - b_double(0.0))
    assertEquals(b_double(-55.0), b_float(-32.0) - b_double(23.0))
    assertEquals(b_double(-55.123000000000005), b_float(-32.0) - b_double(23.123))
    assertEquals(b_double(0.0), b_float(-32.0) - b_double(-32.0))
    assertEquals(b_double(0.45600000000000307), b_float(-32.0) - b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(-32.0) - b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(-32.0) - b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(-32.0) - b_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(-32.0) - b_double(Double.MAX_VALUE))
    assertEquals(b_double(-32.0), b_float(-32.0) - b_double(Double.MIN_VALUE))

    assertEquals(b_double(-32.45600128173828), b_float(-32.456) - b_double(0.0))
    assertEquals(b_double(-55.45600128173828), b_float(-32.456) - b_double(23.0))
    assertEquals(b_double(-55.579001281738286), b_float(-32.456) - b_double(23.123))
    assertEquals(b_double(-0.45600128173828125), b_float(-32.456) - b_double(-32.0))
    assertEquals(b_double(Double.parseDouble("-1.2817382781804554E-6")), b_float(-32.456) - b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(-32.456) - b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(-32.456) - b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(-32.456) - b_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(-32.456) - b_double(Double.MAX_VALUE))
    assertEquals(b_double(-32.45600128173828), b_float(-32.456) - b_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_double(0.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_double(23.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_double(23.123))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_double(-32.0))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_double(-32.456))
    assertEquals(b_double(Double.NaN_), b_float(Float.POSITIVE_INFINITY) - b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.POSITIVE_INFINITY) - b_double(Double.NaN_))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.POSITIVE_INFINITY) - b_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_double(0.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_double(23.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_double(23.123))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_double(-32.0))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.NEGATIVE_INFINITY) - b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.NEGATIVE_INFINITY) - b_double(Double.NaN_))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.NEGATIVE_INFINITY) - b_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - b_double(0.0))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - b_double(23.0))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - b_double(23.123))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - b_double(-32.0))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - b_double(-32.456))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - b_double(Double.NaN_))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.NaN_), b_float(Float.NaN_) - b_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_float(Float.MAX_VALUE) - b_double(0.0))
    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_float(Float.MAX_VALUE) - b_double(23.0))
    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_float(Float.MAX_VALUE) - b_double(23.123))
    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_float(Float.MAX_VALUE) - b_double(-32.0))
    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_float(Float.MAX_VALUE) - b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.MAX_VALUE) - b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.MAX_VALUE) - b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.MAX_VALUE) - b_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(Float.MAX_VALUE) - b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("3.4028234663852886E38")), b_float(Float.MAX_VALUE) - b_double(Double.MIN_VALUE))

    assertEquals(b_double(Double.parseDouble("1.401298464324817E-45")), b_float(Float.MIN_VALUE) - b_double(0.0))
    assertEquals(b_double(-23.0), b_float(Float.MIN_VALUE) - b_double(23.0))
    assertEquals(b_double(-23.123), b_float(Float.MIN_VALUE) - b_double(23.123))
    assertEquals(b_double(32.0), b_float(Float.MIN_VALUE) - b_double(-32.0))
    assertEquals(b_double(32.456), b_float(Float.MIN_VALUE) - b_double(-32.456))
    assertEquals(b_double(Double.NEGATIVE_INFINITY), b_float(Float.MIN_VALUE) - b_double(Double.POSITIVE_INFINITY))
    assertEquals(b_double(Double.POSITIVE_INFINITY), b_float(Float.MIN_VALUE) - b_double(Double.NEGATIVE_INFINITY))
    assertEquals(b_double(Double.NaN_), b_float(Float.MIN_VALUE) - b_double(Double.NaN_))
    assertEquals(b_double(Double.parseDouble("-1.7976931348623157E308")), b_float(Float.MIN_VALUE) - b_double(Double.MAX_VALUE))
    assertEquals(b_double(Double.parseDouble("1.401298464324817E-45")), b_float(Float.MIN_VALUE) - b_double(Double.MIN_VALUE))

    assertEquals(Double, statictypeof(b_float(0.0) - b_double(0.0)))
  }

  function testFloatBigIntegerSubtraction() {
    assertEquals(big_decimal("0.0"), b_float(0.0) - big_int("0"))
    assertEquals(big_decimal("-23.0"), b_float(0.0) - big_int("23"))
    assertEquals(big_decimal("32.0"), b_float(0.0) - big_int("-32"))
    assertEquals(big_decimal("-123456789012345678901234567890.0"), b_float(0.0) - big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("123456789012345678901234567890.0"), b_float(0.0) - big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("23.0"), b_float(23.0) - big_int("0"))
    assertEquals(big_decimal("0.0"), b_float(23.0) - big_int("23"))
    assertEquals(big_decimal("55.0"), b_float(23.0) - big_int("-32"))
    assertEquals(big_decimal("-123456789012345678901234567867.0"), b_float(23.0) - big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("123456789012345678901234567913.0"), b_float(23.0) - big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("23.123"), b_float(23.123) - big_int("0"))
    assertEquals(big_decimal("0.123"), b_float(23.123) - big_int("23"))
    assertEquals(big_decimal("55.123"), b_float(23.123) - big_int("-32"))
    assertEquals(big_decimal("-123456789012345678901234567866.877"), b_float(23.123) - big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("123456789012345678901234567913.123"), b_float(23.123) - big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("-32.0"), b_float(-32.0) - big_int("0"))
    assertEquals(big_decimal("-55.0"), b_float(-32.0) - big_int("23"))
    assertEquals(big_decimal("0.0"), b_float(-32.0) - big_int("-32"))
    assertEquals(big_decimal("-123456789012345678901234567922.0"), b_float(-32.0) - big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("123456789012345678901234567858.0"), b_float(-32.0) - big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("-32.456"), b_float(-32.456) - big_int("0"))
    assertEquals(big_decimal("-55.456"), b_float(-32.456) - big_int("23"))
    assertEquals(big_decimal("-0.456"), b_float(-32.456) - big_int("-32"))
    assertEquals(big_decimal("-123456789012345678901234567922.456"), b_float(-32.456) - big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("123456789012345678901234567857.544"), b_float(-32.456) - big_int("-123456789012345678901234567890"))

    // Skipped test assertEquals(something, b_float(Float.POSITIVE_INFINITY) - big_int("0"))
    // Skipped test assertEquals(something, b_float(Float.POSITIVE_INFINITY) - big_int("23"))
    // Skipped test assertEquals(something, b_float(Float.POSITIVE_INFINITY) - big_int("-32"))
    // Skipped test assertEquals(something, b_float(Float.POSITIVE_INFINITY) - big_int("123456789012345678901234567890"))
    // Skipped test assertEquals(something, b_float(Float.POSITIVE_INFINITY) - big_int("-123456789012345678901234567890"))

    // Skipped test assertEquals(something, b_float(Float.NEGATIVE_INFINITY) - big_int("0"))
    // Skipped test assertEquals(something, b_float(Float.NEGATIVE_INFINITY) - big_int("23"))
    // Skipped test assertEquals(something, b_float(Float.NEGATIVE_INFINITY) - big_int("-32"))
    // Skipped test assertEquals(something, b_float(Float.NEGATIVE_INFINITY) - big_int("123456789012345678901234567890"))
    // Skipped test assertEquals(something, b_float(Float.NEGATIVE_INFINITY) - big_int("-123456789012345678901234567890"))

    // Skipped test assertEquals(something, b_float(Float.NaN_) - big_int("0"))
    // Skipped test assertEquals(something, b_float(Float.NaN_) - big_int("23"))
    // Skipped test assertEquals(something, b_float(Float.NaN_) - big_int("-32"))
    // Skipped test assertEquals(something, b_float(Float.NaN_) - big_int("123456789012345678901234567890"))
    // Skipped test assertEquals(something, b_float(Float.NaN_) - big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("340282350000000000000000000000000000000"), b_float(Float.MAX_VALUE) - big_int("0"))
    assertEquals(big_decimal("340282349999999999999999999999999999977"), b_float(Float.MAX_VALUE) - big_int("23"))
    assertEquals(big_decimal("340282350000000000000000000000000000032"), b_float(Float.MAX_VALUE) - big_int("-32"))
    assertEquals(big_decimal("340282349876543210987654321098765432110"), b_float(Float.MAX_VALUE) - big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("340282350123456789012345678901234567890"), b_float(Float.MAX_VALUE) - big_int("-123456789012345678901234567890"))

    assertEquals(big_decimal("1.4E-45"), b_float(Float.MIN_VALUE) - big_int("0"))
    assertEquals(big_decimal("-22.9999999999999999999999999999999999999999999986"), b_float(Float.MIN_VALUE) - big_int("23"))
    assertEquals(big_decimal("32.0000000000000000000000000000000000000000000014"), b_float(Float.MIN_VALUE) - big_int("-32"))
    assertEquals(big_decimal("-123456789012345678901234567889.9999999999999999999999999999999999999999999986"), b_float(Float.MIN_VALUE) - big_int("123456789012345678901234567890"))
    assertEquals(big_decimal("123456789012345678901234567890.0000000000000000000000000000000000000000000014"), b_float(Float.MIN_VALUE) - big_int("-123456789012345678901234567890"))

    assertEquals(BigDecimal, statictypeof(b_float(0.0) - big_int("0")))
  }

  function testFloatBigDecimalSubtraction() {
    assertEquals(big_decimal("0.0"), b_float(0.0) - big_decimal("0"))
    assertEquals(big_decimal("-23.0"), b_float(0.0) - big_decimal("23"))
    assertEquals(big_decimal("-23.123"), b_float(0.0) - big_decimal("23.123"))
    assertEquals(big_decimal("32.0"), b_float(0.0) - big_decimal("-32"))
    assertEquals(big_decimal("32.456"), b_float(0.0) - big_decimal("-32.456"))
    assertEquals(big_decimal("-123456789012345678901234567890.123456789"), b_float(0.0) - big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("123456789012345678901234567890.123456789"), b_float(0.0) - big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("23.0"), b_float(23.0) - big_decimal("0"))
    assertEquals(big_decimal("0.0"), b_float(23.0) - big_decimal("23"))
    assertEquals(big_decimal("-0.123"), b_float(23.0) - big_decimal("23.123"))
    assertEquals(big_decimal("55.0"), b_float(23.0) - big_decimal("-32"))
    assertEquals(big_decimal("55.456"), b_float(23.0) - big_decimal("-32.456"))
    assertEquals(big_decimal("-123456789012345678901234567867.123456789"), b_float(23.0) - big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("123456789012345678901234567913.123456789"), b_float(23.0) - big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("23.123"), b_float(23.123) - big_decimal("0"))
    assertEquals(big_decimal("0.123"), b_float(23.123) - big_decimal("23"))
    assertEquals(big_decimal("0.000"), b_float(23.123) - big_decimal("23.123"))
    assertEquals(big_decimal("55.123"), b_float(23.123) - big_decimal("-32"))
    assertEquals(big_decimal("55.579"), b_float(23.123) - big_decimal("-32.456"))
    assertEquals(big_decimal("-123456789012345678901234567867.000456789"), b_float(23.123) - big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("123456789012345678901234567913.246456789"), b_float(23.123) - big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("-32.0"), b_float(-32.0) - big_decimal("0"))
    assertEquals(big_decimal("-55.0"), b_float(-32.0) - big_decimal("23"))
    assertEquals(big_decimal("-55.123"), b_float(-32.0) - big_decimal("23.123"))
    assertEquals(big_decimal("0.0"), b_float(-32.0) - big_decimal("-32"))
    assertEquals(big_decimal("0.456"), b_float(-32.0) - big_decimal("-32.456"))
    assertEquals(big_decimal("-123456789012345678901234567922.123456789"), b_float(-32.0) - big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("123456789012345678901234567858.123456789"), b_float(-32.0) - big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("-32.456"), b_float(-32.456) - big_decimal("0"))
    assertEquals(big_decimal("-55.456"), b_float(-32.456) - big_decimal("23"))
    assertEquals(big_decimal("-55.579"), b_float(-32.456) - big_decimal("23.123"))
    assertEquals(big_decimal("-0.456"), b_float(-32.456) - big_decimal("-32"))
    assertEquals(big_decimal("0.000"), b_float(-32.456) - big_decimal("-32.456"))
    assertEquals(big_decimal("-123456789012345678901234567922.579456789"), b_float(-32.456) - big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("123456789012345678901234567857.667456789"), b_float(-32.456) - big_decimal("-123456789012345678901234567890.123456789"))

    // Skipped test assertEquals(something, b_float(Float.POSITIVE_INFINITY) - big_decimal("0"))
    // Skipped test assertEquals(something, b_float(Float.POSITIVE_INFINITY) - big_decimal("23"))
    // Skipped test assertEquals(something, b_float(Float.POSITIVE_INFINITY) - big_decimal("23.123"))
    // Skipped test assertEquals(something, b_float(Float.POSITIVE_INFINITY) - big_decimal("-32"))
    // Skipped test assertEquals(something, b_float(Float.POSITIVE_INFINITY) - big_decimal("-32.456"))
    // Skipped test assertEquals(something, b_float(Float.POSITIVE_INFINITY) - big_decimal("123456789012345678901234567890.123456789"))
    // Skipped test assertEquals(something, b_float(Float.POSITIVE_INFINITY) - big_decimal("-123456789012345678901234567890.123456789"))

    // Skipped test assertEquals(something, b_float(Float.NEGATIVE_INFINITY) - big_decimal("0"))
    // Skipped test assertEquals(something, b_float(Float.NEGATIVE_INFINITY) - big_decimal("23"))
    // Skipped test assertEquals(something, b_float(Float.NEGATIVE_INFINITY) - big_decimal("23.123"))
    // Skipped test assertEquals(something, b_float(Float.NEGATIVE_INFINITY) - big_decimal("-32"))
    // Skipped test assertEquals(something, b_float(Float.NEGATIVE_INFINITY) - big_decimal("-32.456"))
    // Skipped test assertEquals(something, b_float(Float.NEGATIVE_INFINITY) - big_decimal("123456789012345678901234567890.123456789"))
    // Skipped test assertEquals(something, b_float(Float.NEGATIVE_INFINITY) - big_decimal("-123456789012345678901234567890.123456789"))

    // Skipped test assertEquals(something, b_float(Float.NaN_) - big_decimal("0"))
    // Skipped test assertEquals(something, b_float(Float.NaN_) - big_decimal("23"))
    // Skipped test assertEquals(something, b_float(Float.NaN_) - big_decimal("23.123"))
    // Skipped test assertEquals(something, b_float(Float.NaN_) - big_decimal("-32"))
    // Skipped test assertEquals(something, b_float(Float.NaN_) - big_decimal("-32.456"))
    // Skipped test assertEquals(something, b_float(Float.NaN_) - big_decimal("123456789012345678901234567890.123456789"))
    // Skipped test assertEquals(something, b_float(Float.NaN_) - big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("340282350000000000000000000000000000000"), b_float(Float.MAX_VALUE) - big_decimal("0"))
    assertEquals(big_decimal("340282349999999999999999999999999999977"), b_float(Float.MAX_VALUE) - big_decimal("23"))
    assertEquals(big_decimal("340282349999999999999999999999999999976.877"), b_float(Float.MAX_VALUE) - big_decimal("23.123"))
    assertEquals(big_decimal("340282350000000000000000000000000000032"), b_float(Float.MAX_VALUE) - big_decimal("-32"))
    assertEquals(big_decimal("340282350000000000000000000000000000032.456"), b_float(Float.MAX_VALUE) - big_decimal("-32.456"))
    assertEquals(big_decimal("340282349876543210987654321098765432109.876543211"), b_float(Float.MAX_VALUE) - big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("340282350123456789012345678901234567890.123456789"), b_float(Float.MAX_VALUE) - big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(big_decimal("1.4E-45"), b_float(Float.MIN_VALUE) - big_decimal("0"))
    assertEquals(big_decimal("-22.9999999999999999999999999999999999999999999986"), b_float(Float.MIN_VALUE) - big_decimal("23"))
    assertEquals(big_decimal("-23.1229999999999999999999999999999999999999999986"), b_float(Float.MIN_VALUE) - big_decimal("23.123"))
    assertEquals(big_decimal("32.0000000000000000000000000000000000000000000014"), b_float(Float.MIN_VALUE) - big_decimal("-32"))
    assertEquals(big_decimal("32.4560000000000000000000000000000000000000000014"), b_float(Float.MIN_VALUE) - big_decimal("-32.456"))
    assertEquals(big_decimal("-123456789012345678901234567890.1234567889999999999999999999999999999999999986"), b_float(Float.MIN_VALUE) - big_decimal("123456789012345678901234567890.123456789"))
    assertEquals(big_decimal("123456789012345678901234567890.1234567890000000000000000000000000000000000014"), b_float(Float.MIN_VALUE) - big_decimal("-123456789012345678901234567890.123456789"))

    assertEquals(BigDecimal, statictypeof(b_float(0.0) - big_decimal("0")))
  }

}

