defaults: &defaults
  environment:
    TZ: "/usr/share/zoneinfo/America/Los_Angeles"
    TERM: dumb
    MAVEN_OPTS: "-Xmx1024m"
  docker:
    - image: circleci/openjdk:11-jdk
version: 2.1
parameters:
  run_workflow_deploy-snapshot:
    default: false
    type: boolean
  run_workflow_release:
    default: false
    type: boolean
  snapshot-version:
    default: "1-X-SNAPSHOT"
    type: string
  release-version:
    default: "99.99.99"
    type: string
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: v1-test-{{ checksum "gosu-parent/pom.xml" }}
      - run:
          name: Run compile
          command: mvn compile
      - save_cache:
          key: v1-test-{{ checksum "gosu-parent/pom.xml" }}
          paths:
            - ~/.m2
      - save_cache:
          key: v1-cache-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - ~/project
  test-java11:
    <<: *defaults
    steps:
      - restore_cache:
          key: v1-cache-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - restore_cache:
          key: v1-test-{{ checksum "gosu-parent/pom.xml" }}
      - run:
          name: Run tests
          command: mvn test -B
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/target/surefire-reports/.*-output.txt" -exec cp {} ~/junit/ \;
          when: always
      - store_artifacts:
          path: ~/junit
      - store_test_results:
          path: ~/junit
      - save_cache:
          key: v1-test-{{ checksum "gosu-parent/pom.xml" }}
          paths:
            - ~/.m2
  deploy-snapshot:
    <<: *defaults
    steps:
      - restore_cache:
          key: v1-cache-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - restore_cache:
          key: v1-test-{{ checksum "gosu-parent/pom.xml" }}
      - run:
          name: Update version
          command: ./.circleci/update_version.sh << pipeline.parameters.snapshot-version >>
      - run:
          name: Deploy snapshot artifacts
      #    command: ./.circleci/deploy_snapshot.sh
          command: mvn deploy -Dmaven.main.skip=true -Dmaven.resources.skip=true -Dmaven.test.skip=true -s settings.xml -B
      - save_cache:
          key: v1-test-{{ checksum "gosu-parent/pom.xml" }}
          paths:
            - ~/.m2
  release:
    <<: *defaults
    steps:
      - restore_cache:
          key: v1-cache-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - restore_cache:
          key: v1-test-{{ checksum "gosu-parent/pom.xml" }}
      - run:
          name: import GPG key
          command: echo -e "$GPG_KEY" | gpg --import
      - run:
          name: Prepare and release
          command: ./.circleci/prepare_release.sh << pipeline.parameters.release-version >>
      - run:
          name: Deploy snapshot artifacts
          command: ./.circleci/release_gosu.sh
      - save_cache:
          key: v1-test-{{ checksum "gosu-parent/pom.xml" }}
          paths:
            - ~/.m2

workflows:
  version: 2
  build_and_test_all_branches:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - /rel\/.*/
      - test-java11:
          requires:
            - build
  build_test_deploy-snapshot:
    when: << pipeline.parameters.run_workflow_deploy-snapshot >>
    jobs:
      - build
      - test-java11:
          requires:
            - build
      - deploy-snapshot:
          requires:
            - build
            - test-java11
          filters:
            branches:
              only:
                - /rel\/.*/
                - /feature\/.*/
  build_test_release:
    when: << pipeline.parameters.run_workflow_release >>
    jobs:
      - build:
          filters:
            branches:
              only:
                - /rel\/.*/
      - test-java11:
          requires:
            - build
      - hold_release:
          type: approval
          requires:
            - build
            - test-java11
      - release:
          requires:
            - hold_release