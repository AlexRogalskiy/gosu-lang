<?xml version="1.0"?>
<class>
  <desc/>
  <method name="getModule">
    <desc>The module having this repository</desc>
  </method>
  <method name="findClass">
    <desc>Finds the ISourceFileHandle for a given fully-qualified class name, or null if no such source file exists</desc>
    <return>The source file handle for the given class, or null if no such
  source file exists.</return>
    <param name="strQualifiedClassName" type="java.lang.String">the fully-qualified name of the class</param>
    <param name="extensions" type="[Ljava.lang.String;"/>
  </method>
  <method name="findResource">
    <desc>Finds the given resource in this repository.

&lt;p&gt; The name of a resource is a '&lt;tt&gt;/&lt;/tt&gt;'-separated path name that
identifies the resource.</desc>
    <return>the URL of the resource or null if the resource cannot be found.</return>
    <param name="name" type="java.lang.String">the name of the resource</param>
  </method>
  <method name="getAllTypeNames">
    <desc/>
    <return>A set containing all type names in this repository (includes enhancement names)</return>
  </method>
  <method name="getAllTypeNames">
    <desc>Returns the names of all types in this repository that end with one of the specified file extensions</desc>
    <return>A set containing all the type names in this repository.</return>
    <param name="extensions" type="[Ljava.lang.String;">the set of file name extensions to consider</param>
  </method>
  <method name="getTypeNames">
    <desc>Returns all type names in the given namespace and with the given extensions.</desc>
    <param name="namespace" type="java.lang.String"/>
    <param name="extensions" type="java.util.Set"/>
    <param name="loader" type="gw.lang.reflect.ITypeLoader"/>
  </method>
  <method name="hasNamespace">
    <desc>Returns the number of namespaces this repository has matching the given name.
Note a namespace can span multiple source roots, hence the integer return value -- one per source root.</desc>
    <param name="namespace" type="java.lang.String"/>
  </method>
  <method name="typesRefreshed">
    <desc>Called when a type is refreshed</desc>
    <param name="request" type="gw.lang.reflect.RefreshRequest"/>
  </method>
  <method name="namespaceRefreshed">
    <desc>Called when a namespace is refreshed</desc>
    <param name="namespace" type="java.lang.String"/>
    <param name="dir" type="gw.fs.IDirectory"/>
    <param name="kind" type="gw.lang.reflect.RefreshKind"/>
  </method>
</class>