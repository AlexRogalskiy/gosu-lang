<?xml version="1.0"?>
<class>
  <desc/>
  <method name="parameterize">
    <desc>Create a new FunctionType based on the type parameters assigned to the type
vars in actualParamByVarName.
&lt;p&gt;
It is important to note that this form of parameterization is different
from calling getParameterizedType(). The latter creates a parameterization
of a generic function e.g., function foo&amp;lt;T&amp;gt;() where T is a type var
on the function.
&lt;p&gt;
This here method is for parameterizing a function type that has references
to external type vars e.g., class Fred&amp;lt;T&amp;gt; { function foo( t : T ){} }
where T is a type var on the containing class.</desc>
    <return>A parameterized version of the source FunctionType</return>
    <param name="source" type="gw.lang.reflect.FunctionType">The raw form of a FunctionType having possible references to
  type vars defined in its containing class.</param>
    <param name="actualParamByVarName" type="gw.lang.parser.TypeVarToTypeMap">A map of concrete types by type var name
  e.g., "T" -&gt; String</param>
    <param name="bKeepTypeVars" type="boolean">Indicates whether or not a type var referenced in the
  source FunctionType that cannot be resolved via the actualParamByVarName
  map should remain as a TypeVariableType or should be converted to its
  bounding type.</param>
  </method>
  <method name="getIntrinsicType">
    <desc/>
    <return>The instrinic type of this FunctionType's return type.</return>
  </method>
  <cons>
    <desc>Construct a FunctionType with the specified return type and parameter types array.</desc>
    <param name="strFunctionName" type="java.lang.String">The name of the function</param>
    <param name="retType" type="gw.lang.reflect.IType">The return type of the function.</param>
    <param name="paramTypes" type="[Lgw.lang.reflect.IType;">The parameter types. Can be null if no params.</param>
  </cons>
  <cons>
    <desc>Construct a generic FunctionType with the specified return type, parameter
types, and generic type variables.</desc>
    <param name="strFunctionName" type="java.lang.String">The name of the function</param>
    <param name="retType" type="gw.lang.reflect.IType">The return type of the function.</param>
    <param name="paramTypes" type="[Lgw.lang.reflect.IType;">The parameter types. Can be null if no params.</param>
    <param name="typeVars" type="[Lgw.lang.reflect.gs.IGenericTypeVariable;">The generic type variables. If null, does not create a
                       generic function type.</param>
  </cons>
  <var name="CURRENT">
    <desc/>
  </var>
</class>